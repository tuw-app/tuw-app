2022-12-05 10:07:59.337 +01:00 [INF] measuring-system started
2022-12-05 10:07:59.458 +01:00 [INF] MeasureDevice 10.10.10.10 -> Path is d:\tuw\log\
2022-12-05 10:07:59.463 +01:00 [INF] MeasureDevice 10.10.10.10 -> Initialize device...
2022-12-05 10:07:59.471 +01:00 [INF] MeasureDevice 20.20.20.20 -> Path is d:\tuw\log\
2022-12-05 10:07:59.472 +01:00 [INF] MeasureDevice 10.10.10.10 -> StoringDataPeriodically->Init
2022-12-05 10:07:59.473 +01:00 [INF] MeasureDevice 20.20.20.20 -> Initialize device...
2022-12-05 10:07:59.475 +01:00 [INF] MeasureDevice 10.10.10.10 -> StoringDataPeriodically->Init->Path is d:\tuw\log\
2022-12-05 10:07:59.477 +01:00 [INF] SendBackupFileSystem -> Send Started
2022-12-05 10:07:59.481 +01:00 [INF] MeasureDevice 20.20.20.20 -> StoringDataPeriodically->Init
2022-12-05 10:07:59.482 +01:00 [INF] SendBackupFileSystem -> Send Started
2022-12-05 10:07:59.482 +01:00 [INF] MeasureDevice 30.30.30.30 -> Path is d:\tuw\log\
2022-12-05 10:07:59.483 +01:00 [INF] MeasureDevice 20.20.20.20 -> StoringDataPeriodically->Init->Path is d:\tuw\log\
2022-12-05 10:07:59.485 +01:00 [INF] MeasureDevice 30.30.30.30 -> Initialize device...
2022-12-05 10:07:59.494 +01:00 [INF] MeasureDevice 30.30.30.30 -> StoringDataPeriodically->Init
2022-12-05 10:07:59.494 +01:00 [INF] SendBackupFileSystem -> Send Started
2022-12-05 10:07:59.497 +01:00 [INF] MeasureDevice 30.30.30.30 -> StoringDataPeriodically->Init->Path is d:\tuw\log\
2022-12-05 10:07:59.506 +01:00 [INF] MeasureDevice 10.10.10.10 -> StartAsync
2022-12-05 10:07:59.507 +01:00 [INF] MeasureDevice 10.10.10.10 -> StartAsync, mesuring interval is 5000
2022-12-05 10:07:59.510 +01:00 [INF] Token cancel is not requested
2022-12-05 10:07:59.518 +01:00 [INF] MeasureDeviceAPIService -> Uri is http://localhost:5001/api/md/
2022-12-05 10:07:59.526 +01:00 [INF] MeasureDeviceAPIService -> Sended data -> {"Id":1,"Name":"10.10.10.10","Interval":5000,"$type":"EFMeasureDevice"}
2022-12-05 10:08:01.368 +01:00 [INF] MeasureDeviceAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:08:01.375 +01:00 [INF] MeasureDevice 10.10.10.10 -> ExecuteAsync
2022-12-05 10:08:01.377 +01:00 [INF] ExecuteAsync Token cancel is not requested
2022-12-05 10:08:01.379 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 08:01
2022-12-05 10:08:06.355 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:08:06.357 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:08:06.384 +01:00 [INF] MeasureDevice 20.20.20.20 -> StartAsync
2022-12-05 10:08:06.385 +01:00 [INF] MeasureDevice 20.20.20.20 -> StartAsync, mesuring interval is 2000
2022-12-05 10:08:06.386 +01:00 [INF] Token cancel is not requested
2022-12-05 10:08:06.387 +01:00 [INF] MeasureDeviceAPIService -> Uri is http://localhost:5001/api/md/
2022-12-05 10:08:06.388 +01:00 [INF] MeasureDeviceAPIService -> Sended data -> {"Id":2,"Name":"20.20.20.20","Interval":2000,"$type":"EFMeasureDevice"}
2022-12-05 10:08:06.503 +01:00 [INF] MeasureDeviceAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:08:06.505 +01:00 [INF] MeasureDevice 20.20.20.20 -> ExecuteAsync
2022-12-05 10:08:06.506 +01:00 [INF] ExecuteAsync Token cancel is not requested
2022-12-05 10:08:06.506 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:06
2022-12-05 10:08:06.508 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:06.509 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:06.511 +01:00 [INF] MeasureDevice 30.30.30.30 -> StartAsync
2022-12-05 10:08:06.512 +01:00 [INF] MeasureDevice 30.30.30.30 -> StartAsync, mesuring interval is 3000
2022-12-05 10:08:06.516 +01:00 [INF] Token cancel is not requested
2022-12-05 10:08:06.517 +01:00 [INF] MeasureDeviceAPIService -> Uri is http://localhost:5001/api/md/
2022-12-05 10:08:06.518 +01:00 [INF] MeasureDeviceAPIService -> Sended data -> {"Id":3,"Name":"30.30.30.30","Interval":3000,"$type":"EFMeasureDevice"}
2022-12-05 10:08:06.595 +01:00 [INF] MeasureDeviceAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:08:06.596 +01:00 [INF] MeasureDevice 30.30.30.30 -> ExecuteAsync
2022-12-05 10:08:06.597 +01:00 [INF] ExecuteAsync Token cancel is not requested
2022-12-05 10:08:06.598 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 08:06
2022-12-05 10:08:06.599 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:08:06.600 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:08:06.677 +01:00 [INF] Now listening on: http://localhost:5000
2022-12-05 10:08:06.678 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2022-12-05 10:08:06.679 +01:00 [INF] Hosting environment: Development
2022-12-05 10:08:06.680 +01:00 [INF] Content root path: C:\csarp\tuw-app-end\measuring-device-service-api
2022-12-05 10:08:07.235 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:08:07)
2022-12-05 10:08:07.238 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:08:07.239 +01:00 [INF] MeasureDevice 10.10.10.10 -> StoringDataPeriodically->Init -> Peek first data: CPU usage-> 100%.
2022-12-05 10:08:07.241 +01:00 [INF] MeasureDevice 10.10.10.10 -> StoringDataPeriodically->Init -> First mesured data: CPU usage-> 100%.
2022-12-05 10:08:07.242 +01:00 [INF] MeasureDevice 10.10.10.10 -> StoringDataPeriodically->Init -> No sotre file id
2022-12-05 10:08:07.244 +01:00 [INF] MeasureDevice 10.10.10.10 -> StoringDataPeriodically->Init -> New sotre file id 2022-12-5-10-8.txt
2022-12-05 10:08:07.246 +01:00 [INF] MeasureDevice 10.10.10.10 -> StoringDataPeriodically->Init -> No CPU data store periodically
2022-12-05 10:08:07.249 +01:00 [INF] MeasureDevice 10.10.10.10 -> StoringDataPeriodically->Init -> New CPU data store d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:07.251 +01:00 [INF] MeasureDevice 10.10.10.10 -> StoringDataPeriodically->Init -> First Data Id is: 
2022-12-05 10:08:07.253 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:07.2352465+01:00" stamp is good.
2022-12-05 10:08:07.255 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:08:07.256 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:07.259 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> File not exsist. File created.
2022-12-05 10:08:07.260 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:08:07,235;1;100 stored.
2022-12-05 10:08:07.262 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:07.451 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:08:07)
2022-12-05 10:08:07.453 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:08:07.456 +01:00 [INF] MeasureDevice 30.30.30.30 -> StoringDataPeriodically->Init -> Peek first data: CPU usage-> 100%.
2022-12-05 10:08:07.458 +01:00 [INF] MeasureDevice 30.30.30.30 -> StoringDataPeriodically->Init -> First mesured data: CPU usage-> 100%.
2022-12-05 10:08:07.460 +01:00 [INF] MeasureDevice 30.30.30.30 -> StoringDataPeriodically->Init -> No sotre file id
2022-12-05 10:08:07.461 +01:00 [INF] MeasureDevice 30.30.30.30 -> StoringDataPeriodically->Init -> New sotre file id 2022-12-5-10-8.txt
2022-12-05 10:08:07.463 +01:00 [INF] MeasureDevice 30.30.30.30 -> StoringDataPeriodically->Init -> No CPU data store periodically
2022-12-05 10:08:07.465 +01:00 [INF] MeasureDevice 30.30.30.30 -> StoringDataPeriodically->Init -> New CPU data store d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:07.469 +01:00 [INF] MeasureDevice 30.30.30.30 -> StoringDataPeriodically->Init -> First Data Id is: 
2022-12-05 10:08:07.470 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:07.4510939+01:00" stamp is good.
2022-12-05 10:08:07.471 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:08:07.473 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:07.474 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> File not exsist. File created.
2022-12-05 10:08:07.476 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:08:07,451;1;100 stored.
2022-12-05 10:08:07.477 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:08.201 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:08)
2022-12-05 10:08:08.203 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:08:08.204 +01:00 [INF] MeasureDevice 20.20.20.20 -> StoringDataPeriodically->Init -> Peek first data: CPU usage-> 100%.
2022-12-05 10:08:08.206 +01:00 [INF] MeasureDevice 20.20.20.20 -> StoringDataPeriodically->Init -> First mesured data: CPU usage-> 100%.
2022-12-05 10:08:08.208 +01:00 [INF] MeasureDevice 20.20.20.20 -> StoringDataPeriodically->Init -> No sotre file id
2022-12-05 10:08:08.209 +01:00 [INF] MeasureDevice 20.20.20.20 -> StoringDataPeriodically->Init -> New sotre file id 2022-12-5-10-8.txt
2022-12-05 10:08:08.211 +01:00 [INF] MeasureDevice 20.20.20.20 -> StoringDataPeriodically->Init -> No CPU data store periodically
2022-12-05 10:08:08.213 +01:00 [INF] MeasureDevice 20.20.20.20 -> StoringDataPeriodically->Init -> New CPU data store d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:08.214 +01:00 [INF] MeasureDevice 20.20.20.20 -> StoringDataPeriodically->Init -> First Data Id is: 
2022-12-05 10:08:08.216 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:08.2010866+01:00" stamp is good.
2022-12-05 10:08:08.219 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:08.221 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:08.223 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> File not exsist. File created.
2022-12-05 10:08:08.224 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:08,201;1;100 stored.
2022-12-05 10:08:08.226 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:08.497 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:08
2022-12-05 10:08:08.499 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:08.501 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:08.513 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:08)
2022-12-05 10:08:08.515 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:08.517 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:08.5136774+01:00" stamp is good.
2022-12-05 10:08:08.518 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:08.519 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:08.520 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:08,513;2;75,00096130371094
2022-12-05 10:08:08.522 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:08,513;2;75,00096130371094 stored.
2022-12-05 10:08:08.523 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:09.607 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 08:09
2022-12-05 10:08:09.608 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:08:09.610 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:08:09.623 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:08:09)
2022-12-05 10:08:09.625 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:09.626 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:09.6232296+01:00" stamp is good.
2022-12-05 10:08:09.628 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:08:09.629 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:09.630 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 30.30.30.30;2022-12-05 10:08:09,623;2;75,00399780273438
2022-12-05 10:08:09.632 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:08:09,623;2;75,00399780273438 stored.
2022-12-05 10:08:09.634 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:10.498 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:10
2022-12-05 10:08:10.499 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:10.500 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:10.538 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:10)
2022-12-05 10:08:10.539 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 78,1%. is added to queue
2022-12-05 10:08:10.541 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:10.5381111+01:00" stamp is good.
2022-12-05 10:08:10.542 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:10.543 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:10.544 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:10,538;3;78,09679412841797
2022-12-05 10:08:10.546 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:10,538;3;78,09679412841797 stored.
2022-12-05 10:08:10.547 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:11.376 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 08:11
2022-12-05 10:08:11.377 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:08:11.378 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:08:11.392 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:08:11)
2022-12-05 10:08:11.394 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 67,44%. is added to queue
2022-12-05 10:08:11.396 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:11.3923978+01:00" stamp is good.
2022-12-05 10:08:11.397 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:08:11.398 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:11.399 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 10.10.10.10;2022-12-05 10:08:11,392;2;67,4412612915039
2022-12-05 10:08:11.401 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:08:11,392;2;67,4412612915039 stored.
2022-12-05 10:08:11.402 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:12.516 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:12
2022-12-05 10:08:12.518 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:12.519 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:12.532 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:12)
2022-12-05 10:08:12.534 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:12.536 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:12.5327059+01:00" stamp is good.
2022-12-05 10:08:12.537 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:12.538 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:12.540 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:12,532;4;75,00415802001953
2022-12-05 10:08:12.542 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:12,532;4;75,00415802001953 stored.
2022-12-05 10:08:12.543 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:12.610 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 08:12
2022-12-05 10:08:12.612 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:08:12.613 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:08:12.626 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:08:12)
2022-12-05 10:08:12.628 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:12.630 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:12.6264845+01:00" stamp is good.
2022-12-05 10:08:12.631 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:08:12.632 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:12.634 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 30.30.30.30;2022-12-05 10:08:12,626;3;75,00128173828125
2022-12-05 10:08:12.635 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:08:12,626;3;75,00128173828125 stored.
2022-12-05 10:08:12.637 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:14.523 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:14
2022-12-05 10:08:14.525 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:14.526 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:14.539 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:14)
2022-12-05 10:08:14.541 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 87,5%. is added to queue
2022-12-05 10:08:14.542 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:14.5395686+01:00" stamp is good.
2022-12-05 10:08:14.544 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:14.545 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:14.546 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:14,539;5;87,50296020507812
2022-12-05 10:08:14.547 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:14,539;5;87,50296020507812 stored.
2022-12-05 10:08:14.549 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:15.617 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 08:15
2022-12-05 10:08:15.618 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:08:15.619 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:08:15.633 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:08:15)
2022-12-05 10:08:15.635 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:15.636 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:15.6331375+01:00" stamp is good.
2022-12-05 10:08:15.638 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:08:15.639 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:15.640 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 30.30.30.30;2022-12-05 10:08:15,633;4;75,00016021728516
2022-12-05 10:08:15.642 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:08:15,633;4;75,00016021728516 stored.
2022-12-05 10:08:15.643 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:16.386 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 08:16
2022-12-05 10:08:16.388 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:08:16.389 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:08:16.418 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:08:16)
2022-12-05 10:08:16.420 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 93,26%. is added to queue
2022-12-05 10:08:16.422 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:16.4187063+01:00" stamp is good.
2022-12-05 10:08:16.424 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:08:16.428 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:16.429 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 10.10.10.10;2022-12-05 10:08:16,418;3;93,26457214355469
2022-12-05 10:08:16.430 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:08:16,418;3;93,26457214355469 stored.
2022-12-05 10:08:16.432 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:16.527 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:16
2022-12-05 10:08:16.529 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:16.530 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:16.559 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:16)
2022-12-05 10:08:16.560 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 85,53%. is added to queue
2022-12-05 10:08:16.562 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:16.5590813+01:00" stamp is good.
2022-12-05 10:08:16.563 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:16.564 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:16.566 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:16,559;6;85,5333480834961
2022-12-05 10:08:16.567 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:16,559;6;85,5333480834961 stored.
2022-12-05 10:08:16.569 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:18.540 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:18
2022-12-05 10:08:18.542 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:18.543 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:18.556 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:18)
2022-12-05 10:08:18.558 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 67,44%. is added to queue
2022-12-05 10:08:18.560 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:18.5568475+01:00" stamp is good.
2022-12-05 10:08:18.561 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:18.562 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:18.563 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:18,556;7;67,44316101074219
2022-12-05 10:08:18.565 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:18,556;7;67,44316101074219 stored.
2022-12-05 10:08:18.566 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:18.636 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 08:18
2022-12-05 10:08:18.638 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:08:18.639 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:08:18.668 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:08:18)
2022-12-05 10:08:18.670 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 93,02%. is added to queue
2022-12-05 10:08:18.672 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:18.6688283+01:00" stamp is good.
2022-12-05 10:08:18.673 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:08:18.674 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:18.676 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 30.30.30.30;2022-12-05 10:08:18,668;5;93,02423858642578
2022-12-05 10:08:18.677 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:08:18,668;5;93,02423858642578 stored.
2022-12-05 10:08:18.679 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:20.545 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:20
2022-12-05 10:08:20.547 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:20.548 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:20.577 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:20)
2022-12-05 10:08:20.579 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:08:20.581 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:20.5778050+01:00" stamp is good.
2022-12-05 10:08:20.582 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:20.583 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:20.584 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:20,577;8;100
2022-12-05 10:08:20.585 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:20,577;8;100 stored.
2022-12-05 10:08:20.587 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:21.396 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 08:21
2022-12-05 10:08:21.398 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:08:21.398 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:08:21.411 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:08:21)
2022-12-05 10:08:21.413 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:08:21.415 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:21.4118235+01:00" stamp is good.
2022-12-05 10:08:21.415 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:08:21.417 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:21.419 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 10.10.10.10;2022-12-05 10:08:21,411;4;100
2022-12-05 10:08:21.420 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:08:21,411;4;100 stored.
2022-12-05 10:08:21.422 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:21.648 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 08:21
2022-12-05 10:08:21.649 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:08:21.650 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:08:21.663 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:08:21)
2022-12-05 10:08:21.666 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:08:21.667 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:21.6637945+01:00" stamp is good.
2022-12-05 10:08:21.673 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:08:21.674 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:21.675 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 30.30.30.30;2022-12-05 10:08:21,663;6;100
2022-12-05 10:08:21.681 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:08:21,663;6;100 stored.
2022-12-05 10:08:21.687 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:22.555 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:22
2022-12-05 10:08:22.557 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:22.558 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:22.570 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:22)
2022-12-05 10:08:22.573 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 64,48%. is added to queue
2022-12-05 10:08:22.574 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:22.5709807+01:00" stamp is good.
2022-12-05 10:08:22.576 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:22.577 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:22.578 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:22,570;9;64,4839859008789
2022-12-05 10:08:22.579 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:22,570;9;64,4839859008789 stored.
2022-12-05 10:08:22.581 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:24.572 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:24
2022-12-05 10:08:24.574 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:24.575 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:24.587 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:24)
2022-12-05 10:08:24.589 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:08:24.591 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:24.5876044+01:00" stamp is good.
2022-12-05 10:08:24.592 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:24.594 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:24.595 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:24,587;10;100
2022-12-05 10:08:24.596 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:24,587;10;100 stored.
2022-12-05 10:08:24.598 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:24.665 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 08:24
2022-12-05 10:08:24.667 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:08:24.668 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:08:24.681 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:08:24)
2022-12-05 10:08:24.683 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 67,45%. is added to queue
2022-12-05 10:08:24.685 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:24.6816743+01:00" stamp is good.
2022-12-05 10:08:24.686 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:08:24.687 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:24.688 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 30.30.30.30;2022-12-05 10:08:24,681;7;67,44722747802734
2022-12-05 10:08:24.690 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:08:24,681;7;67,44722747802734 stored.
2022-12-05 10:08:24.692 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:26.420 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 08:26
2022-12-05 10:08:26.422 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:08:26.423 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:08:26.452 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:08:26)
2022-12-05 10:08:26.454 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 79,07%. is added to queue
2022-12-05 10:08:26.456 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:26.4528548+01:00" stamp is good.
2022-12-05 10:08:26.457 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:08:26.458 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:26.459 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 10.10.10.10;2022-12-05 10:08:26,452;5;79,07334899902344
2022-12-05 10:08:26.461 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:08:26,452;5;79,07334899902344 stored.
2022-12-05 10:08:26.462 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:26.580 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:26
2022-12-05 10:08:26.582 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:26.583 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:26.596 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:26)
2022-12-05 10:08:26.598 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 67,44%. is added to queue
2022-12-05 10:08:26.600 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:26.5968747+01:00" stamp is good.
2022-12-05 10:08:26.601 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:26.603 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:26.604 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:26,596;11;67,44426727294922
2022-12-05 10:08:26.605 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:26,596;11;67,44426727294922 stored.
2022-12-05 10:08:26.607 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:27.673 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 08:27
2022-12-05 10:08:27.675 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:08:27.676 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:08:27.689 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:08:27)
2022-12-05 10:08:27.691 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 87,5%. is added to queue
2022-12-05 10:08:27.693 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:27.6894248+01:00" stamp is good.
2022-12-05 10:08:27.694 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:08:27.695 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:27.696 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 30.30.30.30;2022-12-05 10:08:27,689;8;87,50335693359375
2022-12-05 10:08:27.698 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:08:27,689;8;87,50335693359375 stored.
2022-12-05 10:08:27.699 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:28.596 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:28
2022-12-05 10:08:28.598 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:28.599 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:28.612 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:28)
2022-12-05 10:08:28.615 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:28.616 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:28.6128158+01:00" stamp is good.
2022-12-05 10:08:28.617 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:28.619 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:28.620 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:28,612;12;75,00080108642578
2022-12-05 10:08:28.621 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:28,612;12;75,00080108642578 stored.
2022-12-05 10:08:28.623 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:30.616 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:30
2022-12-05 10:08:30.618 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:30.619 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:30.632 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:30)
2022-12-05 10:08:30.634 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:30.636 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:30.6322731+01:00" stamp is good.
2022-12-05 10:08:30.637 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:30.638 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:30.639 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:30,632;13;74,99727630615234
2022-12-05 10:08:30.640 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:30,632;13;74,99727630615234 stored.
2022-12-05 10:08:30.642 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:30.679 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 08:30
2022-12-05 10:08:30.681 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:08:30.682 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:08:30.695 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:08:30)
2022-12-05 10:08:30.697 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:30.699 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:30.6953091+01:00" stamp is good.
2022-12-05 10:08:30.700 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:08:30.701 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:30.703 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 30.30.30.30;2022-12-05 10:08:30,695;9;74,9968032836914
2022-12-05 10:08:30.704 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:08:30,695;9;74,9968032836914 stored.
2022-12-05 10:08:30.706 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:31.434 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 08:31
2022-12-05 10:08:31.436 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:08:31.437 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:08:31.450 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:08:31)
2022-12-05 10:08:31.452 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:31.454 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:31.4504691+01:00" stamp is good.
2022-12-05 10:08:31.455 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:08:31.456 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:31.457 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 10.10.10.10;2022-12-05 10:08:31,450;6;75,00016021728516
2022-12-05 10:08:31.459 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:08:31,450;6;75,00016021728516 stored.
2022-12-05 10:08:31.460 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:32.625 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:32
2022-12-05 10:08:32.627 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:32.628 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:32.641 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:32)
2022-12-05 10:08:32.643 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:32.645 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:32.6417138+01:00" stamp is good.
2022-12-05 10:08:32.646 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:32.647 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:32.649 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:32,641;14;75,00160217285156
2022-12-05 10:08:32.650 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:32,641;14;75,00160217285156 stored.
2022-12-05 10:08:32.651 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:33.686 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 08:33
2022-12-05 10:08:33.688 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:08:33.689 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:08:33.702 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:08:33)
2022-12-05 10:08:33.704 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:33.716 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:33.7027573+01:00" stamp is good.
2022-12-05 10:08:33.717 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:08:33.720 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:33.721 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 30.30.30.30;2022-12-05 10:08:33,702;10;74,99935913085938
2022-12-05 10:08:33.722 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:08:33,702;10;74,99935913085938 stored.
2022-12-05 10:08:33.724 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:34.636 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:34
2022-12-05 10:08:34.637 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:34.639 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:34.651 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:34)
2022-12-05 10:08:34.654 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:34.655 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:34.6519701+01:00" stamp is good.
2022-12-05 10:08:34.656 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:34.657 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:34.659 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:34,651;15;74,99983978271484
2022-12-05 10:08:34.660 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:34,651;15;74,99983978271484 stored.
2022-12-05 10:08:34.661 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:36.444 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 08:36
2022-12-05 10:08:36.446 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:08:36.447 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:08:36.460 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:08:36)
2022-12-05 10:08:36.462 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 67,44%. is added to queue
2022-12-05 10:08:36.464 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:36.4607854+01:00" stamp is good.
2022-12-05 10:08:36.465 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:08:36.466 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:36.467 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 10.10.10.10;2022-12-05 10:08:36,460;7;67,44261932373047
2022-12-05 10:08:36.469 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:08:36,460;7;67,44261932373047 stored.
2022-12-05 10:08:36.470 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:36.645 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:36
2022-12-05 10:08:36.647 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:36.648 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:36.661 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:36)
2022-12-05 10:08:36.663 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:36.665 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:36.6616736+01:00" stamp is good.
2022-12-05 10:08:36.666 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:36.668 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:36.669 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:36,661;16;74,99759674072266
2022-12-05 10:08:36.670 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:36,661;16;74,99759674072266 stored.
2022-12-05 10:08:36.672 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:36.692 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 08:36
2022-12-05 10:08:36.694 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:08:36.695 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:08:36.708 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:08:36)
2022-12-05 10:08:36.710 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:36.712 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:36.7085697+01:00" stamp is good.
2022-12-05 10:08:36.713 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:08:36.714 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:36.715 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 30.30.30.30;2022-12-05 10:08:36,708;11;74,99935913085938
2022-12-05 10:08:36.716 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:08:36,708;11;74,99935913085938 stored.
2022-12-05 10:08:36.718 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:38.660 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:38
2022-12-05 10:08:38.662 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:38.663 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:38.676 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:38)
2022-12-05 10:08:38.678 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:38.680 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:38.6768061+01:00" stamp is good.
2022-12-05 10:08:38.681 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:38.682 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:38.683 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:38,676;17;75,00383758544922
2022-12-05 10:08:38.684 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:38,676;17;75,00383758544922 stored.
2022-12-05 10:08:38.686 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:39.697 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 08:39
2022-12-05 10:08:39.699 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:08:39.700 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:08:39.713 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:08:39)
2022-12-05 10:08:39.715 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:39.717 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:39.7136669+01:00" stamp is good.
2022-12-05 10:08:39.718 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:08:39.720 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:39.721 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 30.30.30.30;2022-12-05 10:08:39,713;12;74,99919891357422
2022-12-05 10:08:39.722 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:08:39,713;12;74,99919891357422 stored.
2022-12-05 10:08:39.724 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:40.670 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:40
2022-12-05 10:08:40.672 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:40.673 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:40.686 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:40)
2022-12-05 10:08:40.688 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:40.689 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:40.6861328+01:00" stamp is good.
2022-12-05 10:08:40.691 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:40.692 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:40.693 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:40,686;18;74,99935913085938
2022-12-05 10:08:40.694 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:40,686;18;74,99935913085938 stored.
2022-12-05 10:08:40.696 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:41.454 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 08:41
2022-12-05 10:08:41.455 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:08:41.457 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:08:41.470 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:08:41)
2022-12-05 10:08:41.472 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:41.473 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:41.4700462+01:00" stamp is good.
2022-12-05 10:08:41.475 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:08:41.476 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:41.477 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 10.10.10.10;2022-12-05 10:08:41,470;8;75,00303649902344
2022-12-05 10:08:41.478 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:08:41,470;8;75,00303649902344 stored.
2022-12-05 10:08:41.480 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:42.676 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:42
2022-12-05 10:08:42.678 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:42.679 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:42.692 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:42)
2022-12-05 10:08:42.694 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:42.695 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:42.6923620+01:00" stamp is good.
2022-12-05 10:08:42.697 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:42.698 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:42.699 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:42,692;19;74,99903869628906
2022-12-05 10:08:42.700 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:42,692;19;74,99903869628906 stored.
2022-12-05 10:08:42.701 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:42.707 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 08:42
2022-12-05 10:08:42.710 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:08:42.711 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:08:42.723 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:08:42)
2022-12-05 10:08:42.726 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75,01%. is added to queue
2022-12-05 10:08:42.727 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:42.7236864+01:00" stamp is good.
2022-12-05 10:08:42.729 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:08:42.730 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:42.731 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 30.30.30.30;2022-12-05 10:08:42,723;13;75,0078353881836
2022-12-05 10:08:42.733 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:08:42,723;13;75,0078353881836 stored.
2022-12-05 10:08:42.734 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:44.683 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:44
2022-12-05 10:08:44.685 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:44.686 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:44.715 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:44)
2022-12-05 10:08:44.717 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 86,05%. is added to queue
2022-12-05 10:08:44.718 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:44.7157799+01:00" stamp is good.
2022-12-05 10:08:44.720 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:44.721 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:44.722 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:44,715;20;86,04862976074219
2022-12-05 10:08:44.724 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:44,715;20;86,04862976074219 stored.
2022-12-05 10:08:44.725 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:45.719 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 08:45
2022-12-05 10:08:45.721 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:08:45.722 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:08:45.736 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:08:45)
2022-12-05 10:08:45.738 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 84,98%. is added to queue
2022-12-05 10:08:45.739 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:45.7361783+01:00" stamp is good.
2022-12-05 10:08:45.742 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:08:45.743 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:45.745 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 30.30.30.30;2022-12-05 10:08:45,736;14;84,97731018066406
2022-12-05 10:08:45.746 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:08:45,736;14;84,97731018066406 stored.
2022-12-05 10:08:45.747 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:46.462 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 08:46
2022-12-05 10:08:46.464 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:08:46.465 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:08:46.478 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:08:46)
2022-12-05 10:08:46.480 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:46.482 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:46.4787151+01:00" stamp is good.
2022-12-05 10:08:46.483 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:08:46.484 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:46.486 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 10.10.10.10;2022-12-05 10:08:46,478;9;74,9988784790039
2022-12-05 10:08:46.487 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:08:46,478;9;74,9988784790039 stored.
2022-12-05 10:08:46.488 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:46.700 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:46
2022-12-05 10:08:46.702 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:46.703 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:46.716 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:46)
2022-12-05 10:08:46.718 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 87,5%. is added to queue
2022-12-05 10:08:46.720 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:46.7165495+01:00" stamp is good.
2022-12-05 10:08:46.721 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:46.723 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:46.724 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:46,716;21;87,49864196777344
2022-12-05 10:08:46.725 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:46,716;21;87,49864196777344 stored.
2022-12-05 10:08:46.727 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:48.708 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:48
2022-12-05 10:08:48.710 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:48.711 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:48.724 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 08:48
2022-12-05 10:08:48.724 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:48)
2022-12-05 10:08:48.726 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:08:48.727 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:48.729 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:08:48.730 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:48.7248107+01:00" stamp is good.
2022-12-05 10:08:48.732 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:48.734 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:48.735 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:48,724;22;75,0014419555664
2022-12-05 10:08:48.736 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:48,724;22;75,0014419555664 stored.
2022-12-05 10:08:48.738 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:48.740 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:08:48)
2022-12-05 10:08:48.744 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:48.745 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:48.7404360+01:00" stamp is good.
2022-12-05 10:08:48.746 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:08:48.747 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:48.749 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 30.30.30.30;2022-12-05 10:08:48,740;15;75,00048065185547
2022-12-05 10:08:48.750 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:08:48,740;15;75,00048065185547 stored.
2022-12-05 10:08:48.751 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:50.720 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:50
2022-12-05 10:08:50.722 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:50.723 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:50.736 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:50)
2022-12-05 10:08:50.739 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:50.740 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:50.7366763+01:00" stamp is good.
2022-12-05 10:08:50.742 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:50.743 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:50.744 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:50,736;23;75,00415802001953
2022-12-05 10:08:50.746 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:50,736;23;75,00415802001953 stored.
2022-12-05 10:08:50.747 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:51.473 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 08:51
2022-12-05 10:08:51.474 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:08:51.476 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:08:51.488 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:08:51)
2022-12-05 10:08:51.491 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 67,44%. is added to queue
2022-12-05 10:08:51.492 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:51.4887257+01:00" stamp is good.
2022-12-05 10:08:51.494 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:08:51.495 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:51.496 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 10.10.10.10;2022-12-05 10:08:51,488;10;67,43990325927734
2022-12-05 10:08:51.497 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:08:51,488;10;67,43990325927734 stored.
2022-12-05 10:08:51.499 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:51.742 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 08:51
2022-12-05 10:08:51.743 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:08:51.745 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:08:51.758 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:08:51)
2022-12-05 10:08:51.760 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:51.761 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:51.7581528+01:00" stamp is good.
2022-12-05 10:08:51.762 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:08:51.764 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:51.765 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 30.30.30.30;2022-12-05 10:08:51,758;16;74,99983978271484
2022-12-05 10:08:51.766 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:08:51,758;16;74,99983978271484 stored.
2022-12-05 10:08:51.768 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:52.731 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:52
2022-12-05 10:08:52.733 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:52.734 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:52.747 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:52)
2022-12-05 10:08:52.749 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:52.750 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:52.7473204+01:00" stamp is good.
2022-12-05 10:08:52.751 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:52.752 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:52.753 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:52,747;24;75,00176239013672
2022-12-05 10:08:52.755 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:52,747;24;75,00176239013672 stored.
2022-12-05 10:08:52.757 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:54.739 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:54
2022-12-05 10:08:54.740 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:54.742 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:54.755 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 08:54
2022-12-05 10:08:54.755 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:54)
2022-12-05 10:08:54.758 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:08:54.759 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 67,45%. is added to queue
2022-12-05 10:08:54.760 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:08:54.761 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:54.7555604+01:00" stamp is good.
2022-12-05 10:08:54.764 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:54.765 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:54.766 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:54,755;25;67,4486083984375
2022-12-05 10:08:54.767 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:54,755;25;67,4486083984375 stored.
2022-12-05 10:08:54.769 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:54.771 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:08:54)
2022-12-05 10:08:54.777 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 56,61%. is added to queue
2022-12-05 10:08:54.778 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:54.7714977+01:00" stamp is good.
2022-12-05 10:08:54.779 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:08:54.780 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:54.782 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 30.30.30.30;2022-12-05 10:08:54,771;17;56,609683990478516
2022-12-05 10:08:54.783 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:08:54,771;17;56,609683990478516 stored.
2022-12-05 10:08:54.784 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:56.496 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 08:56
2022-12-05 10:08:56.498 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:08:56.499 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:08:56.527 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:08:56)
2022-12-05 10:08:56.528 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 85,53%. is added to queue
2022-12-05 10:08:56.530 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:56.5271721+01:00" stamp is good.
2022-12-05 10:08:56.531 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:08:56.532 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:56.533 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 10.10.10.10;2022-12-05 10:08:56,527;11;85,53269958496094
2022-12-05 10:08:56.535 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:08:56,527;11;85,53269958496094 stored.
2022-12-05 10:08:56.536 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:56.744 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:56
2022-12-05 10:08:56.745 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:56.747 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:56.759 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:56)
2022-12-05 10:08:56.762 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:56.764 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:56.7599507+01:00" stamp is good.
2022-12-05 10:08:56.765 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:56.766 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:56.767 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:56,759;26;74,99807739257812
2022-12-05 10:08:56.769 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:56,759;26;74,99807739257812 stored.
2022-12-05 10:08:56.770 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:57.765 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 08:57
2022-12-05 10:08:57.767 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:08:57.768 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:08:57.781 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:08:57)
2022-12-05 10:08:57.783 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 87,5%. is added to queue
2022-12-05 10:08:57.785 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:57.7814027+01:00" stamp is good.
2022-12-05 10:08:57.786 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:08:57.787 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:57.788 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 30.30.30.30;2022-12-05 10:08:57,781;18;87,49983978271484
2022-12-05 10:08:57.789 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:08:57,781;18;87,49983978271484 stored.
2022-12-05 10:08:57.791 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:58.754 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 08:58
2022-12-05 10:08:58.756 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:08:58.757 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:08:58.770 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:08:58)
2022-12-05 10:08:58.772 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:08:58.774 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:08:58.7705665+01:00" stamp is good.
2022-12-05 10:08:58.775 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:08:58.776 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:08:58.777 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> Data is stored: 20.20.20.20;2022-12-05 10:08:58,770;27;75
2022-12-05 10:08:58.779 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:08:58,770;27;75 stored.
2022-12-05 10:08:58.780 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-8.txt
2022-12-05 10:09:00.763 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:00
2022-12-05 10:09:00.764 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:00.765 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:00.778 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 09:00
2022-12-05 10:09:00.778 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:00)
2022-12-05 10:09:00.781 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:09:00.782 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:09:00.783 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:09:00.784 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:00.7788376+01:00" stamp is expired.
2022-12-05 10:09:00.787 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> File is closed
2022-12-05 10:09:00.788 +01:00 [INF] PeriodicallyStoreSystem  -> d:\tuw\log\2022-12-5-10-8.txt is closed.
2022-12-05 10:09:00.791 +01:00 [INF] PeriodicallyStoreSystem  -> 2022-12-5-10-8.txt is closed and new extenstion is bak.
2022-12-05 10:09:00.792 +01:00 [INF] PeriodicallyStoreSystem -> New File id: 2022-12-5-10-9.txt
2022-12-05 10:09:00.793 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:00.794 +01:00 [INF] SendBackupFileSystem ->Found closd TXT file. Rename to BAK extenson: d:\tuw\log\20.20.20.20\2022-12-5-10-8.txt
2022-12-05 10:09:00.794 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:09:00)
2022-12-05 10:09:00.796 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:00.797 +01:00 [INF] SendBackupFileSystem -> GetBackupFiles->Found 1 txt file.
2022-12-05 10:09:00.799 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:09:00.800 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> File not exsist. File created.
2022-12-05 10:09:00.801 +01:00 [INF] SendBackupFileSystem -> Precessed file:d:\tuw\log\20.20.20.20\2022-12-5-10-8.bak.
2022-12-05 10:09:00.802 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:00.7945036+01:00" stamp is expired.
2022-12-05 10:09:00.803 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:00,778;1;75,00096130371094 stored.
2022-12-05 10:09:00.805 +01:00 [INF] SendBackupFileSystem -> Number of line in file 26.
2022-12-05 10:09:00.806 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> File is closed
2022-12-05 10:09:00.807 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:00.809 +01:00 [INF] PeriodicallyStoreSystem  -> d:\tuw\log\2022-12-5-10-8.txt is closed.
2022-12-05 10:09:00.809 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:00.811 +01:00 [INF] SendBackupFileSystem ->Found closd TXT file. Rename to BAK extenson: d:\tuw\log\30.30.30.30\2022-12-5-10-8.txt
2022-12-05 10:09:00.813 +01:00 [INF] PeriodicallyStoreSystem  -> 2022-12-5-10-8.txt is closed and new extenstion is bak.
2022-12-05 10:09:00.815 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:08,513;2;75,00096130371094
2022-12-05 10:09:00.815 +01:00 [INF] SendBackupFileSystem -> GetBackupFiles->Found 1 txt file.
2022-12-05 10:09:00.816 +01:00 [INF] PeriodicallyStoreSystem -> New File id: 2022-12-5-10-9.txt
2022-12-05 10:09:00.819 +01:00 [INF] SendBackupFileSystem -> Precessed file:d:\tuw\log\30.30.30.30\2022-12-5-10-8.bak.
2022-12-05 10:09:00.820 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:09:00.821 +01:00 [INF] SendBackupFileSystem -> Number of line in file 17.
2022-12-05 10:09:00.823 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:00.824 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:00.825 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> File not exsist. File created.
2022-12-05 10:09:00.828 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:08:09,623;2;75,00399780273438
2022-12-05 10:09:00.829 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:09:00,794;1;100 stored.
2022-12-05 10:09:00.832 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:00.910 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:00.911 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:00.912 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:00.913 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:00.914 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:10,538;3;78,09679412841797
2022-12-05 10:09:00.914 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:00.917 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:00.918 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:08:12,626;3;75,00128173828125
2022-12-05 10:09:00.957 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:00.959 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:00.960 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:00.961 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:00.961 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:12,532;4;75,00415802001953
2022-12-05 10:09:00.962 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:00.964 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:00.965 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:08:15,633;4;75,00016021728516
2022-12-05 10:09:00.997 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:00.999 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.000 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.001 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:14,539;5;87,50296020507812
2022-12-05 10:09:01.004 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.006 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.007 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.008 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:08:18,668;5;93,02423858642578
2022-12-05 10:09:01.041 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.042 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.043 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.044 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:16,559;6;85,5333480834961
2022-12-05 10:09:01.045 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.047 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.048 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.049 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:08:21,663;6;100
2022-12-05 10:09:01.083 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.084 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.085 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.086 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:18,556;7;67,44316101074219
2022-12-05 10:09:01.087 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.088 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.090 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.091 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:08:24,681;7;67,44722747802734
2022-12-05 10:09:01.124 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.126 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.127 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.128 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:20,577;8;100
2022-12-05 10:09:01.131 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.132 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.134 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.135 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:08:27,689;8;87,50335693359375
2022-12-05 10:09:01.166 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.168 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.169 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.170 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:22,570;9;64,4839859008789
2022-12-05 10:09:01.179 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.180 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.181 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.182 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:08:30,695;9;74,9968032836914
2022-12-05 10:09:01.209 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.211 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.212 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.213 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:24,587;10;100
2022-12-05 10:09:01.222 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.223 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.225 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.226 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:08:33,702;10;74,99935913085938
2022-12-05 10:09:01.248 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.250 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.251 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.252 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:26,596;11;67,44426727294922
2022-12-05 10:09:01.270 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.271 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.272 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.273 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:08:36,708;11;74,99935913085938
2022-12-05 10:09:01.291 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.292 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.293 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.294 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:28,612;12;75,00080108642578
2022-12-05 10:09:01.314 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.315 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.317 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.318 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:08:39,713;12;74,99919891357422
2022-12-05 10:09:01.335 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.336 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.338 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.339 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:30,632;13;74,99727630615234
2022-12-05 10:09:01.358 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.360 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.361 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.362 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:08:42,723;13;75,0078353881836
2022-12-05 10:09:01.386 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.387 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.389 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.393 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:32,641;14;75,00160217285156
2022-12-05 10:09:01.419 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.420 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.422 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.423 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:08:45,736;14;84,97731018066406
2022-12-05 10:09:01.442 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.443 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.444 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.445 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:34,651;15;74,99983978271484
2022-12-05 10:09:01.462 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.464 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.465 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.466 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:08:48,740;15;75,00048065185547
2022-12-05 10:09:01.488 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.489 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.490 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.491 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:36,661;16;74,99759674072266
2022-12-05 10:09:01.501 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 09:01
2022-12-05 10:09:01.504 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:09:01.505 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:09:01.510 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.511 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.513 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.514 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:08:51,758;16;74,99983978271484
2022-12-05 10:09:01.517 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:09:01)
2022-12-05 10:09:01.521 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 62,5%. is added to queue
2022-12-05 10:09:01.523 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:01.5174583+01:00" stamp is expired.
2022-12-05 10:09:01.524 +01:00 [INF] MeasuringDataStore 2022-12-5-10-8.txt -> File is closed
2022-12-05 10:09:01.525 +01:00 [INF] PeriodicallyStoreSystem  -> d:\tuw\log\2022-12-5-10-8.txt is closed.
2022-12-05 10:09:01.527 +01:00 [INF] PeriodicallyStoreSystem  -> 2022-12-5-10-8.txt is closed and new extenstion is bak.
2022-12-05 10:09:01.528 +01:00 [INF] PeriodicallyStoreSystem -> New File id: 2022-12-5-10-9.txt
2022-12-05 10:09:01.529 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:09:01.530 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.530 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:01.531 +01:00 [INF] SendBackupFileSystem ->Found closd TXT file. Rename to BAK extenson: d:\tuw\log\10.10.10.10\2022-12-5-10-8.txt
2022-12-05 10:09:01.531 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.533 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> File not exsist. File created.
2022-12-05 10:09:01.536 +01:00 [INF] SendBackupFileSystem -> GetBackupFiles->Found 1 txt file.
2022-12-05 10:09:01.537 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.539 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:09:01,517;1;62,498878479003906 stored.
2022-12-05 10:09:01.540 +01:00 [INF] SendBackupFileSystem -> Precessed file:d:\tuw\log\10.10.10.10\2022-12-5-10-8.bak.
2022-12-05 10:09:01.541 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:38,676;17;75,00383758544922
2022-12-05 10:09:01.542 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:01.543 +01:00 [INF] SendBackupFileSystem -> Number of line in file 10.
2022-12-05 10:09:01.547 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.548 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:08:11,392;2;67,4412612915039
2022-12-05 10:09:01.554 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.555 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.556 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.557 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:08:54,771;17;56,609683990478516
2022-12-05 10:09:01.596 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.597 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.598 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.600 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:40,686;18;74,99935913085938
2022-12-05 10:09:01.606 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.607 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.608 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.609 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:08:16,418;3;93,26457214355469
2022-12-05 10:09:01.610 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.611 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.615 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.616 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:08:57,781;18;87,49983978271484
2022-12-05 10:09:01.653 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.654 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.655 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.656 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:42,692;19;74,99903869628906
2022-12-05 10:09:01.662 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.663 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.664 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.665 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:08:21,411;4;100
2022-12-05 10:09:01.666 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.668 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.669 +01:00 [INF] SendBackupFileSystem -> All line from d:\tuw\log\30.30.30.30\2022-12-5-10-8.bak is sended.
2022-12-05 10:09:01.700 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.701 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.702 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.703 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:44,715;20;86,04862976074219
2022-12-05 10:09:01.708 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.709 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.711 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.712 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:08:26,452;5;79,07334899902344
2022-12-05 10:09:01.746 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.747 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.748 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.749 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:46,716;21;87,49864196777344
2022-12-05 10:09:01.751 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.755 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.756 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.757 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:08:31,450;6;75,00016021728516
2022-12-05 10:09:01.792 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.793 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.795 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.796 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:48,724;22;75,0014419555664
2022-12-05 10:09:01.797 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.798 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.799 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.800 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:08:36,460;7;67,44261932373047
2022-12-05 10:09:01.836 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.841 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.846 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.847 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.850 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.852 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:50,736;23;75,00415802001953
2022-12-05 10:09:01.853 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.855 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:08:41,470;8;75,00303649902344
2022-12-05 10:09:01.902 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.905 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.909 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.913 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:52,747;24;75,00176239013672
2022-12-05 10:09:01.915 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.916 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.918 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.919 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:08:46,478;9;74,9988784790039
2022-12-05 10:09:01.980 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.982 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.983 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.984 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:01.984 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:54,755;25;67,4486083984375
2022-12-05 10:09:01.985 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:01.987 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:01.988 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:08:51,488;10;67,43990325927734
2022-12-05 10:09:02.028 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:02.029 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:02.030 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:02.032 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:56,759;26;74,99807739257812
2022-12-05 10:09:02.034 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:02.035 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:02.036 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:02.037 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:08:56,527;11;85,53269958496094
2022-12-05 10:09:02.073 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:02.074 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:02.075 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:09:02.076 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:02.076 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:08:58,770;27;75
2022-12-05 10:09:02.077 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:02.079 +01:00 [INF] SendBackupFileSystem -> All line from d:\tuw\log\10.10.10.10\2022-12-5-10-8.bak is sended.
2022-12-05 10:09:02.107 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:09:02.108 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:09:02.109 +01:00 [INF] SendBackupFileSystem -> All line from d:\tuw\log\20.20.20.20\2022-12-5-10-8.bak is sended.
2022-12-05 10:09:02.785 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:02
2022-12-05 10:09:02.786 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:02.787 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:02.800 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:02)
2022-12-05 10:09:02.803 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:09:02.804 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:02.8009372+01:00" stamp is good.
2022-12-05 10:09:02.805 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:02.807 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:02.808 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:02,800;2;74,99935913085938
2022-12-05 10:09:02.810 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:02,800;2;74,99935913085938 stored.
2022-12-05 10:09:02.811 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:03.786 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 09:03
2022-12-05 10:09:03.788 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:09:03.789 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:09:03.805 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:09:03)
2022-12-05 10:09:03.807 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:09:03.808 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:03.8051524+01:00" stamp is good.
2022-12-05 10:09:03.810 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:09:03.811 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:03.812 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 30.30.30.30;2022-12-05 10:09:03,805;2;74,99791717529297
2022-12-05 10:09:03.814 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:09:03,805;2;74,99791717529297 stored.
2022-12-05 10:09:03.815 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:04.792 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:04
2022-12-05 10:09:04.794 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:04.795 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:04.808 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:04)
2022-12-05 10:09:04.811 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:09:04.812 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:04.8087901+01:00" stamp is good.
2022-12-05 10:09:04.813 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:04.815 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:04.816 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:04,808;3;75,00160217285156
2022-12-05 10:09:04.817 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:04,808;3;75,00160217285156 stored.
2022-12-05 10:09:04.819 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:06.504 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 09:06
2022-12-05 10:09:06.506 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:09:06.507 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:09:06.521 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:09:06)
2022-12-05 10:09:06.524 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:09:06.525 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:06.5217635+01:00" stamp is good.
2022-12-05 10:09:06.527 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:09:06.528 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:06.529 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 10.10.10.10;2022-12-05 10:09:06,521;2;75,00032043457031
2022-12-05 10:09:06.530 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:09:06,521;2;75,00032043457031 stored.
2022-12-05 10:09:06.532 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:06.802 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:06
2022-12-05 10:09:06.802 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 09:06
2022-12-05 10:09:06.804 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:06.805 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:09:06.806 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:06.808 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:09:06.818 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:06)
2022-12-05 10:09:06.818 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:09:06)
2022-12-05 10:09:06.821 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:09:06.822 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:09:06.824 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:06.8186394+01:00" stamp is good.
2022-12-05 10:09:06.825 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:06.8187866+01:00" stamp is good.
2022-12-05 10:09:06.826 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:06.827 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:09:06.829 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:06.830 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:06.831 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:06,818;4;75,00160217285156
2022-12-05 10:09:06.832 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 30.30.30.30;2022-12-05 10:09:06,818;3;75,00160217285156
2022-12-05 10:09:06.833 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:06,818;4;75,00160217285156 stored.
2022-12-05 10:09:06.836 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:09:06,818;3;75,00160217285156 stored.
2022-12-05 10:09:06.838 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:06.840 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:08.808 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:08
2022-12-05 10:09:08.810 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:08.812 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:08.839 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:08)
2022-12-05 10:09:08.840 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 84,98%. is added to queue
2022-12-05 10:09:08.842 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:08.8392348+01:00" stamp is good.
2022-12-05 10:09:08.843 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:08.845 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:08.846 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:08,839;5;84,97599792480469
2022-12-05 10:09:08.848 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:08,839;5;84,97599792480469 stored.
2022-12-05 10:09:08.849 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:09.806 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 09:09
2022-12-05 10:09:09.808 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:09:09.809 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:09:09.822 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:09:09)
2022-12-05 10:09:09.824 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 64,49%. is added to queue
2022-12-05 10:09:09.826 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:09.8221635+01:00" stamp is good.
2022-12-05 10:09:09.827 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:09:09.828 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:09.829 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 30.30.30.30;2022-12-05 10:09:09,822;4;64,48812103271484
2022-12-05 10:09:09.830 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:09:09,822;4;64,48812103271484 stored.
2022-12-05 10:09:09.832 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:10.820 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:10
2022-12-05 10:09:10.822 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:10.824 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:10.837 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:10)
2022-12-05 10:09:10.839 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 67,45%. is added to queue
2022-12-05 10:09:10.840 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:10.8372208+01:00" stamp is good.
2022-12-05 10:09:10.841 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:10.843 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:10.844 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:10,837;6;67,45213317871094
2022-12-05 10:09:10.845 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:10,837;6;67,45213317871094 stored.
2022-12-05 10:09:10.847 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:11.514 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 09:11
2022-12-05 10:09:11.516 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:09:11.517 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:09:11.531 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:09:11)
2022-12-05 10:09:11.533 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 67,45%. is added to queue
2022-12-05 10:09:11.534 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:11.5311384+01:00" stamp is good.
2022-12-05 10:09:11.535 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:09:11.537 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:11.538 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 10.10.10.10;2022-12-05 10:09:11,531;3;67,44941711425781
2022-12-05 10:09:11.539 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:09:11,531;3;67,44941711425781 stored.
2022-12-05 10:09:11.541 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:12.820 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 09:12
2022-12-05 10:09:12.822 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:09:12.823 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:09:12.835 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:12
2022-12-05 10:09:12.835 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:09:12)
2022-12-05 10:09:12.837 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:12.838 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:09:12.839 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:12.841 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:12.8356202+01:00" stamp is good.
2022-12-05 10:09:12.843 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:09:12.845 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:12.846 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 30.30.30.30;2022-12-05 10:09:12,835;5;100
2022-12-05 10:09:12.848 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:09:12,835;5;100 stored.
2022-12-05 10:09:12.852 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:12)
2022-12-05 10:09:12.856 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:09:12.856 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:12.858 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:12.8523503+01:00" stamp is good.
2022-12-05 10:09:12.861 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:12.862 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:12.865 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:12,852;7;100
2022-12-05 10:09:12.868 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:12,852;7;100 stored.
2022-12-05 10:09:12.870 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:14.844 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:14
2022-12-05 10:09:14.846 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:14.847 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:14.860 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:14)
2022-12-05 10:09:14.862 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:09:14.863 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:14.8603694+01:00" stamp is good.
2022-12-05 10:09:14.865 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:14.866 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:14.867 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:14,860;8;75,00096130371094
2022-12-05 10:09:14.868 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:14,860;8;75,00096130371094 stored.
2022-12-05 10:09:14.870 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:15.828 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 09:15
2022-12-05 10:09:15.829 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:09:15.831 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:09:15.844 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:09:15)
2022-12-05 10:09:15.846 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:09:15.847 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:15.8440379+01:00" stamp is good.
2022-12-05 10:09:15.849 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:09:15.850 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:15.851 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 30.30.30.30;2022-12-05 10:09:15,844;6;74,9985580444336
2022-12-05 10:09:15.852 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:09:15,844;6;74,9985580444336 stored.
2022-12-05 10:09:15.854 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:16.538 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 09:16
2022-12-05 10:09:16.540 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:09:16.541 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:09:16.554 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:09:16)
2022-12-05 10:09:16.556 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:09:16.557 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:16.5543742+01:00" stamp is good.
2022-12-05 10:09:16.559 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:09:16.560 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:16.561 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 10.10.10.10;2022-12-05 10:09:16,554;4;75,00016021728516
2022-12-05 10:09:16.562 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:09:16,554;4;75,00016021728516 stored.
2022-12-05 10:09:16.564 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:16.850 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:16
2022-12-05 10:09:16.852 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:16.853 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:16.865 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:16)
2022-12-05 10:09:16.868 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:09:16.869 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:16.8659535+01:00" stamp is good.
2022-12-05 10:09:16.871 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:16.872 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:16.873 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:16,865;9;100
2022-12-05 10:09:16.874 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:16,865;9;100 stored.
2022-12-05 10:09:16.876 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:18.834 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 09:18
2022-12-05 10:09:18.835 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:09:18.837 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:09:18.849 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:09:18)
2022-12-05 10:09:18.851 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:09:18.853 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:18.8496543+01:00" stamp is good.
2022-12-05 10:09:18.854 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:09:18.855 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:18.857 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 30.30.30.30;2022-12-05 10:09:18,849;7;100
2022-12-05 10:09:18.858 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:09:18,849;7;100 stored.
2022-12-05 10:09:18.860 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:18.865 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:18
2022-12-05 10:09:18.868 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:18.869 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:18.881 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:18)
2022-12-05 10:09:18.883 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:09:18.884 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:18.8811222+01:00" stamp is good.
2022-12-05 10:09:18.886 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:18.887 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:18.888 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:18,881;10;100
2022-12-05 10:09:18.889 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:18,881;10;100 stored.
2022-12-05 10:09:18.891 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:20.874 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:20
2022-12-05 10:09:20.875 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:20.876 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:20.905 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:20)
2022-12-05 10:09:20.907 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 85,53%. is added to queue
2022-12-05 10:09:20.909 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:20.9057598+01:00" stamp is good.
2022-12-05 10:09:20.910 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:20.911 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:20.912 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:20,905;11;85,53168487548828
2022-12-05 10:09:20.913 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:20,905;11;85,53168487548828 stored.
2022-12-05 10:09:20.915 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:21.549 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 09:21
2022-12-05 10:09:21.551 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:09:21.552 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:09:21.565 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:09:21)
2022-12-05 10:09:21.567 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:09:21.569 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:21.5658594+01:00" stamp is good.
2022-12-05 10:09:21.570 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:09:21.571 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:21.572 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 10.10.10.10;2022-12-05 10:09:21,565;5;75,00399780273438
2022-12-05 10:09:21.574 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:09:21,565;5;75,00399780273438 stored.
2022-12-05 10:09:21.575 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:21.846 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 09:21
2022-12-05 10:09:21.848 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:09:21.849 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:09:21.862 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:09:21)
2022-12-05 10:09:21.864 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:09:21.866 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:21.8625200+01:00" stamp is good.
2022-12-05 10:09:21.867 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:09:21.868 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:21.869 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 30.30.30.30;2022-12-05 10:09:21,862;8;75,0014419555664
2022-12-05 10:09:21.871 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:09:21,862;8;75,0014419555664 stored.
2022-12-05 10:09:21.872 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:22.900 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:22
2022-12-05 10:09:22.901 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:22.903 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:22.916 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:22)
2022-12-05 10:09:22.918 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:09:22.919 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:22.9160916+01:00" stamp is good.
2022-12-05 10:09:22.921 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:22.922 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:22.923 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:22,916;12;74,99983978271484
2022-12-05 10:09:22.924 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:22,916;12;74,99983978271484 stored.
2022-12-05 10:09:22.926 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:24.847 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 09:24
2022-12-05 10:09:24.849 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:09:24.850 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:09:24.863 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:09:24)
2022-12-05 10:09:24.865 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:09:24.867 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:24.8636370+01:00" stamp is good.
2022-12-05 10:09:24.868 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:09:24.869 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:24.871 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 30.30.30.30;2022-12-05 10:09:24,863;9;75,0011215209961
2022-12-05 10:09:24.872 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:09:24,863;9;75,0011215209961 stored.
2022-12-05 10:09:24.873 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:24.909 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:24
2022-12-05 10:09:24.911 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:24.912 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:24.925 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:24)
2022-12-05 10:09:24.927 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 67,45%. is added to queue
2022-12-05 10:09:24.929 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:24.9253080+01:00" stamp is good.
2022-12-05 10:09:24.930 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:24.932 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:24.933 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:24,925;13;67,4461441040039
2022-12-05 10:09:24.934 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:24,925;13;67,4461441040039 stored.
2022-12-05 10:09:24.936 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:26.564 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 09:26
2022-12-05 10:09:26.565 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:09:26.567 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:09:26.580 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:09:26)
2022-12-05 10:09:26.581 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:09:26.583 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:26.5800314+01:00" stamp is good.
2022-12-05 10:09:26.584 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:09:26.585 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:26.586 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 10.10.10.10;2022-12-05 10:09:26,580;6;75,00032043457031
2022-12-05 10:09:26.588 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:09:26,580;6;75,00032043457031 stored.
2022-12-05 10:09:26.589 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:26.925 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:26
2022-12-05 10:09:26.927 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:26.928 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:26.941 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:26)
2022-12-05 10:09:26.943 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 87,1%. is added to queue
2022-12-05 10:09:26.945 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:26.9412506+01:00" stamp is good.
2022-12-05 10:09:26.946 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:26.948 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:26.954 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:26,941;14;87,09845733642578
2022-12-05 10:09:26.960 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:26,941;14;87,09845733642578 stored.
2022-12-05 10:09:26.968 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:27.849 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 09:27
2022-12-05 10:09:27.852 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:09:27.853 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:09:27.865 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:09:27)
2022-12-05 10:09:27.868 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 87,5%. is added to queue
2022-12-05 10:09:27.869 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:27.8654418+01:00" stamp is good.
2022-12-05 10:09:27.870 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:09:27.872 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:27.873 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 30.30.30.30;2022-12-05 10:09:27,865;10;87,49983978271484
2022-12-05 10:09:27.874 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:09:27,865;10;87,49983978271484 stored.
2022-12-05 10:09:27.876 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:28.945 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:28
2022-12-05 10:09:28.946 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:28.947 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:28.960 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:28)
2022-12-05 10:09:28.962 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 64,48%. is added to queue
2022-12-05 10:09:28.963 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:28.9602537+01:00" stamp is good.
2022-12-05 10:09:28.965 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:28.966 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:28.967 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:28,960;15;64,48462677001953
2022-12-05 10:09:28.969 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:28,960;15;64,48462677001953 stored.
2022-12-05 10:09:28.970 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:30.857 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 09:30
2022-12-05 10:09:30.859 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:09:30.860 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:09:30.890 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:09:30)
2022-12-05 10:09:30.891 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 86,05%. is added to queue
2022-12-05 10:09:30.893 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:30.8900010+01:00" stamp is good.
2022-12-05 10:09:30.894 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:09:30.895 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:30.896 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 30.30.30.30;2022-12-05 10:09:30,890;11;86,0497817993164
2022-12-05 10:09:30.897 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:09:30,890;11;86,0497817993164 stored.
2022-12-05 10:09:30.899 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:30.967 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:30
2022-12-05 10:09:30.969 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:30.970 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:30.984 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:30)
2022-12-05 10:09:30.986 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:09:30.988 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:30.9840058+01:00" stamp is good.
2022-12-05 10:09:30.989 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:30.990 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:30.991 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:30,984;16;100
2022-12-05 10:09:30.993 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:30,984;16;100 stored.
2022-12-05 10:09:30.994 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:31.577 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 09:31
2022-12-05 10:09:31.579 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:09:31.580 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:09:31.596 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:09:31)
2022-12-05 10:09:31.597 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:09:31.598 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:31.5960437+01:00" stamp is good.
2022-12-05 10:09:31.599 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:09:31.601 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:31.602 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 10.10.10.10;2022-12-05 10:09:31,596;7;100
2022-12-05 10:09:31.603 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:09:31,596;7;100 stored.
2022-12-05 10:09:31.605 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:32.986 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:32
2022-12-05 10:09:32.988 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:32.989 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:33.002 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:33)
2022-12-05 10:09:33.004 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 67,45%. is added to queue
2022-12-05 10:09:33.006 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:33.0028615+01:00" stamp is good.
2022-12-05 10:09:33.007 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:33.008 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:33.009 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:33,002;17;67,44725036621094
2022-12-05 10:09:33.011 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:33,002;17;67,44725036621094 stored.
2022-12-05 10:09:33.012 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:33.876 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 09:33
2022-12-05 10:09:33.878 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:09:33.879 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:09:33.892 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:09:33)
2022-12-05 10:09:33.894 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:09:33.896 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:33.8928002+01:00" stamp is good.
2022-12-05 10:09:33.897 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:09:33.898 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:33.899 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 30.30.30.30;2022-12-05 10:09:33,892;12;74,99759674072266
2022-12-05 10:09:33.901 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:09:33,892;12;74,99759674072266 stored.
2022-12-05 10:09:33.902 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:34.990 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:34
2022-12-05 10:09:34.992 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:34.993 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:35.007 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:35)
2022-12-05 10:09:35.009 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 67,45%. is added to queue
2022-12-05 10:09:35.011 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:35.0072197+01:00" stamp is good.
2022-12-05 10:09:35.012 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:35.013 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:35.014 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:35,007;18;67,44833374023438
2022-12-05 10:09:35.016 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:35,007;18;67,44833374023438 stored.
2022-12-05 10:09:35.017 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:36.585 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 09:36
2022-12-05 10:09:36.587 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:09:36.588 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:09:36.601 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:09:36)
2022-12-05 10:09:36.604 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 75,01%. is added to queue
2022-12-05 10:09:36.605 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:36.6013908+01:00" stamp is good.
2022-12-05 10:09:36.606 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:09:36.608 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:36.609 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 10.10.10.10;2022-12-05 10:09:36,601;8;75,0057601928711
2022-12-05 10:09:36.610 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:09:36,601;8;75,0057601928711 stored.
2022-12-05 10:09:36.612 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:36.882 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 09:36
2022-12-05 10:09:36.885 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:09:36.887 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:09:36.898 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:09:36)
2022-12-05 10:09:36.900 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:09:36.901 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:36.8980646+01:00" stamp is good.
2022-12-05 10:09:36.903 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:09:36.904 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:36.906 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 30.30.30.30;2022-12-05 10:09:36,898;13;100
2022-12-05 10:09:36.907 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:09:36,898;13;100 stored.
2022-12-05 10:09:36.909 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:37.009 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:37
2022-12-05 10:09:37.019 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:37.025 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:37.049 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:37)
2022-12-05 10:09:37.051 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:09:37.053 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:37.0494480+01:00" stamp is good.
2022-12-05 10:09:37.054 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:37.055 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:37.059 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:37,049;19;100
2022-12-05 10:09:37.061 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:37,049;19;100 stored.
2022-12-05 10:09:37.063 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:39.041 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:39
2022-12-05 10:09:39.042 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:39.043 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:39.056 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:39)
2022-12-05 10:09:39.059 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:09:39.060 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:39.0568434+01:00" stamp is good.
2022-12-05 10:09:39.061 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:39.062 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:39.063 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:39,056;20;75,00128173828125
2022-12-05 10:09:39.065 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:39,056;20;75,00128173828125 stored.
2022-12-05 10:09:39.066 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:39.901 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 09:39
2022-12-05 10:09:39.903 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:09:39.904 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:09:39.933 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:09:39)
2022-12-05 10:09:39.935 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 93,27%. is added to queue
2022-12-05 10:09:39.936 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:39.9339381+01:00" stamp is good.
2022-12-05 10:09:39.938 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:09:39.939 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:39.941 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 30.30.30.30;2022-12-05 10:09:39,933;14;93,26522064208984
2022-12-05 10:09:39.942 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:09:39,933;14;93,26522064208984 stored.
2022-12-05 10:09:39.943 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:41.077 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:41
2022-12-05 10:09:41.079 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:41.080 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:41.092 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:41)
2022-12-05 10:09:41.094 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 87,07%. is added to queue
2022-12-05 10:09:41.096 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:41.0928198+01:00" stamp is good.
2022-12-05 10:09:41.097 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:41.099 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:41.100 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:41,092;21;87,06873321533203
2022-12-05 10:09:41.101 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:41,092;21;87,06873321533203 stored.
2022-12-05 10:09:41.103 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:41.605 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 09:41
2022-12-05 10:09:41.607 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:09:41.608 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:09:41.621 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:09:41)
2022-12-05 10:09:41.624 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 74,99%. is added to queue
2022-12-05 10:09:41.625 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:41.6215978+01:00" stamp is good.
2022-12-05 10:09:41.626 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:09:41.628 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:41.629 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 10.10.10.10;2022-12-05 10:09:41,621;9;74,99488067626953
2022-12-05 10:09:41.630 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:09:41,621;9;74,99488067626953 stored.
2022-12-05 10:09:41.631 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:42.910 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 09:42
2022-12-05 10:09:42.912 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:09:42.913 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:09:42.926 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:09:42)
2022-12-05 10:09:42.928 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:09:42.930 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:42.9264087+01:00" stamp is good.
2022-12-05 10:09:42.931 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:09:42.933 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:42.934 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 30.30.30.30;2022-12-05 10:09:42,926;15;75,0025634765625
2022-12-05 10:09:42.936 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:09:42,926;15;75,0025634765625 stored.
2022-12-05 10:09:42.937 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:43.082 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:43
2022-12-05 10:09:43.084 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:43.085 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:43.098 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:43)
2022-12-05 10:09:43.100 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:09:43.101 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:43.0982745+01:00" stamp is good.
2022-12-05 10:09:43.103 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:43.104 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:43.105 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:43,098;22;75,00016021728516
2022-12-05 10:09:43.106 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:43,098;22;75,00016021728516 stored.
2022-12-05 10:09:43.108 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:45.099 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:45
2022-12-05 10:09:45.104 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:45.105 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:45.115 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:45)
2022-12-05 10:09:45.117 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75,58%. is added to queue
2022-12-05 10:09:45.119 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:45.1154372+01:00" stamp is good.
2022-12-05 10:09:45.120 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:45.121 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:45.123 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:45,115;23;75,58319854736328
2022-12-05 10:09:45.125 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:45,115;23;75,58319854736328 stored.
2022-12-05 10:09:45.127 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:45.917 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 09:45
2022-12-05 10:09:45.919 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:09:45.920 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:09:45.937 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:09:45)
2022-12-05 10:09:45.939 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:09:45.941 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:45.9377562+01:00" stamp is good.
2022-12-05 10:09:45.943 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:09:45.945 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:45.947 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 30.30.30.30;2022-12-05 10:09:45,937;16;100
2022-12-05 10:09:45.948 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:09:45,937;16;100 stored.
2022-12-05 10:09:45.952 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:46.611 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 09:46
2022-12-05 10:09:46.612 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:09:46.614 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:09:46.631 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:09:46)
2022-12-05 10:09:46.632 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:09:46.633 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:46.6313133+01:00" stamp is good.
2022-12-05 10:09:46.636 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:09:46.640 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:46.643 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 10.10.10.10;2022-12-05 10:09:46,631;10;100
2022-12-05 10:09:46.649 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:09:46,631;10;100 stored.
2022-12-05 10:09:46.650 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:47.110 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:47
2022-12-05 10:09:47.112 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:47.113 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:47.127 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:47)
2022-12-05 10:09:47.129 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:09:47.130 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:47.1272814+01:00" stamp is good.
2022-12-05 10:09:47.131 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:47.132 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:47.133 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:47,127;24;100
2022-12-05 10:09:47.135 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:47,127;24;100 stored.
2022-12-05 10:09:47.136 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:48.931 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 09:48
2022-12-05 10:09:48.933 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:09:48.934 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:09:48.947 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:09:48)
2022-12-05 10:09:48.950 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 67,44%. is added to queue
2022-12-05 10:09:48.951 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:48.9479918+01:00" stamp is good.
2022-12-05 10:09:48.953 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:09:48.954 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:48.955 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 30.30.30.30;2022-12-05 10:09:48,947;17;67,44316101074219
2022-12-05 10:09:48.956 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:09:48,947;17;67,44316101074219 stored.
2022-12-05 10:09:48.958 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:49.117 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:49
2022-12-05 10:09:49.119 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:49.120 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:49.133 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:49)
2022-12-05 10:09:49.135 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:09:49.136 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:49.1330075+01:00" stamp is good.
2022-12-05 10:09:49.138 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:49.139 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:49.141 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:49,133;25;100
2022-12-05 10:09:49.142 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:49,133;25;100 stored.
2022-12-05 10:09:49.144 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:51.126 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:51
2022-12-05 10:09:51.128 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:51.129 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:51.142 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:51)
2022-12-05 10:09:51.144 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 64,49%. is added to queue
2022-12-05 10:09:51.145 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:51.1421825+01:00" stamp is good.
2022-12-05 10:09:51.147 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:51.148 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:51.149 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:51,142;26;64,49102783203125
2022-12-05 10:09:51.150 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:51,142;26;64,49102783203125 stored.
2022-12-05 10:09:51.152 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:51.615 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 09:51
2022-12-05 10:09:51.616 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:09:51.617 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:09:51.631 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:09:51)
2022-12-05 10:09:51.633 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:09:51.635 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:51.6313883+01:00" stamp is good.
2022-12-05 10:09:51.636 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:09:51.637 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:51.638 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 10.10.10.10;2022-12-05 10:09:51,631;11;100
2022-12-05 10:09:51.640 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:09:51,631;11;100 stored.
2022-12-05 10:09:51.643 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:51.950 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 09:51
2022-12-05 10:09:51.951 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:09:51.952 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:09:51.981 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:09:51)
2022-12-05 10:09:51.982 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 85,53%. is added to queue
2022-12-05 10:09:51.984 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:51.9813258+01:00" stamp is good.
2022-12-05 10:09:51.985 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:09:51.986 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:51.988 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 30.30.30.30;2022-12-05 10:09:51,981;18;85,53205871582031
2022-12-05 10:09:51.989 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:09:51,981;18;85,53205871582031 stored.
2022-12-05 10:09:51.991 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:53.155 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:53
2022-12-05 10:09:53.156 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:53.157 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:53.185 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:53)
2022-12-05 10:09:53.186 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 92,49%. is added to queue
2022-12-05 10:09:53.188 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:53.1853222+01:00" stamp is good.
2022-12-05 10:09:53.189 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:53.190 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:53.191 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:53,185;27;92,48810577392578
2022-12-05 10:09:53.193 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:53,185;27;92,48810577392578 stored.
2022-12-05 10:09:53.194 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:54.976 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 09:54
2022-12-05 10:09:54.977 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:09:54.978 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:09:54.991 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:09:54)
2022-12-05 10:09:54.993 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:09:54.995 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:54.9919686+01:00" stamp is good.
2022-12-05 10:09:54.996 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:09:54.997 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:54.998 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 30.30.30.30;2022-12-05 10:09:54,991;19;75,00032043457031
2022-12-05 10:09:54.999 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:09:54,991;19;75,00032043457031 stored.
2022-12-05 10:09:55.001 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:55.170 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:55
2022-12-05 10:09:55.171 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:55.172 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:55.179 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:55)
2022-12-05 10:09:55.181 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:09:55.182 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:55.1794919+01:00" stamp is good.
2022-12-05 10:09:55.184 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:55.185 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:55.186 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:55,179;28;74,99600219726562
2022-12-05 10:09:55.187 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:55,179;28;74,99600219726562 stored.
2022-12-05 10:09:55.188 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:56.625 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 09:56
2022-12-05 10:09:56.626 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:09:56.627 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:09:56.640 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:09:56)
2022-12-05 10:09:56.642 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 67,45%. is added to queue
2022-12-05 10:09:56.644 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:56.6404419+01:00" stamp is good.
2022-12-05 10:09:56.645 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:09:56.646 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:56.647 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 10.10.10.10;2022-12-05 10:09:56,640;12;67,4485855102539
2022-12-05 10:09:56.649 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:09:56,640;12;67,4485855102539 stored.
2022-12-05 10:09:56.650 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:57.178 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:57
2022-12-05 10:09:57.180 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:57.181 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:57.193 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:57)
2022-12-05 10:09:57.195 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 64,48%. is added to queue
2022-12-05 10:09:57.197 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:57.1934424+01:00" stamp is good.
2022-12-05 10:09:57.198 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:57.199 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:57.200 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:57,193;29;64,48430633544922
2022-12-05 10:09:57.202 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:57,193;29;64,48430633544922 stored.
2022-12-05 10:09:57.203 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:57.977 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 09:57
2022-12-05 10:09:57.979 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:09:57.980 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:09:57.992 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:09:57)
2022-12-05 10:09:57.994 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 83,72%. is added to queue
2022-12-05 10:09:57.996 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:57.9929375+01:00" stamp is good.
2022-12-05 10:09:57.997 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:09:57.999 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:58.000 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 30.30.30.30;2022-12-05 10:09:57,992;20;83,72267150878906
2022-12-05 10:09:58.002 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:09:57,992;20;83,72267150878906 stored.
2022-12-05 10:09:58.004 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:59.191 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 09:59
2022-12-05 10:09:59.192 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:09:59.193 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:09:59.206 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:09:59)
2022-12-05 10:09:59.208 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 83,72%. is added to queue
2022-12-05 10:09:59.210 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:09:59.2064058+01:00" stamp is good.
2022-12-05 10:09:59.211 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:09:59.212 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:09:59.213 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> Data is stored: 20.20.20.20;2022-12-05 10:09:59,206;30;83,72360229492188
2022-12-05 10:09:59.215 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:09:59,206;30;83,72360229492188 stored.
2022-12-05 10:09:59.216 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-9.txt
2022-12-05 10:10:00.993 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 10:00
2022-12-05 10:10:00.995 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:10:00.996 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:10:01.009 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:10:01)
2022-12-05 10:10:01.011 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:01.013 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:01.0098051+01:00" stamp is expired.
2022-12-05 10:10:01.014 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> File is closed
2022-12-05 10:10:01.015 +01:00 [INF] PeriodicallyStoreSystem  -> d:\tuw\log\2022-12-5-10-9.txt is closed.
2022-12-05 10:10:01.017 +01:00 [INF] PeriodicallyStoreSystem  -> 2022-12-5-10-9.txt is closed and new extenstion is bak.
2022-12-05 10:10:01.018 +01:00 [INF] PeriodicallyStoreSystem -> New File id: 2022-12-5-10-10.txt
2022-12-05 10:10:01.020 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:10:01.020 +01:00 [INF] SendBackupFileSystem ->Found closd TXT file. Rename to BAK extenson: d:\tuw\log\30.30.30.30\2022-12-5-10-9.txt
2022-12-05 10:10:01.021 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:01.022 +01:00 [INF] SendBackupFileSystem -> GetBackupFiles->Found 1 txt file.
2022-12-05 10:10:01.024 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> File not exsist. File created.
2022-12-05 10:10:01.024 +01:00 [INF] SendBackupFileSystem -> Precessed file:d:\tuw\log\30.30.30.30\2022-12-5-10-9.bak.
2022-12-05 10:10:01.027 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:10:01,009;1;75,00080108642578 stored.
2022-12-05 10:10:01.029 +01:00 [INF] SendBackupFileSystem -> Number of line in file 19.
2022-12-05 10:10:01.030 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:01.031 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.033 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:09:03,805;2;74,99791717529297
2022-12-05 10:10:01.064 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.065 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.066 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.068 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:09:06,818;3;75,00160217285156
2022-12-05 10:10:01.103 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.105 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.106 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.107 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:09:09,822;4;64,48812103271484
2022-12-05 10:10:01.135 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.136 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.137 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.139 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:09:12,835;5;100
2022-12-05 10:10:01.179 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.182 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.184 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.184 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:09:15,844;6;74,9985580444336
2022-12-05 10:10:01.196 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:01
2022-12-05 10:10:01.200 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:01.202 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:01.221 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.222 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.223 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.225 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:09:18,849;7;100
2022-12-05 10:10:01.239 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:01)
2022-12-05 10:10:01.245 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:10:01.246 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:01.2398114+01:00" stamp is expired.
2022-12-05 10:10:01.248 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> File is closed
2022-12-05 10:10:01.249 +01:00 [INF] PeriodicallyStoreSystem  -> d:\tuw\log\2022-12-5-10-9.txt is closed.
2022-12-05 10:10:01.251 +01:00 [INF] PeriodicallyStoreSystem  -> 2022-12-5-10-9.txt is closed and new extenstion is bak.
2022-12-05 10:10:01.252 +01:00 [INF] PeriodicallyStoreSystem -> New File id: 2022-12-5-10-10.txt
2022-12-05 10:10:01.253 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:01.254 +01:00 [INF] SendBackupFileSystem ->Found closd TXT file. Rename to BAK extenson: d:\tuw\log\20.20.20.20\2022-12-5-10-9.txt
2022-12-05 10:10:01.270 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:01.273 +01:00 [INF] SendBackupFileSystem -> GetBackupFiles->Found 1 txt file.
2022-12-05 10:10:01.276 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> File not exsist. File created.
2022-12-05 10:10:01.277 +01:00 [INF] SendBackupFileSystem -> Precessed file:d:\tuw\log\20.20.20.20\2022-12-5-10-9.bak.
2022-12-05 10:10:01.277 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.278 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:01,239;1;100 stored.
2022-12-05 10:10:01.279 +01:00 [INF] SendBackupFileSystem -> Number of line in file 29.
2022-12-05 10:10:01.280 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.282 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:01.283 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.287 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.289 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:02,800;2;74,99935913085938
2022-12-05 10:10:01.290 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:09:21,862;8;75,0014419555664
2022-12-05 10:10:01.336 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.337 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.339 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.340 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:04,808;3;75,00160217285156
2022-12-05 10:10:01.343 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.344 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.345 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.347 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:09:24,863;9;75,0011215209961
2022-12-05 10:10:01.382 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.383 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.384 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.386 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:06,818;4;75,00160217285156
2022-12-05 10:10:01.392 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.393 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.394 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.395 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:09:27,865;10;87,49983978271484
2022-12-05 10:10:01.426 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.427 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.429 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.430 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:08,839;5;84,97599792480469
2022-12-05 10:10:01.435 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.436 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.437 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.438 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:09:30,890;11;86,0497817993164
2022-12-05 10:10:01.473 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.474 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.476 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.477 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:10,837;6;67,45213317871094
2022-12-05 10:10:01.477 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.479 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.480 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.481 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:09:33,892;12;74,99759674072266
2022-12-05 10:10:01.517 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.518 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.519 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.520 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:12,852;7;100
2022-12-05 10:10:01.522 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.523 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.524 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.526 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:09:36,898;13;100
2022-12-05 10:10:01.565 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.566 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.567 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.568 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:14,860;8;75,00096130371094
2022-12-05 10:10:01.570 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.571 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.573 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.574 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:09:39,933;14;93,26522064208984
2022-12-05 10:10:01.618 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.620 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.621 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.622 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.622 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:16,865;9;100
2022-12-05 10:10:01.623 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.625 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.626 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:09:42,926;15;75,0025634765625
2022-12-05 10:10:01.635 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 10:01
2022-12-05 10:10:01.639 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:10:01.640 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:10:01.651 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:10:01)
2022-12-05 10:10:01.654 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 87,5%. is added to queue
2022-12-05 10:10:01.655 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:01.6510600+01:00" stamp is expired.
2022-12-05 10:10:01.657 +01:00 [INF] MeasuringDataStore 2022-12-5-10-9.txt -> File is closed
2022-12-05 10:10:01.658 +01:00 [INF] PeriodicallyStoreSystem  -> d:\tuw\log\2022-12-5-10-9.txt is closed.
2022-12-05 10:10:01.660 +01:00 [INF] PeriodicallyStoreSystem  -> 2022-12-5-10-9.txt is closed and new extenstion is bak.
2022-12-05 10:10:01.661 +01:00 [INF] PeriodicallyStoreSystem -> New File id: 2022-12-5-10-10.txt
2022-12-05 10:10:01.662 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:10:01.663 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:01.665 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.665 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> File not exsist. File created.
2022-12-05 10:10:01.665 +01:00 [INF] SendBackupFileSystem ->Found closd TXT file. Rename to BAK extenson: d:\tuw\log\10.10.10.10\2022-12-5-10-9.txt
2022-12-05 10:10:01.666 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.671 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:10:01,651;1;87,50224304199219 stored.
2022-12-05 10:10:01.672 +01:00 [INF] SendBackupFileSystem -> GetBackupFiles->Found 1 txt file.
2022-12-05 10:10:01.673 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.674 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.675 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:01.676 +01:00 [INF] SendBackupFileSystem -> Precessed file:d:\tuw\log\10.10.10.10\2022-12-5-10-9.bak.
2022-12-05 10:10:01.677 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.678 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:18,881;10;100
2022-12-05 10:10:01.680 +01:00 [INF] SendBackupFileSystem -> Number of line in file 11.
2022-12-05 10:10:01.681 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.686 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.687 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:09:45,937;16;100
2022-12-05 10:10:01.688 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:09:06,521;2;75,00032043457031
2022-12-05 10:10:01.729 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.730 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.731 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.733 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:20,905;11;85,53168487548828
2022-12-05 10:10:01.743 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.744 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.744 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.746 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.747 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.748 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.749 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:09:48,947;17;67,44316101074219
2022-12-05 10:10:01.750 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:09:11,531;3;67,44941711425781
2022-12-05 10:10:01.785 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.786 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.787 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.789 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:22,916;12;74,99983978271484
2022-12-05 10:10:01.805 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.806 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.809 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.811 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:09:51,981;18;85,53205871582031
2022-12-05 10:10:01.814 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.815 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.817 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.818 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:09:16,554;4;75,00016021728516
2022-12-05 10:10:01.846 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.847 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.849 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.850 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:24,925;13;67,4461441040039
2022-12-05 10:10:01.871 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.873 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.875 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.876 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:09:54,991;19;75,00032043457031
2022-12-05 10:10:01.881 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.883 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.884 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.885 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:09:21,565;5;75,00399780273438
2022-12-05 10:10:01.921 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.927 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.929 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.930 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:26,941;14;87,09845733642578
2022-12-05 10:10:01.948 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.949 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.952 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.953 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:09:57,992;20;83,72267150878906
2022-12-05 10:10:01.961 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:01.963 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:01.964 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:01.969 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:09:26,580;6;75,00032043457031
2022-12-05 10:10:02.005 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.007 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.008 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.009 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:28,960;15;64,48462677001953
2022-12-05 10:10:02.012 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.014 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.015 +01:00 [INF] SendBackupFileSystem -> All line from d:\tuw\log\30.30.30.30\2022-12-5-10-9.bak is sended.
2022-12-05 10:10:02.026 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.031 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.033 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.034 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:09:31,596;7;100
2022-12-05 10:10:02.057 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.058 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.063 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.064 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:30,984;16;100
2022-12-05 10:10:02.084 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.085 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.086 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.087 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:09:36,601;8;75,0057601928711
2022-12-05 10:10:02.124 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.125 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.127 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.128 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:33,002;17;67,44725036621094
2022-12-05 10:10:02.152 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.153 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.154 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.155 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:09:41,621;9;74,99488067626953
2022-12-05 10:10:02.172 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.173 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.174 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.176 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:35,007;18;67,44833374023438
2022-12-05 10:10:02.197 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.198 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.200 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.201 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:09:46,631;10;100
2022-12-05 10:10:02.217 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.218 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.220 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.221 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:37,049;19;100
2022-12-05 10:10:02.253 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.254 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.255 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.256 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:09:51,631;11;100
2022-12-05 10:10:02.275 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.276 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.277 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.278 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:39,056;20;75,00128173828125
2022-12-05 10:10:02.296 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.297 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.298 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.300 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:09:56,640;12;67,4485855102539
2022-12-05 10:10:02.319 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.320 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.321 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.322 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:41,092;21;87,06873321533203
2022-12-05 10:10:02.341 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.342 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.343 +01:00 [INF] SendBackupFileSystem -> All line from d:\tuw\log\10.10.10.10\2022-12-5-10-9.bak is sended.
2022-12-05 10:10:02.359 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.360 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.361 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.364 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:43,098;22;75,00016021728516
2022-12-05 10:10:02.390 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.391 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.392 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.396 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:45,115;23;75,58319854736328
2022-12-05 10:10:02.423 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.424 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.427 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.428 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:47,127;24;100
2022-12-05 10:10:02.454 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.455 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.459 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.460 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:49,133;25;100
2022-12-05 10:10:02.500 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.502 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.503 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.504 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:51,142;26;64,49102783203125
2022-12-05 10:10:02.541 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.543 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.544 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.545 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:53,185;27;92,48810577392578
2022-12-05 10:10:02.578 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.580 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.581 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.584 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:55,179;28;74,99600219726562
2022-12-05 10:10:02.611 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.623 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.624 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.625 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:57,193;29;64,48430633544922
2022-12-05 10:10:02.650 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.652 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.653 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:10:02.653 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:09:59,206;30;83,72360229492188
2022-12-05 10:10:02.683 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:10:02.684 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:10:02.685 +01:00 [INF] SendBackupFileSystem -> All line from d:\tuw\log\20.20.20.20\2022-12-5-10-9.bak is sended.
2022-12-05 10:10:03.211 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:03
2022-12-05 10:10:03.213 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:03.214 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:03.227 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:03)
2022-12-05 10:10:03.229 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:03.231 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:03.2273887+01:00" stamp is good.
2022-12-05 10:10:03.232 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:03.233 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:03.235 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:03,227;2;74,9988784790039
2022-12-05 10:10:03.236 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:03,227;2;74,9988784790039 stored.
2022-12-05 10:10:03.237 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:04.010 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 10:04
2022-12-05 10:10:04.014 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:10:04.016 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:10:04.043 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:10:04)
2022-12-05 10:10:04.044 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 84,98%. is added to queue
2022-12-05 10:10:04.046 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:04.0433571+01:00" stamp is good.
2022-12-05 10:10:04.047 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:10:04.049 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:04.050 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 30.30.30.30;2022-12-05 10:10:04,043;2;84,9764633178711
2022-12-05 10:10:04.052 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:10:04,043;2;84,9764633178711 stored.
2022-12-05 10:10:04.053 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:05.226 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:05
2022-12-05 10:10:05.228 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:05.229 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:05.242 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:05)
2022-12-05 10:10:05.244 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:05.245 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:05.2421341+01:00" stamp is good.
2022-12-05 10:10:05.247 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:05.248 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:05.249 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:05,242;3;74,99871826171875
2022-12-05 10:10:05.250 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:05,242;3;74,99871826171875 stored.
2022-12-05 10:10:05.252 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:06.654 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 10:06
2022-12-05 10:10:06.655 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:10:06.657 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:10:06.669 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:10:06)
2022-12-05 10:10:06.671 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:10:06.673 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:06.6692379+01:00" stamp is good.
2022-12-05 10:10:06.674 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:10:06.675 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:06.677 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 10.10.10.10;2022-12-05 10:10:06,669;2;100
2022-12-05 10:10:06.678 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:10:06,669;2;100 stored.
2022-12-05 10:10:06.680 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:07.029 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 10:07
2022-12-05 10:10:07.031 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:10:07.032 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:10:07.045 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:10:07)
2022-12-05 10:10:07.047 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 87,5%. is added to queue
2022-12-05 10:10:07.048 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:07.0452931+01:00" stamp is good.
2022-12-05 10:10:07.049 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:10:07.051 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:07.052 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 30.30.30.30;2022-12-05 10:10:07,045;3;87,50176239013672
2022-12-05 10:10:07.053 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:10:07,045;3;87,50176239013672 stored.
2022-12-05 10:10:07.055 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:07.232 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:07
2022-12-05 10:10:07.233 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:07.235 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:07.255 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:07)
2022-12-05 10:10:07.257 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 79,08%. is added to queue
2022-12-05 10:10:07.259 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:07.2551944+01:00" stamp is good.
2022-12-05 10:10:07.260 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:07.261 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:07.262 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:07,255;4;79,07643127441406
2022-12-05 10:10:07.264 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:07,255;4;79,07643127441406 stored.
2022-12-05 10:10:07.265 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:09.236 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:09
2022-12-05 10:10:09.238 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:09.239 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:09.252 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:09)
2022-12-05 10:10:09.254 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:09.256 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:09.2528184+01:00" stamp is good.
2022-12-05 10:10:09.257 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:09.259 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:09.260 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:09,252;5;75,00303649902344
2022-12-05 10:10:09.261 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:09,252;5;75,00303649902344 stored.
2022-12-05 10:10:09.262 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:10.055 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 10:10
2022-12-05 10:10:10.057 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:10:10.058 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:10:10.070 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:10:10)
2022-12-05 10:10:10.073 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:10:10.075 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:10.0709713+01:00" stamp is good.
2022-12-05 10:10:10.076 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:10:10.077 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:10.078 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 30.30.30.30;2022-12-05 10:10:10,070;4;100
2022-12-05 10:10:10.080 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:10:10,070;4;100 stored.
2022-12-05 10:10:10.082 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:11.251 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:11
2022-12-05 10:10:11.253 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:11.254 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:11.267 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:11)
2022-12-05 10:10:11.269 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:11.271 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:11.2678534+01:00" stamp is good.
2022-12-05 10:10:11.272 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:11.273 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:11.274 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:11,267;6;74,99951934814453
2022-12-05 10:10:11.276 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:11,267;6;74,99951934814453 stored.
2022-12-05 10:10:11.277 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:11.663 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 10:11
2022-12-05 10:10:11.664 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:10:11.665 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:10:11.679 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:10:11)
2022-12-05 10:10:11.681 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:11.682 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:11.6790587+01:00" stamp is good.
2022-12-05 10:10:11.683 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:10:11.685 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:11.686 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 10.10.10.10;2022-12-05 10:10:11,679;3;74,99807739257812
2022-12-05 10:10:11.688 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:10:11,679;3;74,99807739257812 stored.
2022-12-05 10:10:11.689 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:13.059 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 10:13
2022-12-05 10:10:13.061 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:10:13.062 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:10:13.075 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:10:13)
2022-12-05 10:10:13.077 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:13.078 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:13.0754499+01:00" stamp is good.
2022-12-05 10:10:13.080 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:10:13.081 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:13.082 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 30.30.30.30;2022-12-05 10:10:13,075;5;75,00016021728516
2022-12-05 10:10:13.083 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:10:13,075;5;75,00016021728516 stored.
2022-12-05 10:10:13.085 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:13.252 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:13
2022-12-05 10:10:13.254 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:13.255 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:13.268 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:13)
2022-12-05 10:10:13.270 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:13.272 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:13.2687937+01:00" stamp is good.
2022-12-05 10:10:13.273 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:13.274 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:13.276 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:13,268;7;75,00048065185547
2022-12-05 10:10:13.277 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:13,268;7;75,00048065185547 stored.
2022-12-05 10:10:13.279 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:15.270 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:15
2022-12-05 10:10:15.272 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:15.273 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:15.286 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:15)
2022-12-05 10:10:15.288 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:15.290 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:15.2867289+01:00" stamp is good.
2022-12-05 10:10:15.291 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:15.292 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:15.293 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:15,286;8;75,00208282470703
2022-12-05 10:10:15.294 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:15,286;8;75,00208282470703 stored.
2022-12-05 10:10:15.296 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:16.069 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 10:16
2022-12-05 10:10:16.071 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:10:16.072 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:10:16.086 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:10:16)
2022-12-05 10:10:16.088 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 67,44%. is added to queue
2022-12-05 10:10:16.090 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:16.0860796+01:00" stamp is good.
2022-12-05 10:10:16.091 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:10:16.092 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:16.094 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 30.30.30.30;2022-12-05 10:10:16,086;6;67,43611907958984
2022-12-05 10:10:16.095 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:10:16,086;6;67,43611907958984 stored.
2022-12-05 10:10:16.097 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:16.684 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 10:16
2022-12-05 10:10:16.686 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:10:16.687 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:10:16.721 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:10:16)
2022-12-05 10:10:16.723 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 76,1%. is added to queue
2022-12-05 10:10:16.724 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:16.7216668+01:00" stamp is good.
2022-12-05 10:10:16.726 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:10:16.727 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:16.728 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 10.10.10.10;2022-12-05 10:10:16,721;4;76,09569549560547
2022-12-05 10:10:16.730 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:10:16,721;4;76,09569549560547 stored.
2022-12-05 10:10:16.731 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:17.285 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:17
2022-12-05 10:10:17.286 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:17.288 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:17.300 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:17)
2022-12-05 10:10:17.302 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:17.304 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:17.3008941+01:00" stamp is good.
2022-12-05 10:10:17.305 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:17.306 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:17.308 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:17,300;9;74,99791717529297
2022-12-05 10:10:17.309 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:17,300;9;74,99791717529297 stored.
2022-12-05 10:10:17.311 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:19.081 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 10:19
2022-12-05 10:10:19.082 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:10:19.083 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:10:19.096 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:10:19)
2022-12-05 10:10:19.099 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:19.100 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:19.0969837+01:00" stamp is good.
2022-12-05 10:10:19.101 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:10:19.102 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:19.103 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 30.30.30.30;2022-12-05 10:10:19,096;7;75,00224304199219
2022-12-05 10:10:19.105 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:10:19,096;7;75,00224304199219 stored.
2022-12-05 10:10:19.106 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:19.299 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:19
2022-12-05 10:10:19.301 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:19.302 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:19.315 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:19)
2022-12-05 10:10:19.317 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:19.319 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:19.3157298+01:00" stamp is good.
2022-12-05 10:10:19.320 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:19.321 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:19.322 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:19,315;10;74,99935913085938
2022-12-05 10:10:19.324 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:19,315;10;74,99935913085938 stored.
2022-12-05 10:10:19.325 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:21.314 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:21
2022-12-05 10:10:21.315 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:21.316 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:21.330 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:21)
2022-12-05 10:10:21.332 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 67,44%. is added to queue
2022-12-05 10:10:21.333 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:21.3299914+01:00" stamp is good.
2022-12-05 10:10:21.334 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:21.336 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:21.337 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:21,329;11;67,44236755371094
2022-12-05 10:10:21.339 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:21,329;11;67,44236755371094 stored.
2022-12-05 10:10:21.340 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:21.692 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 10:21
2022-12-05 10:10:21.694 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:10:21.696 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:10:21.708 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:10:21)
2022-12-05 10:10:21.710 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:21.712 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:21.7085727+01:00" stamp is good.
2022-12-05 10:10:21.713 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:10:21.715 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:21.716 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 10.10.10.10;2022-12-05 10:10:21,708;5;75,00016021728516
2022-12-05 10:10:21.717 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:10:21,708;5;75,00016021728516 stored.
2022-12-05 10:10:21.719 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:22.086 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 10:22
2022-12-05 10:10:22.088 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:10:22.089 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:10:22.102 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:10:22)
2022-12-05 10:10:22.104 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:22.105 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:22.1020191+01:00" stamp is good.
2022-12-05 10:10:22.106 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:10:22.108 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:22.109 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 30.30.30.30;2022-12-05 10:10:22,102;8;75,00399780273438
2022-12-05 10:10:22.110 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:10:22,102;8;75,00399780273438 stored.
2022-12-05 10:10:22.112 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:23.327 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:23
2022-12-05 10:10:23.329 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:23.330 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:23.343 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:23)
2022-12-05 10:10:23.346 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 67,45%. is added to queue
2022-12-05 10:10:23.347 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:23.3439430+01:00" stamp is good.
2022-12-05 10:10:23.348 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:23.350 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:23.351 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:23,343;12;67,44535064697266
2022-12-05 10:10:23.352 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:23,343;12;67,44535064697266 stored.
2022-12-05 10:10:23.354 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:25.105 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 10:25
2022-12-05 10:10:25.107 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:10:25.108 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:10:25.138 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:10:25)
2022-12-05 10:10:25.139 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:10:25.141 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:25.1380644+01:00" stamp is good.
2022-12-05 10:10:25.142 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:10:25.143 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:25.144 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 30.30.30.30;2022-12-05 10:10:25,138;9;100
2022-12-05 10:10:25.146 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:10:25,138;9;100 stored.
2022-12-05 10:10:25.147 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:25.344 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:25
2022-12-05 10:10:25.354 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:25.356 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:25.361 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:25)
2022-12-05 10:10:25.369 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:10:25.371 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:25.3610562+01:00" stamp is good.
2022-12-05 10:10:25.373 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:25.375 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:25.378 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:25,361;13;100
2022-12-05 10:10:25.379 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:25,361;13;100 stored.
2022-12-05 10:10:25.381 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:26.710 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 10:26
2022-12-05 10:10:26.712 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:10:26.713 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:10:26.726 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:10:26)
2022-12-05 10:10:26.728 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:26.730 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:26.7265350+01:00" stamp is good.
2022-12-05 10:10:26.731 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:10:26.733 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:26.734 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 10.10.10.10;2022-12-05 10:10:26,726;6;75,00048065185547
2022-12-05 10:10:26.735 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:10:26,726;6;75,00048065185547 stored.
2022-12-05 10:10:26.737 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:27.363 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:27
2022-12-05 10:10:27.365 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:27.366 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:27.379 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:27)
2022-12-05 10:10:27.381 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:27.383 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:27.3795301+01:00" stamp is good.
2022-12-05 10:10:27.384 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:27.385 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:27.387 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:27,379;14;75,0014419555664
2022-12-05 10:10:27.388 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:27,379;14;75,0014419555664 stored.
2022-12-05 10:10:27.390 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:28.117 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 10:28
2022-12-05 10:10:28.119 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:10:28.120 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:10:28.133 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:10:28)
2022-12-05 10:10:28.135 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:28.137 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:28.1337336+01:00" stamp is good.
2022-12-05 10:10:28.138 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:10:28.140 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:28.141 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 30.30.30.30;2022-12-05 10:10:28,133;10;75,00096130371094
2022-12-05 10:10:28.142 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:10:28,133;10;75,00096130371094 stored.
2022-12-05 10:10:28.144 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:29.388 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:29
2022-12-05 10:10:29.390 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:29.391 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:29.404 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:29)
2022-12-05 10:10:29.406 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:29.408 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:29.4046846+01:00" stamp is good.
2022-12-05 10:10:29.409 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:29.411 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:29.412 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:29,404;15;75,00479888916016
2022-12-05 10:10:29.413 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:29,404;15;75,00479888916016 stored.
2022-12-05 10:10:29.415 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:31.125 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 10:31
2022-12-05 10:10:31.127 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:10:31.129 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:10:31.142 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:10:31)
2022-12-05 10:10:31.145 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:10:31.147 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:31.1422230+01:00" stamp is good.
2022-12-05 10:10:31.148 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:10:31.149 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:31.150 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 30.30.30.30;2022-12-05 10:10:31,142;11;100
2022-12-05 10:10:31.152 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:10:31,142;11;100 stored.
2022-12-05 10:10:31.153 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:31.394 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:31
2022-12-05 10:10:31.395 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:31.397 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:31.411 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:31)
2022-12-05 10:10:31.412 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:10:31.414 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:31.4109870+01:00" stamp is good.
2022-12-05 10:10:31.415 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:31.417 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:31.418 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:31,410;16;100
2022-12-05 10:10:31.419 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:31,410;16;100 stored.
2022-12-05 10:10:31.421 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:31.728 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 10:31
2022-12-05 10:10:31.730 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:10:31.731 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:10:31.744 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:10:31)
2022-12-05 10:10:31.747 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 83,73%. is added to queue
2022-12-05 10:10:31.748 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:31.7447399+01:00" stamp is good.
2022-12-05 10:10:31.749 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:10:31.750 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:31.751 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 10.10.10.10;2022-12-05 10:10:31,744;7;83,7253646850586
2022-12-05 10:10:31.753 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:10:31,744;7;83,7253646850586 stored.
2022-12-05 10:10:31.754 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:33.401 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:33
2022-12-05 10:10:33.403 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:33.404 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:33.417 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:33)
2022-12-05 10:10:33.419 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:33.421 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:33.4172268+01:00" stamp is good.
2022-12-05 10:10:33.422 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:33.423 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:33.424 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:33,417;17;75,00224304199219
2022-12-05 10:10:33.426 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:33,417;17;75,00224304199219 stored.
2022-12-05 10:10:33.427 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:34.139 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 10:34
2022-12-05 10:10:34.141 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:10:34.142 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:10:34.156 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:10:34)
2022-12-05 10:10:34.158 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 67,44%. is added to queue
2022-12-05 10:10:34.159 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:34.1561722+01:00" stamp is good.
2022-12-05 10:10:34.161 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:10:34.162 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:34.163 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 30.30.30.30;2022-12-05 10:10:34,156;12;67,44046783447266
2022-12-05 10:10:34.165 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:10:34,156;12;67,44046783447266 stored.
2022-12-05 10:10:34.166 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:35.423 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:35
2022-12-05 10:10:35.424 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:35.426 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:35.439 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:35)
2022-12-05 10:10:35.441 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 83,72%. is added to queue
2022-12-05 10:10:35.443 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:35.4394546+01:00" stamp is good.
2022-12-05 10:10:35.444 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:35.445 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:35.446 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:35,439;18;83,72199249267578
2022-12-05 10:10:35.447 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:35,439;18;83,72199249267578 stored.
2022-12-05 10:10:35.449 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:36.734 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 10:36
2022-12-05 10:10:36.735 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:10:36.736 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:10:36.750 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:10:36)
2022-12-05 10:10:36.752 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 87,5%. is added to queue
2022-12-05 10:10:36.754 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:36.7500203+01:00" stamp is good.
2022-12-05 10:10:36.755 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:10:36.756 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:36.757 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 10.10.10.10;2022-12-05 10:10:36,750;8;87,50048065185547
2022-12-05 10:10:36.759 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:10:36,750;8;87,50048065185547 stored.
2022-12-05 10:10:36.760 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:37.156 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 10:37
2022-12-05 10:10:37.157 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:10:37.158 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:10:37.171 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:10:37)
2022-12-05 10:10:37.174 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 87,5%. is added to queue
2022-12-05 10:10:37.175 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:37.1718606+01:00" stamp is good.
2022-12-05 10:10:37.177 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:10:37.178 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:37.179 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 30.30.30.30;2022-12-05 10:10:37,171;13;87,50055694580078
2022-12-05 10:10:37.181 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:10:37,171;13;87,50055694580078 stored.
2022-12-05 10:10:37.182 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:37.437 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:37
2022-12-05 10:10:37.438 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:37.440 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:37.453 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:37)
2022-12-05 10:10:37.455 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:37.456 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:37.4531192+01:00" stamp is good.
2022-12-05 10:10:37.457 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:37.459 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:37.460 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:37,453;19;75,0035171508789
2022-12-05 10:10:37.461 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:37,453;19;75,0035171508789 stored.
2022-12-05 10:10:37.462 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:39.451 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:39
2022-12-05 10:10:39.453 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:39.454 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:39.468 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:39)
2022-12-05 10:10:39.470 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:10:39.471 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:39.4689173+01:00" stamp is good.
2022-12-05 10:10:39.473 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:39.474 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:39.475 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:39,468;20;100
2022-12-05 10:10:39.476 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:39,468;20;100 stored.
2022-12-05 10:10:39.478 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:39.815 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:10:39.844 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:39.883 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:10:39.900 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:10:39.902 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":5000,"$type":"MDState"} 
2022-12-05 10:10:39.908 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:10:39.934 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 38.1953ms
2022-12-05 10:10:39.947 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:39.949 +01:00 [INF] Request finished in 137.5014ms 200 application/json; charset=utf-8
2022-12-05 10:10:39.975 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:10:39.976 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:39.978 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:10:39.982 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:10:39.983 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":2000,"$type":"MDState"} 
2022-12-05 10:10:39.989 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:10:39.991 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 9.9087ms
2022-12-05 10:10:39.993 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:39.994 +01:00 [INF] Request finished in 19.1562ms 200 application/json; charset=utf-8
2022-12-05 10:10:40.000 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:10:40.002 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:40.005 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:10:40.007 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:10:40.008 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:10:40.012 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:10:40.013 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.2762ms
2022-12-05 10:10:40.015 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:40.016 +01:00 [INF] Request finished in 15.3786ms 200 application/json; charset=utf-8
2022-12-05 10:10:40.167 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 10:40
2022-12-05 10:10:40.169 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:10:40.170 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:10:40.183 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:10:40)
2022-12-05 10:10:40.186 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:40.187 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:40.1838392+01:00" stamp is good.
2022-12-05 10:10:40.188 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:10:40.190 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:40.191 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 30.30.30.30;2022-12-05 10:10:40,183;14;75,00399780273438
2022-12-05 10:10:40.192 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:10:40,183;14;75,00399780273438 stored.
2022-12-05 10:10:40.194 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:41.457 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:41
2022-12-05 10:10:41.459 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:41.460 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:41.472 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:41)
2022-12-05 10:10:41.475 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 82,24%. is added to queue
2022-12-05 10:10:41.477 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:41.4729808+01:00" stamp is good.
2022-12-05 10:10:41.478 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:41.479 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:41.480 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:41,472;21;82,24131774902344
2022-12-05 10:10:41.481 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:41,472;21;82,24131774902344 stored.
2022-12-05 10:10:41.483 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:41.745 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 10:41
2022-12-05 10:10:41.747 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:10:41.748 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:10:41.761 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:10:41)
2022-12-05 10:10:41.763 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 87,5%. is added to queue
2022-12-05 10:10:41.765 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:41.7612417+01:00" stamp is good.
2022-12-05 10:10:41.766 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:10:41.767 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:41.768 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 10.10.10.10;2022-12-05 10:10:41,761;9;87,50096130371094
2022-12-05 10:10:41.770 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:10:41,761;9;87,50096130371094 stored.
2022-12-05 10:10:41.771 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:43.170 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 10:43
2022-12-05 10:10:43.172 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:10:43.173 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:10:43.186 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:10:43)
2022-12-05 10:10:43.188 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 87,5%. is added to queue
2022-12-05 10:10:43.190 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:43.1865759+01:00" stamp is good.
2022-12-05 10:10:43.191 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:10:43.192 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:43.193 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 30.30.30.30;2022-12-05 10:10:43,186;15;87,49967956542969
2022-12-05 10:10:43.195 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:10:43,186;15;87,49967956542969 stored.
2022-12-05 10:10:43.196 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:43.467 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:43
2022-12-05 10:10:43.468 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:43.470 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:43.483 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:43)
2022-12-05 10:10:43.485 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:43.486 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:43.4832574+01:00" stamp is good.
2022-12-05 10:10:43.488 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:43.489 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:43.490 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:43,483;22;74,99759674072266
2022-12-05 10:10:43.492 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:43,483;22;74,99759674072266 stored.
2022-12-05 10:10:43.493 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:45.470 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:45
2022-12-05 10:10:45.472 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:45.473 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:45.486 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:45)
2022-12-05 10:10:45.488 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 87,5%. is added to queue
2022-12-05 10:10:45.490 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:45.4868128+01:00" stamp is good.
2022-12-05 10:10:45.491 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:45.493 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:45.494 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:45,486;23;87,50039672851562
2022-12-05 10:10:45.495 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:45,486;23;87,50039672851562 stored.
2022-12-05 10:10:45.497 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:46.172 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 10:46
2022-12-05 10:10:46.174 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:10:46.175 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:10:46.189 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:10:46)
2022-12-05 10:10:46.191 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 67,45%. is added to queue
2022-12-05 10:10:46.192 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:46.1893577+01:00" stamp is good.
2022-12-05 10:10:46.193 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:10:46.195 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:46.196 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 30.30.30.30;2022-12-05 10:10:46,189;16;67,44725036621094
2022-12-05 10:10:46.197 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:10:46,189;16;67,44725036621094 stored.
2022-12-05 10:10:46.198 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:46.758 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 10:46
2022-12-05 10:10:46.760 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:10:46.761 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:10:46.774 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:10:46)
2022-12-05 10:10:46.776 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:46.778 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:46.7746127+01:00" stamp is good.
2022-12-05 10:10:46.779 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:10:46.780 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:46.781 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 10.10.10.10;2022-12-05 10:10:46,774;10;75,00032043457031
2022-12-05 10:10:46.783 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:10:46,774;10;75,00032043457031 stored.
2022-12-05 10:10:46.784 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:47.327 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/nomeasuring/10.10.10.10  
2022-12-05 10:10:47.328 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:47.342 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:10:47.348 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 10.10.10.10
2022-12-05 10:10:47.350 +01:00 [INF] ControllingContollers->Stop Measuring
2022-12-05 10:10:47.358 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:10:47.359 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 14.3305ms
2022-12-05 10:10:47.360 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:47.362 +01:00 [INF] Request finished in 35.0342ms 200 
2022-12-05 10:10:47.406 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:10:47.409 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:47.410 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:10:47.412 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:10:47.413 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":false,"MeasuringInterval":5000,"$type":"MDState"} 
2022-12-05 10:10:47.417 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:10:47.418 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.1212ms
2022-12-05 10:10:47.423 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:47.424 +01:00 [INF] Request finished in 17.5152ms 200 application/json; charset=utf-8
2022-12-05 10:10:47.437 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:10:47.438 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:47.439 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:10:47.441 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:10:47.442 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":2000,"$type":"MDState"} 
2022-12-05 10:10:47.446 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:10:47.448 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.3161ms
2022-12-05 10:10:47.449 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:47.454 +01:00 [INF] Request finished in 16.7676ms 200 application/json; charset=utf-8
2022-12-05 10:10:47.464 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:10:47.465 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:47.468 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:10:47.470 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:10:47.471 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:10:47.475 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:10:47.476 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.4375ms
2022-12-05 10:10:47.478 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:47.479 +01:00 [INF] Request finished in 15.543ms 200 application/json; charset=utf-8
2022-12-05 10:10:47.481 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:47
2022-12-05 10:10:47.485 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:47.487 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:47.513 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:47)
2022-12-05 10:10:47.514 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 84,38%. is added to queue
2022-12-05 10:10:47.516 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:47.5133314+01:00" stamp is good.
2022-12-05 10:10:47.517 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:47.518 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:47.519 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:47,513;24;84,37854766845703
2022-12-05 10:10:47.521 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:47,513;24;84,37854766845703 stored.
2022-12-05 10:10:47.522 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:49.188 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 10:49
2022-12-05 10:10:49.189 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:10:49.191 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:10:49.204 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:10:49)
2022-12-05 10:10:49.206 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:49.207 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:49.2040374+01:00" stamp is good.
2022-12-05 10:10:49.208 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:10:49.210 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:49.211 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 30.30.30.30;2022-12-05 10:10:49,204;17;75,0031967163086
2022-12-05 10:10:49.212 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:10:49,204;17;75,0031967163086 stored.
2022-12-05 10:10:49.214 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:49.504 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:49
2022-12-05 10:10:49.505 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:49.506 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:49.519 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:49)
2022-12-05 10:10:49.521 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:10:49.523 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:49.5198299+01:00" stamp is good.
2022-12-05 10:10:49.524 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:49.525 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:49.526 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:49,519;25;75
2022-12-05 10:10:49.527 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:49,519;25;75 stored.
2022-12-05 10:10:49.529 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:49.539 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/nomeasuring/30.30.30.30  
2022-12-05 10:10:49.542 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:49.546 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:10:49.549 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 30.30.30.30
2022-12-05 10:10:49.550 +01:00 [INF] ControllingContollers->Stop Measuring
2022-12-05 10:10:49.554 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:10:49.555 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 6.6637ms
2022-12-05 10:10:49.556 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:49.558 +01:00 [INF] Request finished in 18.7248ms 200 
2022-12-05 10:10:49.603 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:10:49.604 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:49.607 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:10:49.610 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:10:49.611 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":false,"MeasuringInterval":5000,"$type":"MDState"} 
2022-12-05 10:10:49.615 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:10:49.617 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 7.5674ms
2022-12-05 10:10:49.618 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:49.620 +01:00 [INF] Request finished in 16.6148ms 200 application/json; charset=utf-8
2022-12-05 10:10:49.646 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:10:49.648 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:49.650 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:10:49.655 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:10:49.656 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":2000,"$type":"MDState"} 
2022-12-05 10:10:49.661 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:10:49.663 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 8.276ms
2022-12-05 10:10:49.665 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:49.667 +01:00 [INF] Request finished in 21.2244ms 200 application/json; charset=utf-8
2022-12-05 10:10:49.679 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:10:49.681 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:49.682 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:10:49.687 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:10:49.688 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":false,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:10:49.693 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:10:49.695 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 8.4646ms
2022-12-05 10:10:49.696 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:49.697 +01:00 [INF] Request finished in 17.6959ms 200 application/json; charset=utf-8
2022-12-05 10:10:51.511 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 10:51
2022-12-05 10:10:51.513 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:10:51.514 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:10:51.555 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:10:51)
2022-12-05 10:10:51.557 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 85,23%. is added to queue
2022-12-05 10:10:51.558 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:10:51.5556200+01:00" stamp is good.
2022-12-05 10:10:51.560 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:10:51.561 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:51.562 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> Data is stored: 20.20.20.20;2022-12-05 10:10:51,555;26;85,2323989868164
2022-12-05 10:10:51.564 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:10:51,555;26;85,2323989868164 stored.
2022-12-05 10:10:51.565 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-10.txt
2022-12-05 10:10:51.596 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/stop/20.20.20.20  
2022-12-05 10:10:51.599 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:51.600 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:10:51.603 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 10.10.10.10
2022-12-05 10:10:51.604 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> Controlling: stop, IP address: 20.20.20.20.
2022-12-05 10:10:51.609 +01:00 [INF] ControllingContollers->Token stop cancel is requested
2022-12-05 10:10:51.629 +01:00 [INF] SendBackupFileSystem -> Stop
2022-12-05 10:10:51.631 +01:00 [INF] ControllingContollers->Stop Async
2022-12-05 10:10:51.632 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:10:51.634 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 31.841ms
2022-12-05 10:10:51.636 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:51.638 +01:00 [INF] Request finished in 42.2346ms 200 
2022-12-05 10:10:51.677 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:10:51.682 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:51.683 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:10:51.685 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:10:51.686 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":false,"MeasuringInterval":5000,"$type":"MDState"} 
2022-12-05 10:10:51.690 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:10:51.691 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.5884ms
2022-12-05 10:10:51.693 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:51.694 +01:00 [INF] Request finished in 17.1406ms 200 application/json; charset=utf-8
2022-12-05 10:10:51.700 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:10:51.701 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:51.703 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:10:51.709 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:10:51.710 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":2000,"$type":"MDState"} 
2022-12-05 10:10:51.714 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:10:51.715 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.3238ms
2022-12-05 10:10:51.716 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:51.718 +01:00 [INF] Request finished in 17.4399ms 200 application/json; charset=utf-8
2022-12-05 10:10:51.730 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:10:51.732 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:51.733 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:10:51.737 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:10:51.738 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":false,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:10:51.743 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:10:51.744 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 7.4146ms
2022-12-05 10:10:51.746 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:10:51.747 +01:00 [INF] Request finished in 16.5747ms 200 application/json; charset=utf-8
2022-12-05 10:10:51.765 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 10:51
2022-12-05 10:10:52.188 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 10:52
2022-12-05 10:10:55.194 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 10:55
2022-12-05 10:10:56.776 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 10:56
2022-12-05 10:10:58.199 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 10:58
2022-12-05 10:11:00.400 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/measuring/10.10.10.10  
2022-12-05 10:11:00.402 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:00.403 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:00.406 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 10.10.10.10
2022-12-05 10:11:00.407 +01:00 [INF] ControllingContollers->Start Measuring
2022-12-05 10:11:00.408 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:11:00.409 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 3.542ms
2022-12-05 10:11:00.410 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:00.412 +01:00 [INF] Request finished in 11.233ms 200 
2022-12-05 10:11:00.460 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:11:00.462 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:00.463 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:00.466 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:11:00.467 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":5000,"$type":"MDState"} 
2022-12-05 10:11:00.475 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:00.476 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 10.8435ms
2022-12-05 10:11:00.478 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:00.479 +01:00 [INF] Request finished in 18.4972ms 200 application/json; charset=utf-8
2022-12-05 10:11:00.490 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:11:00.491 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:00.492 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:00.495 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:11:00.496 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":2000,"$type":"MDState"} 
2022-12-05 10:11:00.500 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:00.502 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 7.7459ms
2022-12-05 10:11:00.512 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:00.514 +01:00 [INF] Request finished in 24.1543ms 200 application/json; charset=utf-8
2022-12-05 10:11:00.523 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:11:00.524 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:00.525 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:00.528 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:11:00.528 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":false,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:11:00.532 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:00.533 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.1225ms
2022-12-05 10:11:00.538 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:00.540 +01:00 [INF] Request finished in 17.1054ms 200 application/json; charset=utf-8
2022-12-05 10:11:01.207 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 11:01
2022-12-05 10:11:01.704 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/measuring/30.30.30.30  
2022-12-05 10:11:01.708 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:01.710 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:01.712 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 30.30.30.30
2022-12-05 10:11:01.713 +01:00 [INF] ControllingContollers->Start Measuring
2022-12-05 10:11:01.714 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:11:01.715 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 3.0777ms
2022-12-05 10:11:01.716 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:01.717 +01:00 [INF] Request finished in 12.9729ms 200 
2022-12-05 10:11:01.765 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:11:01.766 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:01.767 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:01.769 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:11:01.770 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":5000,"$type":"MDState"} 
2022-12-05 10:11:01.774 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:01.776 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.3904ms
2022-12-05 10:11:01.777 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:01.778 +01:00 [INF] Request finished in 13.3563ms 200 application/json; charset=utf-8
2022-12-05 10:11:01.787 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 11:01
2022-12-05 10:11:01.796 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:11:01.796 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:11:01.797 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:11:01.798 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:01.800 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:01.802 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:11:01.803 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:11:01)
2022-12-05 10:11:01.805 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":2000,"$type":"MDState"} 
2022-12-05 10:11:01.807 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:11:01.811 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:01.812 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:01.8036216+01:00" stamp is expired.
2022-12-05 10:11:01.813 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 11.5662ms
2022-12-05 10:11:01.815 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> File is closed
2022-12-05 10:11:01.816 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:01.817 +01:00 [INF] PeriodicallyStoreSystem  -> d:\tuw\log\2022-12-5-10-10.txt is closed.
2022-12-05 10:11:01.818 +01:00 [INF] Request finished in 21.5684ms 200 application/json; charset=utf-8
2022-12-05 10:11:01.822 +01:00 [INF] SendBackupFileSystem ->Found closd TXT file. Rename to BAK extenson: d:\tuw\log\10.10.10.10\2022-12-5-10-10.txt
2022-12-05 10:11:01.822 +01:00 [INF] PeriodicallyStoreSystem  -> 2022-12-5-10-10.txt is closed and new extenstion is bak.
2022-12-05 10:11:01.824 +01:00 [INF] SendBackupFileSystem -> GetBackupFiles->Found 1 txt file.
2022-12-05 10:11:01.825 +01:00 [INF] PeriodicallyStoreSystem -> New File id: 2022-12-5-10-11.txt
2022-12-05 10:11:01.826 +01:00 [INF] SendBackupFileSystem -> Precessed file:d:\tuw\log\10.10.10.10\2022-12-5-10-10.bak.
2022-12-05 10:11:01.827 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:11:01.828 +01:00 [INF] SendBackupFileSystem -> Number of line in file 9.
2022-12-05 10:11:01.829 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:01.830 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:01.831 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> File not exsist. File created.
2022-12-05 10:11:01.832 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:10:06,669;2;100
2022-12-05 10:11:01.832 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:11:01.833 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:11:01,803;1;74,99711608886719 stored.
2022-12-05 10:11:01.838 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:01.839 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:01.841 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:01.844 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:11:01.845 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:11:01.849 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:01.854 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 10.0244ms
2022-12-05 10:11:01.855 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:01.857 +01:00 [INF] Request finished in 24.3684ms 200 application/json; charset=utf-8
2022-12-05 10:11:01.862 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:01.864 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:01.865 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:01.870 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:10:11,679;3;74,99807739257812
2022-12-05 10:11:01.899 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:01.900 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:01.901 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:01.902 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:10:16,721;4;76,09569549560547
2022-12-05 10:11:01.928 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:01.929 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:01.930 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:01.931 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:10:21,708;5;75,00016021728516
2022-12-05 10:11:01.956 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:01.957 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:01.959 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:01.960 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:10:26,726;6;75,00048065185547
2022-12-05 10:11:01.986 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:01.987 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:01.988 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:01.989 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:10:31,744;7;83,7253646850586
2022-12-05 10:11:02.017 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:02.018 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:02.020 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:02.021 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:10:36,750;8;87,50048065185547
2022-12-05 10:11:02.047 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:02.048 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:02.049 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:02.050 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:10:41,761;9;87,50096130371094
2022-12-05 10:11:02.077 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:02.079 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:02.080 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:02.081 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:10:46,774;10;75,00032043457031
2022-12-05 10:11:02.105 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:02.107 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:02.110 +01:00 [INF] SendBackupFileSystem -> All line from d:\tuw\log\10.10.10.10\2022-12-5-10-10.bak is sended.
2022-12-05 10:11:03.976 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/start/20.20.20.20  
2022-12-05 10:11:03.978 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:03.979 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:03.982 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 10.10.10.10
2022-12-05 10:11:03.984 +01:00 [INF] ControllingContollers->Token stop cancel is not requested
2022-12-05 10:11:03.984 +01:00 [INF] MeasureDevice 20.20.20.20 -> StartAsync
2022-12-05 10:11:03.988 +01:00 [INF] MeasureDevice 20.20.20.20 -> StartAsync, mesuring interval is 2000
2022-12-05 10:11:03.990 +01:00 [INF] Token cancel is not requested
2022-12-05 10:11:03.991 +01:00 [INF] MeasureDeviceAPIService -> Uri is http://localhost:5001/api/md/
2022-12-05 10:11:03.992 +01:00 [INF] MeasureDeviceAPIService -> Sended data -> {"Id":2,"Name":"20.20.20.20","Interval":2000,"$type":"EFMeasureDevice"}
2022-12-05 10:11:03.998 +01:00 [INF] ControllingContollers->Start Async
2022-12-05 10:11:04.000 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:11:04.001 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 19.3864ms
2022-12-05 10:11:04.004 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:04.005 +01:00 [INF] Request finished in 28.9666ms 200 
2022-12-05 10:11:04.051 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:11:04.052 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:04.053 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:04.057 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:11:04.058 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":5000,"$type":"MDState"} 
2022-12-05 10:11:04.061 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:04.063 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.8187ms
2022-12-05 10:11:04.065 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:04.066 +01:00 [INF] Request finished in 14.9029ms 200 application/json; charset=utf-8
2022-12-05 10:11:04.068 +01:00 [INF] MeasureDeviceAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:04.069 +01:00 [INF] MeasureDevice 20.20.20.20 -> ExecuteAsync
2022-12-05 10:11:04.070 +01:00 [INF] ExecuteAsync Token cancel is not requested
2022-12-05 10:11:04.077 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 11:04
2022-12-05 10:11:04.077 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:11:04.078 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:11:04.079 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:04.080 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:11:04.081 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:04.084 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:11:04.085 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":2000,"$type":"MDState"} 
2022-12-05 10:11:04.086 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:11:04)
2022-12-05 10:11:04.092 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:04.093 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:11:04.094 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 9.8701ms
2022-12-05 10:11:04.096 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:04.0868773+01:00" stamp is expired.
2022-12-05 10:11:04.097 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:04.098 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> File is closed
2022-12-05 10:11:04.099 +01:00 [INF] Request finished in 22.7584ms 200 application/json; charset=utf-8
2022-12-05 10:11:04.101 +01:00 [INF] PeriodicallyStoreSystem  -> d:\tuw\log\2022-12-5-10-10.txt is closed.
2022-12-05 10:11:04.106 +01:00 [INF] PeriodicallyStoreSystem  -> 2022-12-5-10-10.txt is closed and new extenstion is bak.
2022-12-05 10:11:04.107 +01:00 [INF] PeriodicallyStoreSystem -> New File id: 2022-12-5-10-11.txt
2022-12-05 10:11:04.108 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:11:04.110 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:04.110 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:11:04.111 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> File not exsist. File created.
2022-12-05 10:11:04.112 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:04.113 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:11:04,086;1;75,00160217285156 stored.
2022-12-05 10:11:04.114 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:04.115 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:04.117 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:11:04.121 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:11:04.125 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:04.127 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 9.5686ms
2022-12-05 10:11:04.128 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:04.130 +01:00 [INF] Request finished in 19.1817ms 200 application/json; charset=utf-8
2022-12-05 10:11:04.211 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 11:04
2022-12-05 10:11:04.213 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:11:04.214 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:11:04.226 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:11:04)
2022-12-05 10:11:04.229 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 64,49%. is added to queue
2022-12-05 10:11:04.230 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:04.2269336+01:00" stamp is expired.
2022-12-05 10:11:04.232 +01:00 [INF] MeasuringDataStore 2022-12-5-10-10.txt -> File is closed
2022-12-05 10:11:04.233 +01:00 [INF] PeriodicallyStoreSystem  -> d:\tuw\log\2022-12-5-10-10.txt is closed.
2022-12-05 10:11:04.234 +01:00 [INF] PeriodicallyStoreSystem  -> 2022-12-5-10-10.txt is closed and new extenstion is bak.
2022-12-05 10:11:04.235 +01:00 [INF] PeriodicallyStoreSystem -> New File id: 2022-12-5-10-11.txt
2022-12-05 10:11:04.236 +01:00 [INF] SendBackupFileSystem ->Found closd TXT file. Rename to BAK extenson: d:\tuw\log\30.30.30.30\2022-12-5-10-10.txt
2022-12-05 10:11:04.237 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:11:04.238 +01:00 [INF] SendBackupFileSystem -> GetBackupFiles->Found 1 txt file.
2022-12-05 10:11:04.239 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:04.240 +01:00 [INF] SendBackupFileSystem -> Precessed file:d:\tuw\log\30.30.30.30\2022-12-5-10-10.bak.
2022-12-05 10:11:04.241 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> File not exsist. File created.
2022-12-05 10:11:04.242 +01:00 [INF] SendBackupFileSystem -> Number of line in file 16.
2022-12-05 10:11:04.245 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:11:04,226;1;64,48786163330078 stored.
2022-12-05 10:11:04.245 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:04.247 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:04.248 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:10:04,043;2;84,9764633178711
2022-12-05 10:11:04.272 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:04.273 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:04.276 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:04.277 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:10:07,045;3;87,50176239013672
2022-12-05 10:11:04.302 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:04.304 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:04.305 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:04.306 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:10:10,070;4;100
2022-12-05 10:11:04.340 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:04.341 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:04.343 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:04.344 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:10:13,075;5;75,00016021728516
2022-12-05 10:11:04.373 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:04.375 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:04.376 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:04.377 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:10:16,086;6;67,43611907958984
2022-12-05 10:11:04.405 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:04.406 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:04.407 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:04.408 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:10:19,096;7;75,00224304199219
2022-12-05 10:11:04.438 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:04.439 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:04.440 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:04.442 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:10:22,102;8;75,00399780273438
2022-12-05 10:11:04.468 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:04.470 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:04.471 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:04.472 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:10:25,138;9;100
2022-12-05 10:11:04.498 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:04.500 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:04.501 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:04.502 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:10:28,133;10;75,00096130371094
2022-12-05 10:11:04.529 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:04.530 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:04.531 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:04.532 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:10:31,142;11;100
2022-12-05 10:11:04.558 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:04.560 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:04.561 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:04.562 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:10:34,156;12;67,44046783447266
2022-12-05 10:11:04.591 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:04.592 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:04.593 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:04.594 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:10:37,171;13;87,50055694580078
2022-12-05 10:11:04.619 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:04.621 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:04.622 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:04.623 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:10:40,183;14;75,00399780273438
2022-12-05 10:11:04.650 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:04.651 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:04.652 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:04.653 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:10:43,186;15;87,49967956542969
2022-12-05 10:11:04.678 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:04.679 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:04.680 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:04.681 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:10:46,189;16;67,44725036621094
2022-12-05 10:11:04.716 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:04.717 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:04.719 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:11:04.720 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:10:49,204;17;75,0031967163086
2022-12-05 10:11:04.746 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:04.747 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:11:04.748 +01:00 [INF] SendBackupFileSystem -> All line from d:\tuw\log\30.30.30.30\2022-12-5-10-10.bak is sended.
2022-12-05 10:11:06.078 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 11:06
2022-12-05 10:11:06.080 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:11:06.081 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:11:06.094 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:11:06)
2022-12-05 10:11:06.096 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 62,49%. is added to queue
2022-12-05 10:11:06.097 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:06.0944499+01:00" stamp is good.
2022-12-05 10:11:06.099 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:11:06.100 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:06.101 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 20.20.20.20;2022-12-05 10:11:06,094;2;62,49359893798828
2022-12-05 10:11:06.102 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:11:06,094;2;62,49359893798828 stored.
2022-12-05 10:11:06.104 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:06.490 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/stop/30.30.30.30  
2022-12-05 10:11:06.491 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:06.494 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:06.498 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 30.30.30.30
2022-12-05 10:11:06.499 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> Controlling: stop, IP address: 30.30.30.30.
2022-12-05 10:11:06.503 +01:00 [INF] ControllingContollers->Token stop cancel is requested
2022-12-05 10:11:06.505 +01:00 [INF] SendBackupFileSystem -> Stop
2022-12-05 10:11:06.505 +01:00 [INF] ControllingContollers->Stop Async
2022-12-05 10:11:06.507 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:11:06.508 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 11.1142ms
2022-12-05 10:11:06.509 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:06.511 +01:00 [INF] Request finished in 20.8985ms 200 
2022-12-05 10:11:06.548 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:11:06.549 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:06.551 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:06.553 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:11:06.554 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":5000,"$type":"MDState"} 
2022-12-05 10:11:06.559 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:06.560 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 7.1984ms
2022-12-05 10:11:06.561 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:06.563 +01:00 [INF] Request finished in 14.9316ms 200 application/json; charset=utf-8
2022-12-05 10:11:06.570 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:11:06.573 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:06.575 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:06.577 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:11:06.577 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":2000,"$type":"MDState"} 
2022-12-05 10:11:06.581 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:06.582 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 5.707ms
2022-12-05 10:11:06.584 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:06.585 +01:00 [INF] Request finished in 14.9398ms 200 application/json; charset=utf-8
2022-12-05 10:11:06.599 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:11:06.600 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:06.602 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:06.605 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:11:06.605 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:11:06.609 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:06.611 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.5173ms
2022-12-05 10:11:06.612 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:06.614 +01:00 [INF] Request finished in 14.2995ms 200 application/json; charset=utf-8
2022-12-05 10:11:06.796 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 11:06
2022-12-05 10:11:06.798 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:11:06.799 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:11:06.812 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:11:06)
2022-12-05 10:11:06.814 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 54,94%. is added to queue
2022-12-05 10:11:06.816 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:06.8129861+01:00" stamp is good.
2022-12-05 10:11:06.817 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:11:06.819 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:06.820 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 10.10.10.10;2022-12-05 10:11:06,812;2;54,94086456298828
2022-12-05 10:11:06.821 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:11:06,812;2;54,94086456298828 stored.
2022-12-05 10:11:06.824 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:07.601 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/stop/20.20.20.20  
2022-12-05 10:11:07.602 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:07.604 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:07.608 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 10.10.10.10
2022-12-05 10:11:07.609 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> Controlling: stop, IP address: 20.20.20.20.
2022-12-05 10:11:07.611 +01:00 [INF] ControllingContollers->Token stop cancel is requested
2022-12-05 10:11:07.613 +01:00 [INF] ControllingContollers->Stop Async
2022-12-05 10:11:07.614 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:11:07.615 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 8.2898ms
2022-12-05 10:11:07.617 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:07.618 +01:00 [INF] Request finished in 17.3719ms 200 
2022-12-05 10:11:07.669 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:11:07.671 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:07.673 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:07.675 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:11:07.676 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":5000,"$type":"MDState"} 
2022-12-05 10:11:07.680 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:07.681 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.4124ms
2022-12-05 10:11:07.682 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:07.683 +01:00 [INF] Request finished in 14.1135ms 200 application/json; charset=utf-8
2022-12-05 10:11:07.698 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:11:07.699 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:07.701 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:07.704 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:11:07.705 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":2000,"$type":"MDState"} 
2022-12-05 10:11:07.709 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:07.711 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.6501ms
2022-12-05 10:11:07.712 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:07.713 +01:00 [INF] Request finished in 14.985ms 200 application/json; charset=utf-8
2022-12-05 10:11:07.722 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:11:07.724 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:07.725 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:07.727 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:11:07.728 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:11:07.732 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:07.736 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 8.8997ms
2022-12-05 10:11:07.738 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:07.739 +01:00 [INF] Request finished in 16.5342ms 200 application/json; charset=utf-8
2022-12-05 10:11:09.620 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/10.10.10.10  
2022-12-05 10:11:09.622 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:09.629 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:09.635 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:11:09.636 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 5000 
2022-12-05 10:11:09.637 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:11:09.639 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 6.1259ms
2022-12-05 10:11:09.641 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:09.642 +01:00 [INF] Request finished in 22.2547ms 200 application/json; charset=utf-8
2022-12-05 10:11:09.662 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/20.20.20.20  
2022-12-05 10:11:09.663 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:09.664 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:09.667 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 20.20.20.20
2022-12-05 10:11:09.668 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 2000 
2022-12-05 10:11:09.669 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:11:09.671 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 4.1896ms
2022-12-05 10:11:09.672 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:09.673 +01:00 [INF] Request finished in 11.8522ms 200 application/json; charset=utf-8
2022-12-05 10:11:09.688 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/30.30.30.30  
2022-12-05 10:11:09.690 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:09.692 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:09.694 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:11:09.695 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 3000 
2022-12-05 10:11:09.697 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:11:09.698 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 3.5387ms
2022-12-05 10:11:09.700 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:09.701 +01:00 [INF] Request finished in 12.3323ms 200 application/json; charset=utf-8
2022-12-05 10:11:11.808 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 11:11
2022-12-05 10:11:11.810 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:11:11.811 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:11:11.824 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:11:11)
2022-12-05 10:11:11.826 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50%. is added to queue
2022-12-05 10:11:11.827 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:11.8244365+01:00" stamp is good.
2022-12-05 10:11:11.828 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:11:11.829 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:11.830 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 10.10.10.10;2022-12-05 10:11:11,824;3;49,995201110839844
2022-12-05 10:11:11.831 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:11:11,824;3;49,995201110839844 stored.
2022-12-05 10:11:11.832 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:14.360 +01:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/interval/10.10.10.10/ application/json; charset=utf-8 17
2022-12-05 10:11:14.362 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.SetMDInsterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:14.366 +01:00 [INF] Route matched with {action = "SetMDInsterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SetMDInsterval(System.String, DataModel.MDDataModel.MDIntervalData) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:14.376 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:11:14.377 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> Interval: DataModel.MDDataModel.MDIntervalData 
2022-12-05 10:11:14.379 +01:00 [INF] MeasureDevice 10.10.10.10 -> New intaerval set: 5000
2022-12-05 10:11:14.380 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:11:14.381 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.SetMDInsterval (MeasureDeviceServiceAPIProject) in 13.5193ms
2022-12-05 10:11:14.383 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.SetMDInsterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:14.384 +01:00 [INF] Request finished in 23.628ms 200 
2022-12-05 10:11:14.418 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/10.10.10.10  
2022-12-05 10:11:14.420 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:14.421 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:14.424 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:11:14.425 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 7000 
2022-12-05 10:11:14.426 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:11:14.427 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 3.5653ms
2022-12-05 10:11:14.429 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:14.430 +01:00 [INF] Request finished in 11.8768ms 200 application/json; charset=utf-8
2022-12-05 10:11:14.439 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/20.20.20.20  
2022-12-05 10:11:14.440 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:14.441 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:14.443 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 20.20.20.20
2022-12-05 10:11:14.444 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 2000 
2022-12-05 10:11:14.445 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:11:14.447 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 3.3723ms
2022-12-05 10:11:14.448 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:14.452 +01:00 [INF] Request finished in 13.2214ms 200 application/json; charset=utf-8
2022-12-05 10:11:14.462 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/30.30.30.30  
2022-12-05 10:11:14.463 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:14.464 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:14.468 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:11:14.469 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 3000 
2022-12-05 10:11:14.471 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:11:14.472 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 3.4309ms
2022-12-05 10:11:14.473 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:14.475 +01:00 [INF] Request finished in 12.5192ms 200 application/json; charset=utf-8
2022-12-05 10:11:16.822 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 11:16
2022-12-05 10:11:16.824 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:11:16.825 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:11:16.838 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:11:16)
2022-12-05 10:11:16.840 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 62,5%. is added to queue
2022-12-05 10:11:16.841 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:16.8382433+01:00" stamp is good.
2022-12-05 10:11:16.842 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:11:16.843 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:16.844 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 10.10.10.10;2022-12-05 10:11:16,838;4;62,496238708496094
2022-12-05 10:11:16.845 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:11:16,838;4;62,496238708496094 stored.
2022-12-05 10:11:16.846 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:23.826 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 11:23
2022-12-05 10:11:23.827 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:11:23.829 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:11:23.842 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:11:23)
2022-12-05 10:11:23.844 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 67,45%. is added to queue
2022-12-05 10:11:23.845 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:23.8425258+01:00" stamp is good.
2022-12-05 10:11:23.846 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:11:23.848 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:23.848 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 10.10.10.10;2022-12-05 10:11:23,842;5;67,45348358154297
2022-12-05 10:11:23.850 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:11:23,842;5;67,45348358154297 stored.
2022-12-05 10:11:23.851 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:27.586 +01:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/interval/20.20.20.20/ application/json; charset=utf-8 17
2022-12-05 10:11:27.587 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.SetMDInsterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:27.589 +01:00 [INF] Route matched with {action = "SetMDInsterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SetMDInsterval(System.String, DataModel.MDDataModel.MDIntervalData) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:27.594 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:11:27.595 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> Interval: DataModel.MDDataModel.MDIntervalData 
2022-12-05 10:11:27.596 +01:00 [INF] MeasureDevice 20.20.20.20 -> New intaerval set: 2000
2022-12-05 10:11:27.598 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:11:27.599 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.SetMDInsterval (MeasureDeviceServiceAPIProject) in 7.8452ms
2022-12-05 10:11:27.600 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.SetMDInsterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:27.602 +01:00 [INF] Request finished in 15.9567ms 200 
2022-12-05 10:11:27.640 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/10.10.10.10  
2022-12-05 10:11:27.641 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:27.642 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:27.645 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:11:27.646 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 7000 
2022-12-05 10:11:27.647 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:11:27.648 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 3.6788ms
2022-12-05 10:11:27.650 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:27.651 +01:00 [INF] Request finished in 11.7357ms 200 application/json; charset=utf-8
2022-12-05 10:11:27.665 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/20.20.20.20  
2022-12-05 10:11:27.666 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:27.667 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:27.671 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 20.20.20.20
2022-12-05 10:11:27.672 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 4000 
2022-12-05 10:11:27.674 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:11:27.675 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 3.5187ms
2022-12-05 10:11:27.676 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:27.678 +01:00 [INF] Request finished in 12.462ms 200 application/json; charset=utf-8
2022-12-05 10:11:27.687 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/30.30.30.30  
2022-12-05 10:11:27.688 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:27.689 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:27.692 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:11:27.692 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 3000 
2022-12-05 10:11:27.694 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:11:27.695 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 3.5253ms
2022-12-05 10:11:27.696 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:27.698 +01:00 [INF] Request finished in 10.6753ms 200 application/json; charset=utf-8
2022-12-05 10:11:30.853 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 11:30
2022-12-05 10:11:30.855 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:11:30.856 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:11:30.869 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:11:30)
2022-12-05 10:11:30.871 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50%. is added to queue
2022-12-05 10:11:30.873 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:30.8695025+01:00" stamp is good.
2022-12-05 10:11:30.874 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:11:30.876 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:30.877 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 10.10.10.10;2022-12-05 10:11:30,869;6;49,99679946899414
2022-12-05 10:11:30.878 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:11:30,869;6;49,99679946899414 stored.
2022-12-05 10:11:30.880 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:34.596 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:11:34.598 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:34.599 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:34.601 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:11:34.603 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":7000,"$type":"MDState"} 
2022-12-05 10:11:34.607 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:34.609 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 8.1801ms
2022-12-05 10:11:34.613 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:34.618 +01:00 [INF] Request finished in 21.4176ms 200 application/json; charset=utf-8
2022-12-05 10:11:34.633 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:11:34.634 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:34.636 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:34.638 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:11:34.640 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:11:34.644 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:34.645 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.9887ms
2022-12-05 10:11:34.649 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:34.650 +01:00 [INF] Request finished in 16.8726ms 200 application/json; charset=utf-8
2022-12-05 10:11:34.664 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:11:34.665 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:34.667 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:34.669 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:11:34.670 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:11:34.674 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:34.675 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.7265ms
2022-12-05 10:11:34.677 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:34.681 +01:00 [INF] Request finished in 16.3129ms 200 application/json; charset=utf-8
2022-12-05 10:11:36.642 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/nomeasuring/10.10.10.10  
2022-12-05 10:11:36.643 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:36.644 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:36.647 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 10.10.10.10
2022-12-05 10:11:36.648 +01:00 [INF] ControllingContollers->Stop Measuring
2022-12-05 10:11:36.649 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:11:36.650 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 3.2609ms
2022-12-05 10:11:36.651 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:36.652 +01:00 [INF] Request finished in 10.6275ms 200 
2022-12-05 10:11:36.687 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:11:36.689 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:36.691 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:36.693 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:11:36.694 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":false,"MeasuringInterval":7000,"$type":"MDState"} 
2022-12-05 10:11:36.697 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:36.699 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.0924ms
2022-12-05 10:11:36.701 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:36.702 +01:00 [INF] Request finished in 15.0583ms 200 application/json; charset=utf-8
2022-12-05 10:11:36.719 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:11:36.721 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:36.722 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:36.724 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:11:36.725 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:11:36.729 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:36.730 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.128ms
2022-12-05 10:11:36.732 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:36.733 +01:00 [INF] Request finished in 13.9285ms 200 application/json; charset=utf-8
2022-12-05 10:11:36.746 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:11:36.747 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:36.748 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:36.752 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:11:36.753 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:11:36.757 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:36.758 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.4181ms
2022-12-05 10:11:36.760 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:36.761 +01:00 [INF] Request finished in 15.6397ms 200 application/json; charset=utf-8
2022-12-05 10:11:37.872 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 11:37
2022-12-05 10:11:38.631 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/stop/10.10.10.10  
2022-12-05 10:11:38.632 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:38.633 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:38.636 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 10.10.10.10
2022-12-05 10:11:38.637 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> Controlling: stop, IP address: 10.10.10.10.
2022-12-05 10:11:38.639 +01:00 [INF] ControllingContollers->Token stop cancel is requested
2022-12-05 10:11:38.641 +01:00 [INF] ControllingContollers->Stop Async
2022-12-05 10:11:38.641 +01:00 [INF] SendBackupFileSystem -> Stop
2022-12-05 10:11:38.642 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:11:38.646 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 10.4483ms
2022-12-05 10:11:38.651 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:38.652 +01:00 [INF] Request finished in 21.2794ms 200 
2022-12-05 10:11:38.698 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:11:38.699 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:38.700 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:38.702 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:11:38.703 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":7000,"$type":"MDState"} 
2022-12-05 10:11:38.708 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:38.709 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.8158ms
2022-12-05 10:11:38.711 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:38.712 +01:00 [INF] Request finished in 14.2252ms 200 application/json; charset=utf-8
2022-12-05 10:11:38.722 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:11:38.728 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:38.729 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:38.732 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:11:38.733 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:11:38.737 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:38.738 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.8842ms
2022-12-05 10:11:38.740 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:38.741 +01:00 [INF] Request finished in 19.3333ms 200 application/json; charset=utf-8
2022-12-05 10:11:38.748 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:11:38.749 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:38.750 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:38.755 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:11:38.756 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:11:38.760 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:38.761 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.551ms
2022-12-05 10:11:38.763 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:38.764 +01:00 [INF] Request finished in 16.5482ms 200 application/json; charset=utf-8
2022-12-05 10:11:43.022 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/start/20.20.20.20  
2022-12-05 10:11:43.024 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:43.025 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:43.027 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 10.10.10.10
2022-12-05 10:11:43.028 +01:00 [INF] ControllingContollers->Token stop cancel is not requested
2022-12-05 10:11:43.029 +01:00 [INF] MeasureDevice 20.20.20.20 -> StartAsync
2022-12-05 10:11:43.030 +01:00 [INF] MeasureDevice 20.20.20.20 -> StartAsync, mesuring interval is 4000
2022-12-05 10:11:43.031 +01:00 [INF] Token cancel is not requested
2022-12-05 10:11:43.032 +01:00 [INF] MeasureDeviceAPIService -> Uri is http://localhost:5001/api/md/
2022-12-05 10:11:43.036 +01:00 [INF] MeasureDeviceAPIService -> Sended data -> {"Id":2,"Name":"20.20.20.20","Interval":4000,"$type":"EFMeasureDevice"}
2022-12-05 10:11:43.041 +01:00 [INF] ControllingContollers->Start Async
2022-12-05 10:11:43.042 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:11:43.043 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 15.7611ms
2022-12-05 10:11:43.045 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:43.047 +01:00 [INF] Request finished in 24.2598ms 200 
2022-12-05 10:11:43.106 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:11:43.108 +01:00 [INF] MeasureDeviceAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:43.108 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:43.109 +01:00 [INF] MeasureDevice 20.20.20.20 -> ExecuteAsync
2022-12-05 10:11:43.110 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:43.111 +01:00 [INF] ExecuteAsync Token cancel is not requested
2022-12-05 10:11:43.113 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:11:43.114 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 11:43
2022-12-05 10:11:43.114 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":7000,"$type":"MDState"} 
2022-12-05 10:11:43.115 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:11:43.118 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:43.131 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:11:43.132 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 19.1807ms
2022-12-05 10:11:43.135 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:43.136 +01:00 [INF] Request finished in 30.5786ms 200 application/json; charset=utf-8
2022-12-05 10:11:43.144 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:11:43.145 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:43.146 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:43.149 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:11:43.149 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:11:43.150 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:11:43)
2022-12-05 10:11:43.157 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:43.158 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 43,75%. is added to queue
2022-12-05 10:11:43.159 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 10.3811ms
2022-12-05 10:11:43.160 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:43.1507299+01:00" stamp is good.
2022-12-05 10:11:43.162 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:43.163 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:11:43.164 +01:00 [INF] Request finished in 19.9008ms 200 application/json; charset=utf-8
2022-12-05 10:11:43.165 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:43.169 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 20.20.20.20;2022-12-05 10:11:43,150;3;43,75170135498047
2022-12-05 10:11:43.171 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:11:43,150;3;43,75170135498047 stored.
2022-12-05 10:11:43.171 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:11:43.172 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:43.173 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:43.175 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:43.177 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:11:43.178 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:11:43.184 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:43.186 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 8.2565ms
2022-12-05 10:11:43.187 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:43.188 +01:00 [INF] Request finished in 17.5528ms 200 application/json; charset=utf-8
2022-12-05 10:11:44.568 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/start/10.10.10.10  
2022-12-05 10:11:44.569 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:44.570 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:44.573 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 10.10.10.10
2022-12-05 10:11:44.575 +01:00 [INF] ControllingContollers->Token stop cancel is not requested
2022-12-05 10:11:44.576 +01:00 [INF] MeasureDevice 10.10.10.10 -> StartAsync
2022-12-05 10:11:44.578 +01:00 [INF] MeasureDevice 10.10.10.10 -> StartAsync, mesuring interval is 7000
2022-12-05 10:11:44.580 +01:00 [INF] Token cancel is not requested
2022-12-05 10:11:44.580 +01:00 [INF] MeasureDeviceAPIService -> Uri is http://localhost:5001/api/md/
2022-12-05 10:11:44.582 +01:00 [INF] MeasureDeviceAPIService -> Sended data -> {"Id":1,"Name":"10.10.10.10","Interval":7000,"$type":"EFMeasureDevice"}
2022-12-05 10:11:44.589 +01:00 [INF] ControllingContollers->Start Async
2022-12-05 10:11:44.591 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:11:44.592 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 19.0249ms
2022-12-05 10:11:44.593 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:44.595 +01:00 [INF] Request finished in 27.2542ms 200 
2022-12-05 10:11:44.653 +01:00 [INF] MeasureDeviceAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:44.653 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:11:44.656 +01:00 [INF] MeasureDevice 10.10.10.10 -> ExecuteAsync
2022-12-05 10:11:44.656 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:44.657 +01:00 [INF] ExecuteAsync Token cancel is not requested
2022-12-05 10:11:44.658 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:44.659 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 11:44
2022-12-05 10:11:44.661 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:11:44.662 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:11:44.662 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":7000,"$type":"MDState"} 
2022-12-05 10:11:44.663 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:11:44.666 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:44.668 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 7.6747ms
2022-12-05 10:11:44.669 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:11:44)
2022-12-05 10:11:44.682 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:44.683 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 62,5%. is added to queue
2022-12-05 10:11:44.685 +01:00 [INF] Request finished in 31.4499ms 200 application/json; charset=utf-8
2022-12-05 10:11:44.686 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:44.6694824+01:00" stamp is good.
2022-12-05 10:11:44.688 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:11:44.689 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:44.690 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 10.10.10.10;2022-12-05 10:11:44,669;7;62,50128173828125
2022-12-05 10:11:44.692 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:11:44,669;7;62,50128173828125 stored.
2022-12-05 10:11:44.693 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:11:44.693 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:44.694 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:44.696 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:44.698 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:11:44.699 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:11:44.706 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:44.708 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 9.3382ms
2022-12-05 10:11:44.709 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:44.711 +01:00 [INF] Request finished in 18.1122ms 200 application/json; charset=utf-8
2022-12-05 10:11:44.719 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:11:44.720 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:44.721 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:44.723 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:11:44.724 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:11:44.728 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:44.729 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 5.8107ms
2022-12-05 10:11:44.731 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:44.732 +01:00 [INF] Request finished in 12.9793ms 200 application/json; charset=utf-8
2022-12-05 10:11:44.876 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 11:44
2022-12-05 10:11:44.878 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:11:44.879 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:11:44.892 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:11:44)
2022-12-05 10:11:44.895 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,62%. is added to queue
2022-12-05 10:11:44.896 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:44.8926969+01:00" stamp is good.
2022-12-05 10:11:44.898 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:11:44.899 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:44.900 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 10.10.10.10;2022-12-05 10:11:44,892;8;18,6200008392334
2022-12-05 10:11:44.901 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:11:44,892;8;18,6200008392334 stored.
2022-12-05 10:11:44.903 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:45.974 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/start/30.30.30.30  
2022-12-05 10:11:45.975 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:45.977 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:45.979 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 30.30.30.30
2022-12-05 10:11:45.980 +01:00 [INF] ControllingContollers->Token stop cancel is not requested
2022-12-05 10:11:45.981 +01:00 [INF] MeasureDevice 30.30.30.30 -> StartAsync
2022-12-05 10:11:45.982 +01:00 [INF] MeasureDevice 30.30.30.30 -> StartAsync, mesuring interval is 3000
2022-12-05 10:11:45.983 +01:00 [INF] Token cancel is not requested
2022-12-05 10:11:45.984 +01:00 [INF] MeasureDeviceAPIService -> Uri is http://localhost:5001/api/md/
2022-12-05 10:11:45.988 +01:00 [INF] MeasureDeviceAPIService -> Sended data -> {"Id":3,"Name":"30.30.30.30","Interval":3000,"$type":"EFMeasureDevice"}
2022-12-05 10:11:45.993 +01:00 [INF] ControllingContollers->Start Async
2022-12-05 10:11:45.994 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:11:45.995 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 16.5052ms
2022-12-05 10:11:45.997 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:45.998 +01:00 [INF] Request finished in 23.8621ms 200 
2022-12-05 10:11:46.051 +01:00 [INF] MeasureDeviceAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:11:46.052 +01:00 [INF] MeasureDevice 30.30.30.30 -> ExecuteAsync
2022-12-05 10:11:46.053 +01:00 [INF] ExecuteAsync Token cancel is not requested
2022-12-05 10:11:46.054 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 11:46
2022-12-05 10:11:46.056 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:11:46.057 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:11:46.060 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:11:46.061 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:46.062 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:46.064 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:11:46.065 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":7000,"$type":"MDState"} 
2022-12-05 10:11:46.068 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:46.069 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 4.8723ms
2022-12-05 10:11:46.070 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:11:46)
2022-12-05 10:11:46.074 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:46.075 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 62,5%. is added to queue
2022-12-05 10:11:46.076 +01:00 [INF] Request finished in 16.1909ms 200 application/json; charset=utf-8
2022-12-05 10:11:46.078 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:46.0708535+01:00" stamp is good.
2022-12-05 10:11:46.080 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:11:46.081 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:11:46.081 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:46.081 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:46.082 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 30.30.30.30;2022-12-05 10:11:46,070;2;62,50128173828125
2022-12-05 10:11:46.083 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:46.084 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:11:46,070;2;62,50128173828125 stored.
2022-12-05 10:11:46.100 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:11:46.101 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:46.102 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:11:46.107 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:46.108 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 8.2329ms
2022-12-05 10:11:46.109 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:46.111 +01:00 [INF] Request finished in 30.0492ms 200 application/json; charset=utf-8
2022-12-05 10:11:46.115 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:11:46.116 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:46.120 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:46.122 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:11:46.123 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:11:46.126 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:46.127 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 5.0863ms
2022-12-05 10:11:46.129 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:46.130 +01:00 [INF] Request finished in 14.4085ms 200 application/json; charset=utf-8
2022-12-05 10:11:47.125 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 11:47
2022-12-05 10:11:47.126 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:11:47.128 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:11:47.141 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:11:47)
2022-12-05 10:11:47.143 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 50,01%. is added to queue
2022-12-05 10:11:47.144 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:47.1410472+01:00" stamp is good.
2022-12-05 10:11:47.145 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:11:47.146 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:47.147 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 20.20.20.20;2022-12-05 10:11:47,141;4;50,00703811645508
2022-12-05 10:11:47.149 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:11:47,141;4;50,00703811645508 stored.
2022-12-05 10:11:47.150 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:49.062 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 11:49
2022-12-05 10:11:49.064 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:11:49.065 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:11:49.078 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:11:49)
2022-12-05 10:11:49.081 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:11:49.082 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:49.0784812+01:00" stamp is good.
2022-12-05 10:11:49.084 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:11:49.085 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:49.086 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 30.30.30.30;2022-12-05 10:11:49,078;3;37,500160217285156
2022-12-05 10:11:49.087 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:11:49,078;3;37,500160217285156 stored.
2022-12-05 10:11:49.089 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:51.136 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 11:51
2022-12-05 10:11:51.138 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:11:51.139 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:11:51.168 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:11:51)
2022-12-05 10:11:51.170 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 65,12%. is added to queue
2022-12-05 10:11:51.172 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:51.1685499+01:00" stamp is good.
2022-12-05 10:11:51.173 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:11:51.174 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:51.176 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 20.20.20.20;2022-12-05 10:11:51,168;5;65,1191177368164
2022-12-05 10:11:51.177 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:11:51,168;5;65,1191177368164 stored.
2022-12-05 10:11:51.179 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:51.669 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 11:51
2022-12-05 10:11:51.670 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:11:51.672 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:11:51.701 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:11:51)
2022-12-05 10:11:51.703 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 65,12%. is added to queue
2022-12-05 10:11:51.705 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:51.7013452+01:00" stamp is good.
2022-12-05 10:11:51.706 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:11:51.708 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:51.709 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 10.10.10.10;2022-12-05 10:11:51,701;9;65,12297821044922
2022-12-05 10:11:51.710 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:11:51,701;9;65,12297821044922 stored.
2022-12-05 10:11:51.711 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:51.893 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 11:51
2022-12-05 10:11:51.894 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:11:51.895 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:11:51.909 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:11:51)
2022-12-05 10:11:51.911 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 24,87%. is added to queue
2022-12-05 10:11:51.912 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:51.9096448+01:00" stamp is good.
2022-12-05 10:11:51.914 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:11:51.915 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:51.915 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 10.10.10.10;2022-12-05 10:11:51,909;10;24,868440628051758
2022-12-05 10:11:51.917 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:11:51,909;10;24,868440628051758 stored.
2022-12-05 10:11:51.918 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:52.067 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 11:52
2022-12-05 10:11:52.068 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:11:52.069 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:11:52.083 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:11:52)
2022-12-05 10:11:52.085 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 18,6%. is added to queue
2022-12-05 10:11:52.086 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:52.0832909+01:00" stamp is good.
2022-12-05 10:11:52.087 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:11:52.089 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:52.091 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 30.30.30.30;2022-12-05 10:11:52,083;4;18,603721618652344
2022-12-05 10:11:52.092 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:11:52,083;4;18,603721618652344 stored.
2022-12-05 10:11:52.094 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:55.077 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 11:55
2022-12-05 10:11:55.078 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:11:55.080 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:11:55.104 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:11:55)
2022-12-05 10:11:55.106 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 65,5%. is added to queue
2022-12-05 10:11:55.107 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:55.1041454+01:00" stamp is good.
2022-12-05 10:11:55.108 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:11:55.109 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:55.110 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 30.30.30.30;2022-12-05 10:11:55,104;5;65,50010681152344
2022-12-05 10:11:55.111 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:11:55,104;5;65,50010681152344 stored.
2022-12-05 10:11:55.112 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:55.150 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 11:55
2022-12-05 10:11:55.152 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:11:55.153 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:11:55.166 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:11:55)
2022-12-05 10:11:55.168 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 50%. is added to queue
2022-12-05 10:11:55.169 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:55.1665853+01:00" stamp is good.
2022-12-05 10:11:55.171 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:11:55.172 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:55.173 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 20.20.20.20;2022-12-05 10:11:55,166;6;50
2022-12-05 10:11:55.174 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:11:55,166;6;50 stored.
2022-12-05 10:11:55.175 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:58.065 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:11:58.066 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:58.068 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:58.070 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:11:58.071 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":7000,"$type":"MDState"} 
2022-12-05 10:11:58.075 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:58.078 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 8.2911ms
2022-12-05 10:11:58.081 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:58.082 +01:00 [INF] Request finished in 17.2278ms 200 application/json; charset=utf-8
2022-12-05 10:11:58.088 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:11:58.089 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:58.091 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:58.092 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 11:58
2022-12-05 10:11:58.099 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:11:58.100 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:11:58.101 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:11:58.102 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:11:58.106 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:58.111 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 11.8178ms
2022-12-05 10:11:58.112 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:58.114 +01:00 [INF] Request finished in 25.5409ms 200 application/json; charset=utf-8
2022-12-05 10:11:58.118 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:11:58.118 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:58.119 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:11:58.121 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:11:58.122 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:11:58.124 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:11:58)
2022-12-05 10:11:58.129 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:11:58.130 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 31,06%. is added to queue
2022-12-05 10:11:58.131 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 9.4516ms
2022-12-05 10:11:58.132 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:58.1244143+01:00" stamp is good.
2022-12-05 10:11:58.134 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:11:58.135 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:11:58.136 +01:00 [INF] Request finished in 18.0038ms 200 application/json; charset=utf-8
2022-12-05 10:11:58.137 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:58.139 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 30.30.30.30;2022-12-05 10:11:58,124;6;31,062009811401367
2022-12-05 10:11:58.144 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:11:58,124;6;31,062009811401367 stored.
2022-12-05 10:11:58.148 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:58.691 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 11:58
2022-12-05 10:11:58.692 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:11:58.693 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:11:58.707 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:11:58)
2022-12-05 10:11:58.709 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 24,88%. is added to queue
2022-12-05 10:11:58.710 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:58.7074414+01:00" stamp is good.
2022-12-05 10:11:58.711 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:11:58.712 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:58.713 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 10.10.10.10;2022-12-05 10:11:58,707;11;24,875185012817383
2022-12-05 10:11:58.715 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:11:58,707;11;24,875185012817383 stored.
2022-12-05 10:11:58.716 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:58.914 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 11:58
2022-12-05 10:11:58.916 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:11:58.917 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:11:58.930 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:11:58)
2022-12-05 10:11:58.933 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 82,24%. is added to queue
2022-12-05 10:11:58.935 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:58.9307191+01:00" stamp is good.
2022-12-05 10:11:58.936 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:11:58.938 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:58.940 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 10.10.10.10;2022-12-05 10:11:58,930;12;82,24309539794922
2022-12-05 10:11:58.942 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:11:58,930;12;82,24309539794922 stored.
2022-12-05 10:11:58.943 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:59.162 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 11:59
2022-12-05 10:11:59.164 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:11:59.165 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:11:59.177 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:11:59)
2022-12-05 10:11:59.180 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 11,23%. is added to queue
2022-12-05 10:11:59.182 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:11:59.1779105+01:00" stamp is good.
2022-12-05 10:11:59.183 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:11:59.184 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:11:59.186 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> Data is stored: 20.20.20.20;2022-12-05 10:11:59,177;7;11,230694770812988
2022-12-05 10:11:59.187 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:11:59,177;7;11,230694770812988 stored.
2022-12-05 10:11:59.189 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-11.txt
2022-12-05 10:12:01.120 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 12:01
2022-12-05 10:12:01.122 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:12:01.123 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:12:01.136 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:12:01)
2022-12-05 10:12:01.138 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:01.139 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:01.1365095+01:00" stamp is expired.
2022-12-05 10:12:01.141 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> File is closed
2022-12-05 10:12:01.142 +01:00 [INF] PeriodicallyStoreSystem  -> d:\tuw\log\2022-12-5-10-11.txt is closed.
2022-12-05 10:12:01.143 +01:00 [INF] PeriodicallyStoreSystem  -> 2022-12-5-10-11.txt is closed and new extenstion is bak.
2022-12-05 10:12:01.145 +01:00 [INF] PeriodicallyStoreSystem -> New File id: 2022-12-5-10-12.txt
2022-12-05 10:12:01.146 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:12:01.147 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:01.148 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> File not exsist. File created.
2022-12-05 10:12:01.149 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:12:01,136;1;37,495121002197266 stored.
2022-12-05 10:12:01.150 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:03.181 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 12:03
2022-12-05 10:12:03.183 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:12:03.184 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:12:03.197 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:12:03)
2022-12-05 10:12:03.198 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 50%. is added to queue
2022-12-05 10:12:03.200 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:03.1971726+01:00" stamp is expired.
2022-12-05 10:12:03.201 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> File is closed
2022-12-05 10:12:03.202 +01:00 [INF] PeriodicallyStoreSystem  -> d:\tuw\log\2022-12-5-10-11.txt is closed.
2022-12-05 10:12:03.204 +01:00 [INF] PeriodicallyStoreSystem  -> 2022-12-5-10-11.txt is closed and new extenstion is bak.
2022-12-05 10:12:03.205 +01:00 [INF] PeriodicallyStoreSystem -> New File id: 2022-12-5-10-12.txt
2022-12-05 10:12:03.206 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:12:03.207 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:03.209 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> File not exsist. File created.
2022-12-05 10:12:03.210 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:12:03,197;1;50,00288009643555 stored.
2022-12-05 10:12:03.211 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:04.131 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 12:04
2022-12-05 10:12:04.133 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:12:04.134 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:12:04.147 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:12:04)
2022-12-05 10:12:04.152 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:04.153 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:04.1477042+01:00" stamp is good.
2022-12-05 10:12:04.154 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:12:04.155 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:04.156 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 30.30.30.30;2022-12-05 10:12:04,147;2;37,49951934814453
2022-12-05 10:12:04.157 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:12:04,147;2;37,49951934814453 stored.
2022-12-05 10:12:04.158 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:05.714 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:05
2022-12-05 10:12:05.716 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:05.717 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:05.737 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:05)
2022-12-05 10:12:05.739 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:05.740 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:05.7375167+01:00" stamp is expired.
2022-12-05 10:12:05.742 +01:00 [INF] MeasuringDataStore 2022-12-5-10-11.txt -> File is closed
2022-12-05 10:12:05.743 +01:00 [INF] PeriodicallyStoreSystem  -> d:\tuw\log\2022-12-5-10-11.txt is closed.
2022-12-05 10:12:05.744 +01:00 [INF] PeriodicallyStoreSystem  -> 2022-12-5-10-11.txt is closed and new extenstion is bak.
2022-12-05 10:12:05.746 +01:00 [INF] PeriodicallyStoreSystem -> New File id: 2022-12-5-10-12.txt
2022-12-05 10:12:05.748 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:05.749 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:05.750 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> File not exsist. File created.
2022-12-05 10:12:05.751 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:05,737;1;37,50431823730469 stored.
2022-12-05 10:12:05.753 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:05.921 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:05
2022-12-05 10:12:05.923 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:05.924 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:05.937 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:05)
2022-12-05 10:12:05.939 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,62%. is added to queue
2022-12-05 10:12:05.940 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:05.9375010+01:00" stamp is good.
2022-12-05 10:12:05.942 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:05.943 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:05.944 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:05,937;2;18,621356964111328
2022-12-05 10:12:05.945 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:05,937;2;18,621356964111328 stored.
2022-12-05 10:12:05.946 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:07.146 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 12:07
2022-12-05 10:12:07.148 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:12:07.149 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:12:07.162 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:12:07)
2022-12-05 10:12:07.164 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:07.166 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:07.1625666+01:00" stamp is good.
2022-12-05 10:12:07.168 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:12:07.169 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:07.170 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 30.30.30.30;2022-12-05 10:12:07,162;3;37,50136184692383
2022-12-05 10:12:07.171 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:12:07,162;3;37,50136184692383 stored.
2022-12-05 10:12:07.173 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:07.193 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 12:07
2022-12-05 10:12:07.195 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:12:07.196 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:12:07.209 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:12:07)
2022-12-05 10:12:07.212 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 37,51%. is added to queue
2022-12-05 10:12:07.213 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:07.2094097+01:00" stamp is good.
2022-12-05 10:12:07.215 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:12:07.216 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:07.217 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 20.20.20.20;2022-12-05 10:12:07,209;2;37,5111198425293
2022-12-05 10:12:07.218 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:12:07,209;2;37,5111198425293 stored.
2022-12-05 10:12:07.220 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:10.166 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 12:10
2022-12-05 10:12:10.168 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:12:10.169 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:12:10.198 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:12:10)
2022-12-05 10:12:10.200 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 72,1%. is added to queue
2022-12-05 10:12:10.202 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:10.1988869+01:00" stamp is good.
2022-12-05 10:12:10.204 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:12:10.205 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:10.207 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 30.30.30.30;2022-12-05 10:12:10,198;4;72,09602355957031
2022-12-05 10:12:10.208 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:12:10,198;4;72,09602355957031 stored.
2022-12-05 10:12:10.209 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:11.203 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 12:11
2022-12-05 10:12:11.205 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:12:11.206 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:12:11.219 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:12:11)
2022-12-05 10:12:11.221 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 11,5%. is added to queue
2022-12-05 10:12:11.223 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:11.2195135+01:00" stamp is good.
2022-12-05 10:12:11.225 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:12:11.226 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:11.228 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 20.20.20.20;2022-12-05 10:12:11,219;3;11,496179580688477
2022-12-05 10:12:11.229 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:12:11,219;3;11,496179580688477 stored.
2022-12-05 10:12:11.231 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:12.724 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:12
2022-12-05 10:12:12.726 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:12.727 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:12.740 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:12)
2022-12-05 10:12:12.742 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:12.745 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:12.7407854+01:00" stamp is good.
2022-12-05 10:12:12.746 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:12.747 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:12.748 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:12,740;3;37,50495910644531
2022-12-05 10:12:12.750 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:12,740;3;37,50495910644531 stored.
2022-12-05 10:12:12.751 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:12.927 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:12
2022-12-05 10:12:12.929 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:12.930 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:12.942 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:12)
2022-12-05 10:12:12.945 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 46,73%. is added to queue
2022-12-05 10:12:12.946 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:12.9427365+01:00" stamp is good.
2022-12-05 10:12:12.948 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:12.949 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:12.950 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:12,942;4;46,72933578491211
2022-12-05 10:12:12.952 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:12,942;4;46,72933578491211 stored.
2022-12-05 10:12:12.954 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:13.184 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 12:13
2022-12-05 10:12:13.186 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:12:13.188 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:12:13.215 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:12:13)
2022-12-05 10:12:13.217 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 77,48%. is added to queue
2022-12-05 10:12:13.218 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:13.2155404+01:00" stamp is good.
2022-12-05 10:12:13.219 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:12:13.220 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:13.222 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 30.30.30.30;2022-12-05 10:12:13,215;5;77,47615051269531
2022-12-05 10:12:13.224 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:12:13,215;5;77,47615051269531 stored.
2022-12-05 10:12:13.225 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:15.212 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 12:15
2022-12-05 10:12:15.214 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:12:15.215 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:12:15.228 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:12:15)
2022-12-05 10:12:15.230 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:12:15.232 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:15.2286209+01:00" stamp is good.
2022-12-05 10:12:15.233 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:12:15.235 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:15.236 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 20.20.20.20;2022-12-05 10:12:15,228;4;100
2022-12-05 10:12:15.237 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:12:15,228;4;100 stored.
2022-12-05 10:12:15.239 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:16.197 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 12:16
2022-12-05 10:12:16.198 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:12:16.200 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:12:16.212 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:12:16)
2022-12-05 10:12:16.214 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:16.216 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:16.2129231+01:00" stamp is good.
2022-12-05 10:12:16.218 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:12:16.219 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:16.220 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 30.30.30.30;2022-12-05 10:12:16,212;6;37,50136184692383
2022-12-05 10:12:16.221 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:12:16,212;6;37,50136184692383 stored.
2022-12-05 10:12:16.223 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:19.208 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 12:19
2022-12-05 10:12:19.210 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:12:19.211 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:12:19.224 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 12:19
2022-12-05 10:12:19.224 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:12:19)
2022-12-05 10:12:19.226 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:12:19.227 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 18,62%. is added to queue
2022-12-05 10:12:19.228 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:12:19.229 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:19.2244612+01:00" stamp is good.
2022-12-05 10:12:19.231 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:12:19.233 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:19.234 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 30.30.30.30;2022-12-05 10:12:19,224;7;18,619321823120117
2022-12-05 10:12:19.235 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:12:19,224;7;18,619321823120117 stored.
2022-12-05 10:12:19.236 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:19.240 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:12:19)
2022-12-05 10:12:19.243 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 0%. is added to queue
2022-12-05 10:12:19.245 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:19.2404828+01:00" stamp is good.
2022-12-05 10:12:19.246 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:12:19.247 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:19.248 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 20.20.20.20;2022-12-05 10:12:19,240;5;0
2022-12-05 10:12:19.250 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:12:19,240;5;0 stored.
2022-12-05 10:12:19.251 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:19.740 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:19
2022-12-05 10:12:19.741 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:19.742 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:19.755 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:19)
2022-12-05 10:12:19.757 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:19.760 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:19.7559539+01:00" stamp is good.
2022-12-05 10:12:19.762 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:19.763 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:19.764 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:19,755;5;37,50056076049805
2022-12-05 10:12:19.766 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:19,755;5;37,50056076049805 stored.
2022-12-05 10:12:19.767 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:19.943 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:19
2022-12-05 10:12:19.945 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:19.946 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:19.959 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:19)
2022-12-05 10:12:19.961 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:19.963 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:19.9592333+01:00" stamp is good.
2022-12-05 10:12:19.964 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:19.966 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:19.967 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:19,959;6;37,500160217285156
2022-12-05 10:12:19.968 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:19,959;6;37,500160217285156 stored.
2022-12-05 10:12:19.970 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:22.214 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 12:22
2022-12-05 10:12:22.215 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:12:22.217 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:12:22.246 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:12:22)
2022-12-05 10:12:22.247 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 58,19%. is added to queue
2022-12-05 10:12:22.250 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:22.2463633+01:00" stamp is good.
2022-12-05 10:12:22.251 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:12:22.253 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:22.254 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 30.30.30.30;2022-12-05 10:12:22,246;8;58,191490173339844
2022-12-05 10:12:22.256 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:12:22,246;8;58,191490173339844 stored.
2022-12-05 10:12:22.257 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:23.234 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 12:23
2022-12-05 10:12:23.237 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:12:23.238 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:12:23.250 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:12:23)
2022-12-05 10:12:23.252 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:23.253 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:23.2504274+01:00" stamp is good.
2022-12-05 10:12:23.254 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:12:23.255 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:23.256 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 20.20.20.20;2022-12-05 10:12:23,250;6;37,502960205078125
2022-12-05 10:12:23.257 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:12:23,250;6;37,502960205078125 stored.
2022-12-05 10:12:23.258 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:25.224 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 12:25
2022-12-05 10:12:25.226 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:12:25.227 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:12:25.240 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:12:25)
2022-12-05 10:12:25.242 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 18,86%. is added to queue
2022-12-05 10:12:25.244 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:25.2403789+01:00" stamp is good.
2022-12-05 10:12:25.245 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:12:25.246 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:25.248 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 30.30.30.30;2022-12-05 10:12:25,240;9;18,85531997680664
2022-12-05 10:12:25.249 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:12:25,240;9;18,85531997680664 stored.
2022-12-05 10:12:25.250 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:26.747 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:26
2022-12-05 10:12:26.749 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:26.751 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:26.763 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:26)
2022-12-05 10:12:26.766 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,21%. is added to queue
2022-12-05 10:12:26.767 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:26.7639173+01:00" stamp is good.
2022-12-05 10:12:26.769 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:26.770 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:26.771 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:26,763;7;11,209710121154785
2022-12-05 10:12:26.773 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:26,763;7;11,209710121154785 stored.
2022-12-05 10:12:26.775 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:26.961 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:26
2022-12-05 10:12:26.963 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:26.964 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:26.977 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:26)
2022-12-05 10:12:26.979 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50%. is added to queue
2022-12-05 10:12:26.981 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:26.9777297+01:00" stamp is good.
2022-12-05 10:12:26.982 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:26.983 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:26.984 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:26,977;8;49,999359130859375
2022-12-05 10:12:26.986 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:26,977;8;49,999359130859375 stored.
2022-12-05 10:12:26.987 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:27.243 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 12:27
2022-12-05 10:12:27.245 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:12:27.246 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:12:27.259 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:12:27)
2022-12-05 10:12:27.261 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 50%. is added to queue
2022-12-05 10:12:27.262 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:27.2591048+01:00" stamp is good.
2022-12-05 10:12:27.263 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:12:27.265 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:27.266 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 20.20.20.20;2022-12-05 10:12:27,259;7;50,00096130371094
2022-12-05 10:12:27.267 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:12:27,259;7;50,00096130371094 stored.
2022-12-05 10:12:27.269 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:28.228 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 12:28
2022-12-05 10:12:28.229 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:12:28.230 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:12:28.243 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:12:28)
2022-12-05 10:12:28.245 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 50%. is added to queue
2022-12-05 10:12:28.247 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:28.2438234+01:00" stamp is good.
2022-12-05 10:12:28.248 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:12:28.249 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:28.250 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 30.30.30.30;2022-12-05 10:12:28,243;10;49,99711990356445
2022-12-05 10:12:28.252 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:12:28,243;10;49,99711990356445 stored.
2022-12-05 10:12:28.253 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:31.234 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 12:31
2022-12-05 10:12:31.235 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:12:31.236 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:12:31.249 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 12:31
2022-12-05 10:12:31.249 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:12:31)
2022-12-05 10:12:31.251 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:12:31.253 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 49,99%. is added to queue
2022-12-05 10:12:31.254 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:12:31.255 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:31.2499331+01:00" stamp is good.
2022-12-05 10:12:31.258 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:12:31.259 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:31.260 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 30.30.30.30;2022-12-05 10:12:31,249;11;49,993919372558594
2022-12-05 10:12:31.261 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:12:31,249;11;49,993919372558594 stored.
2022-12-05 10:12:31.263 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:31.265 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:12:31)
2022-12-05 10:12:31.268 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 50,01%. is added to queue
2022-12-05 10:12:31.269 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:31.2654788+01:00" stamp is good.
2022-12-05 10:12:31.271 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:12:31.272 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:31.273 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 20.20.20.20;2022-12-05 10:12:31,265;8;50,006717681884766
2022-12-05 10:12:31.274 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:12:31,265;8;50,006717681884766 stored.
2022-12-05 10:12:31.276 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:31.996 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/10.10.10.10  
2022-12-05 10:12:31.997 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:31.998 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:32.001 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:12:32.002 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 7000 
2022-12-05 10:12:32.004 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:12:32.006 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 5.7279ms
2022-12-05 10:12:32.009 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:32.011 +01:00 [INF] Request finished in 14.9323ms 200 application/json; charset=utf-8
2022-12-05 10:12:32.016 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/20.20.20.20  
2022-12-05 10:12:32.018 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:32.024 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:32.027 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 20.20.20.20
2022-12-05 10:12:32.028 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 4000 
2022-12-05 10:12:32.030 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:12:32.031 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 4.8122ms
2022-12-05 10:12:32.033 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:32.037 +01:00 [INF] Request finished in 21.1746ms 200 application/json; charset=utf-8
2022-12-05 10:12:32.042 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/30.30.30.30  
2022-12-05 10:12:32.043 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:32.044 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:32.046 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:12:32.047 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 3000 
2022-12-05 10:12:32.048 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:12:32.049 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 3.1302ms
2022-12-05 10:12:32.053 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:32.054 +01:00 [INF] Request finished in 12.4029ms 200 application/json; charset=utf-8
2022-12-05 10:12:33.770 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:33
2022-12-05 10:12:33.772 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:33.773 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:33.785 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:33)
2022-12-05 10:12:33.787 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 33,64%. is added to queue
2022-12-05 10:12:33.790 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:33.7853818+01:00" stamp is good.
2022-12-05 10:12:33.791 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:33.792 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:33.794 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:33,785;9;33,641380310058594
2022-12-05 10:12:33.795 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:33,785;9;33,641380310058594 stored.
2022-12-05 10:12:33.796 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:33.975 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:33
2022-12-05 10:12:33.976 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:33.978 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:33.991 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:33)
2022-12-05 10:12:33.993 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,6%. is added to queue
2022-12-05 10:12:33.996 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:33.9913466+01:00" stamp is good.
2022-12-05 10:12:33.997 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:33.998 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:34.000 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:33,991;10;18,59829330444336
2022-12-05 10:12:34.001 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:33,991;10;18,59829330444336 stored.
2022-12-05 10:12:34.003 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:34.247 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 12:34
2022-12-05 10:12:34.249 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:12:34.251 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:12:34.279 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:12:34)
2022-12-05 10:12:34.281 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 84,98%. is added to queue
2022-12-05 10:12:34.284 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:34.2795038+01:00" stamp is good.
2022-12-05 10:12:34.285 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:12:34.286 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:34.288 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 30.30.30.30;2022-12-05 10:12:34,279;12;84,97517395019531
2022-12-05 10:12:34.289 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:12:34,279;12;84,97517395019531 stored.
2022-12-05 10:12:34.291 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:35.258 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 12:35
2022-12-05 10:12:35.259 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:12:35.261 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:12:35.273 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:12:35)
2022-12-05 10:12:35.275 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 11,21%. is added to queue
2022-12-05 10:12:35.277 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:35.2732639+01:00" stamp is good.
2022-12-05 10:12:35.278 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:12:35.279 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:35.280 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 20.20.20.20;2022-12-05 10:12:35,273;9;11,206480979919434
2022-12-05 10:12:35.281 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:12:35,273;9;11,206480979919434 stored.
2022-12-05 10:12:35.282 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:37.255 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 12:37
2022-12-05 10:12:37.257 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:12:37.258 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:12:37.271 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:12:37)
2022-12-05 10:12:37.273 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 50,04%. is added to queue
2022-12-05 10:12:37.275 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:37.2712685+01:00" stamp is good.
2022-12-05 10:12:37.276 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:12:37.277 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:37.279 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 30.30.30.30;2022-12-05 10:12:37,271;13;50,04252243041992
2022-12-05 10:12:37.280 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:12:37,271;13;50,04252243041992 stored.
2022-12-05 10:12:37.281 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:39.269 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 12:39
2022-12-05 10:12:39.271 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:12:39.272 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:12:39.285 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:12:39)
2022-12-05 10:12:39.288 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 50%. is added to queue
2022-12-05 10:12:39.289 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:39.2857472+01:00" stamp is good.
2022-12-05 10:12:39.290 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:12:39.291 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:39.292 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 20.20.20.20;2022-12-05 10:12:39,285;10;49,99711990356445
2022-12-05 10:12:39.293 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:12:39,285;10;49,99711990356445 stored.
2022-12-05 10:12:39.295 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:39.441 +01:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/interval/10.10.10.10/ application/json; charset=utf-8 16
2022-12-05 10:12:39.442 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.SetMDInsterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:39.443 +01:00 [INF] Route matched with {action = "SetMDInsterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SetMDInsterval(System.String, DataModel.MDDataModel.MDIntervalData) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:39.446 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:12:39.447 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> Interval: DataModel.MDDataModel.MDIntervalData 
2022-12-05 10:12:39.448 +01:00 [INF] MeasureDevice 10.10.10.10 -> New intaerval set: 7000
2022-12-05 10:12:39.449 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:12:39.451 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.SetMDInsterval (MeasureDeviceServiceAPIProject) in 4.9571ms
2022-12-05 10:12:39.454 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.SetMDInsterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:39.455 +01:00 [INF] Request finished in 14.5349ms 200 
2022-12-05 10:12:39.486 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/10.10.10.10  
2022-12-05 10:12:39.487 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:39.488 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:39.492 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:12:39.493 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 100 
2022-12-05 10:12:39.495 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:12:39.496 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 4.105ms
2022-12-05 10:12:39.497 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:39.499 +01:00 [INF] Request finished in 13.1217ms 200 application/json; charset=utf-8
2022-12-05 10:12:39.519 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/20.20.20.20  
2022-12-05 10:12:39.520 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:39.522 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:39.524 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 20.20.20.20
2022-12-05 10:12:39.525 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 4000 
2022-12-05 10:12:39.526 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:12:39.527 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 3.559ms
2022-12-05 10:12:39.529 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:39.531 +01:00 [INF] Request finished in 11.3805ms 200 application/json; charset=utf-8
2022-12-05 10:12:39.538 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/30.30.30.30  
2022-12-05 10:12:39.540 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:39.542 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:39.544 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:12:39.545 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 3000 
2022-12-05 10:12:39.547 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:12:39.548 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 3.8357ms
2022-12-05 10:12:39.550 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:39.553 +01:00 [INF] Request finished in 15.0089ms 200 application/json; charset=utf-8
2022-12-05 10:12:40.264 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 12:40
2022-12-05 10:12:40.265 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:12:40.266 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:12:40.280 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:12:40)
2022-12-05 10:12:40.282 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:40.283 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:40.2803494+01:00" stamp is good.
2022-12-05 10:12:40.284 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:12:40.285 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:40.286 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 30.30.30.30;2022-12-05 10:12:40,280;14;37,498958587646484
2022-12-05 10:12:40.288 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:12:40,280;14;37,498958587646484 stored.
2022-12-05 10:12:40.289 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:40.795 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:40
2022-12-05 10:12:40.797 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:40.798 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:40.811 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:40)
2022-12-05 10:12:40.814 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,53%. is added to queue
2022-12-05 10:12:40.816 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:40.8112812+01:00" stamp is good.
2022-12-05 10:12:40.818 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:40.819 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:40.820 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:40,811;11;18,530384063720703
2022-12-05 10:12:40.822 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:40,811;11;18,530384063720703 stored.
2022-12-05 10:12:40.824 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:40.907 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:40
2022-12-05 10:12:40.908 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:40.909 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:40.923 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:40)
2022-12-05 10:12:40.925 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,64%. is added to queue
2022-12-05 10:12:40.927 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:40.9232420+01:00" stamp is good.
2022-12-05 10:12:40.929 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:40.930 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:40.931 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:40,923;12;18,63966178894043
2022-12-05 10:12:40.933 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:40,923;12;18,63966178894043 stored.
2022-12-05 10:12:40.934 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:40.987 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:40
2022-12-05 10:12:40.988 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:40.989 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:41.003 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:41)
2022-12-05 10:12:41.005 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,6%. is added to queue
2022-12-05 10:12:41.006 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:41.0031547+01:00" stamp is good.
2022-12-05 10:12:41.007 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:41.008 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.010 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:41,003;13;18,59964942932129
2022-12-05 10:12:41.011 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:41,003;13;18,59964942932129 stored.
2022-12-05 10:12:41.012 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.019 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:41
2022-12-05 10:12:41.021 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:41.022 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:41.035 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:41)
2022-12-05 10:12:41.037 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,22%. is added to queue
2022-12-05 10:12:41.038 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:41.0352129+01:00" stamp is good.
2022-12-05 10:12:41.039 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:41.040 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.042 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:41,035;14;11,220909118652344
2022-12-05 10:12:41.043 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:41,035;14;11,220909118652344 stored.
2022-12-05 10:12:41.044 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.097 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:41
2022-12-05 10:12:41.099 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:41.100 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:41.113 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:41)
2022-12-05 10:12:41.115 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,75%. is added to queue
2022-12-05 10:12:41.116 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:41.1132361+01:00" stamp is good.
2022-12-05 10:12:41.118 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:41.119 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.121 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:41,113;15;18,754732131958008
2022-12-05 10:12:41.122 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:41,113;15;18,754732131958008 stored.
2022-12-05 10:12:41.124 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.128 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:41
2022-12-05 10:12:41.131 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:41.132 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:41.144 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:41)
2022-12-05 10:12:41.147 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,5%. is added to queue
2022-12-05 10:12:41.148 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:41.1443228+01:00" stamp is good.
2022-12-05 10:12:41.150 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:41.151 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.152 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:41,144;16;11,497784614562988
2022-12-05 10:12:41.153 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:41,144;16;11,497784614562988 stored.
2022-12-05 10:12:41.155 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.205 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:41
2022-12-05 10:12:41.206 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:41.208 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:41.221 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:41)
2022-12-05 10:12:41.224 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,61%. is added to queue
2022-12-05 10:12:41.225 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:41.2212452+01:00" stamp is good.
2022-12-05 10:12:41.227 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:41.228 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.229 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:41,221;17;18,606958389282227
2022-12-05 10:12:41.230 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:41,221;17;18,606958389282227 stored.
2022-12-05 10:12:41.231 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.237 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:41
2022-12-05 10:12:41.241 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:41.243 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:41.252 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:41)
2022-12-05 10:12:41.254 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 0%. is added to queue
2022-12-05 10:12:41.256 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:41.2523736+01:00" stamp is good.
2022-12-05 10:12:41.258 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:41.259 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.260 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:41,252;18;0
2022-12-05 10:12:41.262 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:41,252;18;0 stored.
2022-12-05 10:12:41.263 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.315 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:41
2022-12-05 10:12:41.316 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:41.317 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:41.331 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:41)
2022-12-05 10:12:41.333 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,62%. is added to queue
2022-12-05 10:12:41.334 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:41.3312134+01:00" stamp is good.
2022-12-05 10:12:41.335 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:41.336 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.337 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:41,331;19;18,622713088989258
2022-12-05 10:12:41.338 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:41,331;19;18,622713088989258 stored.
2022-12-05 10:12:41.341 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.347 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:41
2022-12-05 10:12:41.350 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:41.351 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:41.363 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:41)
2022-12-05 10:12:41.365 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,21%. is added to queue
2022-12-05 10:12:41.366 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:41.3632462+01:00" stamp is good.
2022-12-05 10:12:41.367 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:41.368 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.369 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:41,363;20;11,20728874206543
2022-12-05 10:12:41.371 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:41,363;20;11,20728874206543 stored.
2022-12-05 10:12:41.372 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.426 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:41
2022-12-05 10:12:41.427 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:41.428 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:41.442 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:41)
2022-12-05 10:12:41.445 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,63%. is added to queue
2022-12-05 10:12:41.446 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:41.4423148+01:00" stamp is good.
2022-12-05 10:12:41.447 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:41.448 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.449 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:41,442;21;18,628137588500977
2022-12-05 10:12:41.451 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:41,442;21;18,628137588500977 stored.
2022-12-05 10:12:41.452 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.457 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:41
2022-12-05 10:12:41.460 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:41.461 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:41.473 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:41)
2022-12-05 10:12:41.476 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,22%. is added to queue
2022-12-05 10:12:41.478 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:41.4736170+01:00" stamp is good.
2022-12-05 10:12:41.479 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:41.480 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.481 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:41,473;22;11,224944114685059
2022-12-05 10:12:41.482 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:41,473;22;11,224944114685059 stored.
2022-12-05 10:12:41.484 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.537 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:41
2022-12-05 10:12:41.539 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:41.540 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:41.552 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:41)
2022-12-05 10:12:41.555 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 21,99%. is added to queue
2022-12-05 10:12:41.559 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:41.5523334+01:00" stamp is good.
2022-12-05 10:12:41.560 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:41.561 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.563 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:41,552;23;21,98655891418457
2022-12-05 10:12:41.564 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:41,552;23;21,98655891418457 stored.
2022-12-05 10:12:41.566 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.567 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:41
2022-12-05 10:12:41.570 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:41.572 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:41.583 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:41)
2022-12-05 10:12:41.585 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 13,46%. is added to queue
2022-12-05 10:12:41.589 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:41.5834337+01:00" stamp is good.
2022-12-05 10:12:41.591 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:41.592 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.593 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:41,583;24;13,455999374389648
2022-12-05 10:12:41.595 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:41,583;24;13,455999374389648 stored.
2022-12-05 10:12:41.597 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.647 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:41
2022-12-05 10:12:41.648 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:41.649 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:41.663 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:41)
2022-12-05 10:12:41.666 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 35,04%. is added to queue
2022-12-05 10:12:41.668 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:41.6634251+01:00" stamp is good.
2022-12-05 10:12:41.669 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:41.671 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.674 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:41,663;25;35,036048889160156
2022-12-05 10:12:41.676 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:41,663;25;35,036048889160156 stored.
2022-12-05 10:12:41.679 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:41
2022-12-05 10:12:41.680 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.683 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:41.686 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:41.711 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:41)
2022-12-05 10:12:41.712 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 59,31%. is added to queue
2022-12-05 10:12:41.715 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:41.7112365+01:00" stamp is good.
2022-12-05 10:12:41.717 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:41.719 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.720 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:41,711;26;59,3071174621582
2022-12-05 10:12:41.722 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:41,711;26;59,3071174621582 stored.
2022-12-05 10:12:41.724 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.759 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:41
2022-12-05 10:12:41.760 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:41.762 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:41.775 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:41)
2022-12-05 10:12:41.777 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 51,16%. is added to queue
2022-12-05 10:12:41.779 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:41.7752961+01:00" stamp is good.
2022-12-05 10:12:41.780 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:41.781 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.782 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:41,775;27;51,15782928466797
2022-12-05 10:12:41.783 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:41,775;27;51,15782928466797 stored.
2022-12-05 10:12:41.784 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.791 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:41
2022-12-05 10:12:41.794 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:41.795 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:41.823 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:41)
2022-12-05 10:12:41.825 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 69,95%. is added to queue
2022-12-05 10:12:41.826 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:41.8233288+01:00" stamp is good.
2022-12-05 10:12:41.828 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:41.829 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.830 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:41,823;28;69,95111083984375
2022-12-05 10:12:41.831 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:41,823;28;69,95111083984375 stored.
2022-12-05 10:12:41.833 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.871 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:41
2022-12-05 10:12:41.872 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:41.874 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:41.903 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:41
2022-12-05 10:12:41.903 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:41)
2022-12-05 10:12:41.904 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:41.906 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 72,13%. is added to queue
2022-12-05 10:12:41.907 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:41.908 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:41.9033457+01:00" stamp is good.
2022-12-05 10:12:41.910 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:41.911 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.912 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:41,903;29;72,1266860961914
2022-12-05 10:12:41.913 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:41,903;29;72,1266860961914 stored.
2022-12-05 10:12:41.914 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.935 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:41)
2022-12-05 10:12:41.936 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 77,48%. is added to queue
2022-12-05 10:12:41.938 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:41.9352963+01:00" stamp is good.
2022-12-05 10:12:41.939 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:41.941 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.942 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:41,935;30;77,48432159423828
2022-12-05 10:12:41.944 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:41,935;30;77,48432159423828 stored.
2022-12-05 10:12:41.945 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:41.983 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:41
2022-12-05 10:12:41.984 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:41.986 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:41.998 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:41)
2022-12-05 10:12:42.000 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,2%. is added to queue
2022-12-05 10:12:42.002 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:41.9983484+01:00" stamp is good.
2022-12-05 10:12:42.003 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:42.004 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.005 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:41,998;31;11,203251838684082
2022-12-05 10:12:42.007 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:41,998;31;11,203251838684082 stored.
2022-12-05 10:12:42.008 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.029 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:42
2022-12-05 10:12:42.031 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:42.032 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:42.045 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:42)
2022-12-05 10:12:42.048 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,62%. is added to queue
2022-12-05 10:12:42.049 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:42.0452561+01:00" stamp is good.
2022-12-05 10:12:42.050 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:42.051 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.052 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:42,045;32;18,616453170776367
2022-12-05 10:12:42.053 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:42,045;32;18,616453170776367 stored.
2022-12-05 10:12:42.055 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.105 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:42
2022-12-05 10:12:42.108 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:42.109 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:42.120 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:42)
2022-12-05 10:12:42.122 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50,01%. is added to queue
2022-12-05 10:12:42.124 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:42.1205946+01:00" stamp is good.
2022-12-05 10:12:42.125 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:42.126 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.128 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:42,120;33;50,01247787475586
2022-12-05 10:12:42.129 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:42,120;33;50,01247787475586 stored.
2022-12-05 10:12:42.130 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.151 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:42
2022-12-05 10:12:42.153 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:42.155 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:42.183 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:42)
2022-12-05 10:12:42.185 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 71,05%. is added to queue
2022-12-05 10:12:42.186 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:42.1837160+01:00" stamp is good.
2022-12-05 10:12:42.188 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:42.189 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.190 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:42,183;34;71,05474090576172
2022-12-05 10:12:42.191 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:42,183;34;71,05474090576172 stored.
2022-12-05 10:12:42.193 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.219 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:42
2022-12-05 10:12:42.221 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:42.222 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:42.235 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:42)
2022-12-05 10:12:42.237 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 49,99%. is added to queue
2022-12-05 10:12:42.238 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:42.2354142+01:00" stamp is good.
2022-12-05 10:12:42.239 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:42.241 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.242 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:42,235;35;49,994239807128906
2022-12-05 10:12:42.244 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:42,235;35;49,994239807128906 stored.
2022-12-05 10:12:42.245 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.266 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:42
2022-12-05 10:12:42.270 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:42.272 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:42.282 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:12:42.283 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:42)
2022-12-05 10:12:42.287 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:42.288 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 78,29%. is added to queue
2022-12-05 10:12:42.289 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:42.291 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:42.2836105+01:00" stamp is good.
2022-12-05 10:12:42.293 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:12:42.294 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:42.295 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":100,"$type":"MDState"} 
2022-12-05 10:12:42.296 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.305 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:12:42.306 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:42,283;36;78,28803253173828
2022-12-05 10:12:42.308 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 14.7757ms
2022-12-05 10:12:42.309 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:42,283;36;78,28803253173828 stored.
2022-12-05 10:12:42.311 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:42.313 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.316 +01:00 [INF] Request finished in 34.1608ms 200 application/json; charset=utf-8
2022-12-05 10:12:42.321 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:12:42.322 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:42.323 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:42.325 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:12:42.326 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:12:42.328 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:42
2022-12-05 10:12:42.333 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:12:42.334 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:42.335 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 9.772ms
2022-12-05 10:12:42.336 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:42.338 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:42.340 +01:00 [INF] Request finished in 19.3203ms 200 application/json; charset=utf-8
2022-12-05 10:12:42.344 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:42)
2022-12-05 10:12:42.348 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:12:42.349 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 0%. is added to queue
2022-12-05 10:12:42.349 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:42.351 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:42.3442422+01:00" stamp is good.
2022-12-05 10:12:42.352 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:42.352 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:42.354 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:12:42.355 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.356 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:12:42.357 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:42,344;37;0
2022-12-05 10:12:42.362 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:12:42.363 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:42,344;37;0 stored.
2022-12-05 10:12:42.364 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 10.0818ms
2022-12-05 10:12:42.366 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.367 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:42.369 +01:00 [INF] Request finished in 21.2658ms 200 application/json; charset=utf-8
2022-12-05 10:12:42.374 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:42
2022-12-05 10:12:42.378 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:42.380 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:42.391 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:42)
2022-12-05 10:12:42.394 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 2,38%. is added to queue
2022-12-05 10:12:42.395 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:42.3914609+01:00" stamp is good.
2022-12-05 10:12:42.396 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:42.397 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.398 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:42,391;38;2,376192092895508
2022-12-05 10:12:42.399 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:42,391;38;2,376192092895508 stored.
2022-12-05 10:12:42.400 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.453 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:42
2022-12-05 10:12:42.455 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:42.457 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:42.470 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:42)
2022-12-05 10:12:42.472 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,21%. is added to queue
2022-12-05 10:12:42.474 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:42.4701404+01:00" stamp is good.
2022-12-05 10:12:42.476 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:42.477 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.478 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:42,470;39;11,212132453918457
2022-12-05 10:12:42.479 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:42,470;39;11,212132453918457 stored.
2022-12-05 10:12:42.481 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.484 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:42
2022-12-05 10:12:42.487 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:42.489 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:42.500 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:42)
2022-12-05 10:12:42.502 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 2,33%. is added to queue
2022-12-05 10:12:42.504 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:42.5002256+01:00" stamp is good.
2022-12-05 10:12:42.506 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:42.507 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.509 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:42,500;40;2,3293495178222656
2022-12-05 10:12:42.510 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:42,500;40;2,3293495178222656 stored.
2022-12-05 10:12:42.512 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.573 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:42
2022-12-05 10:12:42.574 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:42.576 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:42.589 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:42)
2022-12-05 10:12:42.591 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50%. is added to queue
2022-12-05 10:12:42.592 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:42.5890070+01:00" stamp is good.
2022-12-05 10:12:42.593 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:42.595 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.596 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:42,589;41;50,00223922729492
2022-12-05 10:12:42.597 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:42,589;41;50,00223922729492 stored.
2022-12-05 10:12:42.598 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.604 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:42
2022-12-05 10:12:42.607 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:42.608 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:42.620 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:42)
2022-12-05 10:12:42.622 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50,1%. is added to queue
2022-12-05 10:12:42.625 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:42.6203531+01:00" stamp is good.
2022-12-05 10:12:42.626 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:42.628 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.629 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:42,620;42;50,09996032714844
2022-12-05 10:12:42.630 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:42,620;42;50,09996032714844 stored.
2022-12-05 10:12:42.631 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.682 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:42
2022-12-05 10:12:42.684 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:42.685 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:42.698 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:42)
2022-12-05 10:12:42.700 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 49,92%. is added to queue
2022-12-05 10:12:42.702 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:42.6984512+01:00" stamp is good.
2022-12-05 10:12:42.703 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:42.704 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.705 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:42,698;43;49,920833587646484
2022-12-05 10:12:42.706 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:42,698;43;49,920833587646484 stored.
2022-12-05 10:12:42.708 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.713 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:42
2022-12-05 10:12:42.717 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:42.718 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:42.729 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:42)
2022-12-05 10:12:42.731 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,64%. is added to queue
2022-12-05 10:12:42.733 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:42.7297867+01:00" stamp is good.
2022-12-05 10:12:42.734 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:42.735 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.736 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:42,729;44;37,642234802246094
2022-12-05 10:12:42.737 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:42,729;44;37,642234802246094 stored.
2022-12-05 10:12:42.739 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.792 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:42
2022-12-05 10:12:42.793 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:42.794 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:42.807 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:42)
2022-12-05 10:12:42.810 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,51%. is added to queue
2022-12-05 10:12:42.812 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:42.8078595+01:00" stamp is good.
2022-12-05 10:12:42.814 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:42.815 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.816 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:42,807;45;37,506160736083984
2022-12-05 10:12:42.818 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:42,807;45;37,506160736083984 stored.
2022-12-05 10:12:42.819 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.823 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:42
2022-12-05 10:12:42.826 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:42.827 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:42.839 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:42)
2022-12-05 10:12:42.841 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,67%. is added to queue
2022-12-05 10:12:42.843 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:42.8391125+01:00" stamp is good.
2022-12-05 10:12:42.844 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:42.845 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.846 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:42,839;46;37,674232482910156
2022-12-05 10:12:42.848 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:42,839;46;37,674232482910156 stored.
2022-12-05 10:12:42.849 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.901 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:42
2022-12-05 10:12:42.902 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:42.904 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:42.917 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:42)
2022-12-05 10:12:42.919 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:42.920 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:42.9171597+01:00" stamp is good.
2022-12-05 10:12:42.922 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:42.924 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.925 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:42,917;47;37,50191879272461
2022-12-05 10:12:42.926 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:42,917;47;37,50191879272461 stored.
2022-12-05 10:12:42.927 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.932 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:42
2022-12-05 10:12:42.935 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:42.936 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:42.948 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:42)
2022-12-05 10:12:42.950 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,51%. is added to queue
2022-12-05 10:12:42.953 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:42.9485006+01:00" stamp is good.
2022-12-05 10:12:42.954 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:42.955 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:42.956 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:42,948;48;37,514957427978516
2022-12-05 10:12:42.958 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:42,948;48;37,514957427978516 stored.
2022-12-05 10:12:42.959 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.010 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:43
2022-12-05 10:12:43.012 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:43.014 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:43.026 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:43)
2022-12-05 10:12:43.028 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 25%. is added to queue
2022-12-05 10:12:43.030 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:43.0265897+01:00" stamp is good.
2022-12-05 10:12:43.031 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:43.032 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.033 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:43,026;49;24,997440338134766
2022-12-05 10:12:43.034 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:43,026;49;24,997440338134766 stored.
2022-12-05 10:12:43.036 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.042 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:43
2022-12-05 10:12:43.045 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:43.046 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:43.057 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:43)
2022-12-05 10:12:43.060 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50,01%. is added to queue
2022-12-05 10:12:43.062 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:43.0579497+01:00" stamp is good.
2022-12-05 10:12:43.064 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:43.065 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.066 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:43,057;50;50,00511932373047
2022-12-05 10:12:43.067 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:43,057;50;50,00511932373047 stored.
2022-12-05 10:12:43.068 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.120 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:43
2022-12-05 10:12:43.122 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:43.124 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:43.135 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:43)
2022-12-05 10:12:43.138 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50%. is added to queue
2022-12-05 10:12:43.140 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:43.1359685+01:00" stamp is good.
2022-12-05 10:12:43.142 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:43.143 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.145 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:43,135;51;50
2022-12-05 10:12:43.146 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:43,135;51;50 stored.
2022-12-05 10:12:43.148 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.151 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:43
2022-12-05 10:12:43.154 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:43.157 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:43.167 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:43)
2022-12-05 10:12:43.169 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50,06%. is added to queue
2022-12-05 10:12:43.171 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:43.1672812+01:00" stamp is good.
2022-12-05 10:12:43.173 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:43.174 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.175 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:43,167;52;50,06327819824219
2022-12-05 10:12:43.176 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:43,167;52;50,06327819824219 stored.
2022-12-05 10:12:43.178 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.229 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:43
2022-12-05 10:12:43.231 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:43.232 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:43.245 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:43)
2022-12-05 10:12:43.247 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,37%. is added to queue
2022-12-05 10:12:43.248 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:43.2452370+01:00" stamp is good.
2022-12-05 10:12:43.249 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:43.250 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.251 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:43,245;53;37,36747741699219
2022-12-05 10:12:43.252 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:43,245;53;37,36747741699219 stored.
2022-12-05 10:12:43.253 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.260 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:43
2022-12-05 10:12:43.263 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:43.265 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:43.276 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 12:43
2022-12-05 10:12:43.276 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:43)
2022-12-05 10:12:43.279 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:12:43.280 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,49%. is added to queue
2022-12-05 10:12:43.282 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:12:43.283 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:43.2766813+01:00" stamp is good.
2022-12-05 10:12:43.285 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:43.287 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.288 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:43,276;54;37,48655700683594
2022-12-05 10:12:43.289 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:43,276;54;37,48655700683594 stored.
2022-12-05 10:12:43.291 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.292 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 12:43
2022-12-05 10:12:43.292 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:12:43)
2022-12-05 10:12:43.296 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:12:43.297 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 37,51%. is added to queue
2022-12-05 10:12:43.298 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:12:43.300 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:43.2924634+01:00" stamp is good.
2022-12-05 10:12:43.302 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:12:43.303 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.306 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 30.30.30.30;2022-12-05 10:12:43,292;15;37,51191711425781
2022-12-05 10:12:43.309 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:12:43,292;15;37,51191711425781 stored.
2022-12-05 10:12:43.312 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.334 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:43
2022-12-05 10:12:43.334 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:12:43)
2022-12-05 10:12:43.337 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:43.339 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 34,58%. is added to queue
2022-12-05 10:12:43.340 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:43.341 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:43.3346769+01:00" stamp is good.
2022-12-05 10:12:43.343 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:12:43.344 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.346 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 20.20.20.20;2022-12-05 10:12:43,334;11;34,58254623413086
2022-12-05 10:12:43.347 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:12:43,334;11;34,58254623413086 stored.
2022-12-05 10:12:43.348 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.350 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:43)
2022-12-05 10:12:43.353 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 25,06%. is added to queue
2022-12-05 10:12:43.354 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:43.3500721+01:00" stamp is good.
2022-12-05 10:12:43.356 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:43.357 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.358 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:43,350;55;25,060590744018555
2022-12-05 10:12:43.359 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:43,350;55;25,060590744018555 stored.
2022-12-05 10:12:43.361 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.365 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:43
2022-12-05 10:12:43.368 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:43.369 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:43.381 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:43)
2022-12-05 10:12:43.383 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,68%. is added to queue
2022-12-05 10:12:43.385 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:43.3813439+01:00" stamp is good.
2022-12-05 10:12:43.387 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:43.388 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.389 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:43,381;56;37,684810638427734
2022-12-05 10:12:43.391 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:43,381;56;37,684810638427734 stored.
2022-12-05 10:12:43.392 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.443 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:43
2022-12-05 10:12:43.446 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:43.447 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:43.459 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:43)
2022-12-05 10:12:43.461 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,52%. is added to queue
2022-12-05 10:12:43.463 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:43.4594107+01:00" stamp is good.
2022-12-05 10:12:43.464 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:43.465 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.466 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:43,459;57;37,51615524291992
2022-12-05 10:12:43.468 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:43,459;57;37,51615524291992 stored.
2022-12-05 10:12:43.469 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.474 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:43
2022-12-05 10:12:43.478 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:43.479 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:43.490 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:43)
2022-12-05 10:12:43.494 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,65%. is added to queue
2022-12-05 10:12:43.495 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:43.4909035+01:00" stamp is good.
2022-12-05 10:12:43.497 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:43.499 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.500 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:43,490;58;37,64582061767578
2022-12-05 10:12:43.501 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:43,490;58;37,64582061767578 stored.
2022-12-05 10:12:43.503 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.553 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:43
2022-12-05 10:12:43.556 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:43.557 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:43.568 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:43)
2022-12-05 10:12:43.571 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,49%. is added to queue
2022-12-05 10:12:43.572 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:43.5688688+01:00" stamp is good.
2022-12-05 10:12:43.573 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:43.574 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.575 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:43,568;59;37,49135971069336
2022-12-05 10:12:43.576 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:43,568;59;37,49135971069336 stored.
2022-12-05 10:12:43.577 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.584 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:43
2022-12-05 10:12:43.588 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:43.590 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:43.600 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:43)
2022-12-05 10:12:43.602 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,66%. is added to queue
2022-12-05 10:12:43.604 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:43.6001034+01:00" stamp is good.
2022-12-05 10:12:43.606 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:43.607 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.608 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:43,600;60;37,65632629394531
2022-12-05 10:12:43.609 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:43,600;60;37,65632629394531 stored.
2022-12-05 10:12:43.611 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.662 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:43
2022-12-05 10:12:43.664 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:43.665 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:43.678 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:43)
2022-12-05 10:12:43.680 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50%. is added to queue
2022-12-05 10:12:43.681 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:43.6781999+01:00" stamp is good.
2022-12-05 10:12:43.682 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:43.683 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.684 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:43,678;61;49,99903869628906
2022-12-05 10:12:43.686 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:43,678;61;49,99903869628906 stored.
2022-12-05 10:12:43.687 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.693 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:43
2022-12-05 10:12:43.696 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:43.697 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:43.709 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:43)
2022-12-05 10:12:43.711 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50%. is added to queue
2022-12-05 10:12:43.713 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:43.7095635+01:00" stamp is good.
2022-12-05 10:12:43.714 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:43.715 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.716 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:43,709;62;50
2022-12-05 10:12:43.718 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:43,709;62;50 stored.
2022-12-05 10:12:43.719 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.770 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:43
2022-12-05 10:12:43.772 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:43.773 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:43.786 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:43)
2022-12-05 10:12:43.788 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 39,91%. is added to queue
2022-12-05 10:12:43.789 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:43.7863947+01:00" stamp is good.
2022-12-05 10:12:43.791 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:43.792 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.792 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:43,786;63;39,908931732177734
2022-12-05 10:12:43.794 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:43,786;63;39,908931732177734 stored.
2022-12-05 10:12:43.795 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.801 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:43
2022-12-05 10:12:43.804 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:43.805 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:43.817 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:43)
2022-12-05 10:12:43.819 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 28,96%. is added to queue
2022-12-05 10:12:43.820 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:43.8174568+01:00" stamp is good.
2022-12-05 10:12:43.822 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:43.823 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.824 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:43,817;64;28,95595932006836
2022-12-05 10:12:43.826 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:43,817;64;28,95595932006836 stored.
2022-12-05 10:12:43.827 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.886 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:43
2022-12-05 10:12:43.888 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:43.890 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:43.902 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:43)
2022-12-05 10:12:43.905 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 62,57%. is added to queue
2022-12-05 10:12:43.907 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:43.9023248+01:00" stamp is good.
2022-12-05 10:12:43.908 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:43.909 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.910 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:43,902;65;62,57026672363281
2022-12-05 10:12:43.912 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:43,902;65;62,57026672363281 stored.
2022-12-05 10:12:43.913 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.918 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:43
2022-12-05 10:12:43.920 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:43.922 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:43.950 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:43)
2022-12-05 10:12:43.951 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 62,44%. is added to queue
2022-12-05 10:12:43.954 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:43.9503199+01:00" stamp is good.
2022-12-05 10:12:43.956 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:43.959 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.960 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:43,950;66;62,436004638671875
2022-12-05 10:12:43.961 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:43,950;66;62,436004638671875 stored.
2022-12-05 10:12:43.963 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:43.998 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:43
2022-12-05 10:12:44.000 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:44.001 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:44.014 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:44)
2022-12-05 10:12:44.017 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,61%. is added to queue
2022-12-05 10:12:44.018 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:44.0143592+01:00" stamp is good.
2022-12-05 10:12:44.019 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:44.020 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.022 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:44,014;67;18,605077743530273
2022-12-05 10:12:44.024 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:44,014;67;18,605077743530273 stored.
2022-12-05 10:12:44.026 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.045 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:44
2022-12-05 10:12:44.046 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:44.047 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:44.076 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:44)
2022-12-05 10:12:44.078 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 20,53%. is added to queue
2022-12-05 10:12:44.080 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:44.0764129+01:00" stamp is good.
2022-12-05 10:12:44.081 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:44.083 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.084 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:44,076;68;20,530868530273438
2022-12-05 10:12:44.085 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:44,076;68;20,530868530273438 stored.
2022-12-05 10:12:44.087 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.108 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:44
2022-12-05 10:12:44.109 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:44.111 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:44.124 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:44)
2022-12-05 10:12:44.127 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,6%. is added to queue
2022-12-05 10:12:44.128 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:44.1244453+01:00" stamp is good.
2022-12-05 10:12:44.130 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:44.131 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.132 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:44,124;69;18,60236358642578
2022-12-05 10:12:44.133 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:44,124;69;18,60236358642578 stored.
2022-12-05 10:12:44.134 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.155 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:44
2022-12-05 10:12:44.156 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:44.158 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:44.170 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:44)
2022-12-05 10:12:44.172 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,22%. is added to queue
2022-12-05 10:12:44.174 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:44.1702213+01:00" stamp is good.
2022-12-05 10:12:44.176 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:44.178 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.179 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:44,170;70;11,216873168945312
2022-12-05 10:12:44.180 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:44,170;70;11,216873168945312 stored.
2022-12-05 10:12:44.182 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.218 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:44
2022-12-05 10:12:44.219 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:44.220 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:44.234 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:44)
2022-12-05 10:12:44.236 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 34,88%. is added to queue
2022-12-05 10:12:44.238 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:44.2343193+01:00" stamp is good.
2022-12-05 10:12:44.239 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:44.241 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.243 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:44,234;71;34,87575149536133
2022-12-05 10:12:44.245 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:44,234;71;34,87575149536133 stored.
2022-12-05 10:12:44.247 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.266 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:44
2022-12-05 10:12:44.267 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:44.269 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:44.282 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:44)
2022-12-05 10:12:44.284 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,62%. is added to queue
2022-12-05 10:12:44.286 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:44.2823439+01:00" stamp is good.
2022-12-05 10:12:44.287 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:44.288 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.289 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:44,282;72;18,617965698242188
2022-12-05 10:12:44.291 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:44,282;72;18,617965698242188 stored.
2022-12-05 10:12:44.292 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.329 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:44
2022-12-05 10:12:44.330 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:44.332 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:44.344 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:44)
2022-12-05 10:12:44.346 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 28,95%. is added to queue
2022-12-05 10:12:44.347 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:44.3443012+01:00" stamp is good.
2022-12-05 10:12:44.349 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:44.350 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.351 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:44,344;73;28,950790405273438
2022-12-05 10:12:44.352 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:44,344;73;28,950790405273438 stored.
2022-12-05 10:12:44.354 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.376 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:44
2022-12-05 10:12:44.377 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:44.379 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:44.391 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:44)
2022-12-05 10:12:44.393 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 28,96%. is added to queue
2022-12-05 10:12:44.394 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:44.3912485+01:00" stamp is good.
2022-12-05 10:12:44.395 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:44.396 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.397 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:44,391;74;28,960481643676758
2022-12-05 10:12:44.398 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:44,391;74;28,960481643676758 stored.
2022-12-05 10:12:44.400 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.436 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:44
2022-12-05 10:12:44.437 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:44.439 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:44.452 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:44)
2022-12-05 10:12:44.454 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50%. is added to queue
2022-12-05 10:12:44.455 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:44.4521430+01:00" stamp is good.
2022-12-05 10:12:44.456 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:44.457 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.458 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:44,452;75;50,0015983581543
2022-12-05 10:12:44.459 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:44,452;75;50,0015983581543 stored.
2022-12-05 10:12:44.460 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.483 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:44
2022-12-05 10:12:44.484 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:44.486 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:44.499 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:44)
2022-12-05 10:12:44.501 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,64%. is added to queue
2022-12-05 10:12:44.502 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:44.4991095+01:00" stamp is good.
2022-12-05 10:12:44.504 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:44.505 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.507 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:44,499;76;37,63602066040039
2022-12-05 10:12:44.508 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:44,499;76;37,63602066040039 stored.
2022-12-05 10:12:44.510 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.545 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:44
2022-12-05 10:12:44.547 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:44.548 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:44.561 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:44)
2022-12-05 10:12:44.563 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,48%. is added to queue
2022-12-05 10:12:44.565 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:44.5616692+01:00" stamp is good.
2022-12-05 10:12:44.567 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:44.568 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.569 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:44,561;77;37,483116149902344
2022-12-05 10:12:44.570 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:44,561;77;37,483116149902344 stored.
2022-12-05 10:12:44.571 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.592 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:44
2022-12-05 10:12:44.594 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:44.595 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:44.608 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:44)
2022-12-05 10:12:44.610 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 49,99%. is added to queue
2022-12-05 10:12:44.612 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:44.6084517+01:00" stamp is good.
2022-12-05 10:12:44.613 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:44.615 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.616 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:44,608;78;49,992000579833984
2022-12-05 10:12:44.617 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:44,608;78;49,992000579833984 stored.
2022-12-05 10:12:44.619 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.655 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:44
2022-12-05 10:12:44.658 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:44.659 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:44.671 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:44)
2022-12-05 10:12:44.675 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,48%. is added to queue
2022-12-05 10:12:44.677 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:44.6717650+01:00" stamp is good.
2022-12-05 10:12:44.678 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:44.679 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.680 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:44,671;79;11,480937957763672
2022-12-05 10:12:44.682 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:44,671;79;11,480937957763672 stored.
2022-12-05 10:12:44.684 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.703 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:44
2022-12-05 10:12:44.705 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:44.708 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:44.719 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:44)
2022-12-05 10:12:44.722 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 2,54%. is added to queue
2022-12-05 10:12:44.726 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:44.7196220+01:00" stamp is good.
2022-12-05 10:12:44.727 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:44.729 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.730 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:44,719;80;2,5398948192596436
2022-12-05 10:12:44.731 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:44,719;80;2,5398948192596436 stored.
2022-12-05 10:12:44.733 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.766 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:44
2022-12-05 10:12:44.767 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:44.768 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:44.781 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:44)
2022-12-05 10:12:44.784 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,61%. is added to queue
2022-12-05 10:12:44.785 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:44.7816474+01:00" stamp is good.
2022-12-05 10:12:44.786 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:44.787 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.788 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:44,781;81;18,612539291381836
2022-12-05 10:12:44.790 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:44,781;81;18,612539291381836 stored.
2022-12-05 10:12:44.792 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.811 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:44
2022-12-05 10:12:44.813 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:44.814 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:44.827 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:44)
2022-12-05 10:12:44.829 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 35,05%. is added to queue
2022-12-05 10:12:44.832 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:44.8276940+01:00" stamp is good.
2022-12-05 10:12:44.833 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:44.834 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.835 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:44,827;82;35,05332946777344
2022-12-05 10:12:44.837 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:44,827;82;35,05332946777344 stored.
2022-12-05 10:12:44.838 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.874 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:44
2022-12-05 10:12:44.876 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:44.877 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:44.890 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:44)
2022-12-05 10:12:44.892 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 51,18%. is added to queue
2022-12-05 10:12:44.894 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:44.8905315+01:00" stamp is good.
2022-12-05 10:12:44.896 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:44.897 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.898 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:44,890;83;51,17616271972656
2022-12-05 10:12:44.899 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:44,890;83;51,17616271972656 stored.
2022-12-05 10:12:44.901 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.921 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:44
2022-12-05 10:12:44.923 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:44.924 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:44.937 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:44)
2022-12-05 10:12:44.940 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,62%. is added to queue
2022-12-05 10:12:44.944 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:44.9376837+01:00" stamp is good.
2022-12-05 10:12:44.945 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:44.947 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.948 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:44,937;84;18,61916732788086
2022-12-05 10:12:44.949 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:44,937;84;18,61916732788086 stored.
2022-12-05 10:12:44.951 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:44.985 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:44
2022-12-05 10:12:44.986 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:44.988 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:45.001 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:45)
2022-12-05 10:12:45.004 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 2,35%. is added to queue
2022-12-05 10:12:45.006 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:45.0016102+01:00" stamp is good.
2022-12-05 10:12:45.007 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:45.009 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.010 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:45,001;85;2,3469061851501465
2022-12-05 10:12:45.011 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:45,001;85;2,3469061851501465 stored.
2022-12-05 10:12:45.013 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.033 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:45
2022-12-05 10:12:45.035 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:45.036 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:45.049 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:45)
2022-12-05 10:12:45.051 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 34,88%. is added to queue
2022-12-05 10:12:45.053 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:45.0495415+01:00" stamp is good.
2022-12-05 10:12:45.055 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:45.056 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.057 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:45,049;86;34,877925872802734
2022-12-05 10:12:45.059 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:45,049;86;34,877925872802734 stored.
2022-12-05 10:12:45.060 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.096 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:45
2022-12-05 10:12:45.098 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:45.099 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:45.111 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:45)
2022-12-05 10:12:45.114 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 28,86%. is added to queue
2022-12-05 10:12:45.115 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:45.1115368+01:00" stamp is good.
2022-12-05 10:12:45.117 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:45.118 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.119 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:45,111;87;28,863454818725586
2022-12-05 10:12:45.120 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:45,111;87;28,863454818725586 stored.
2022-12-05 10:12:45.123 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.143 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:45
2022-12-05 10:12:45.145 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:45.146 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:45.159 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:45)
2022-12-05 10:12:45.161 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 67,53%. is added to queue
2022-12-05 10:12:45.163 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:45.1596120+01:00" stamp is good.
2022-12-05 10:12:45.165 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:45.166 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.167 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:45,159;88;67,53218841552734
2022-12-05 10:12:45.168 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:45,159;88;67,53218841552734 stored.
2022-12-05 10:12:45.170 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.207 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:45
2022-12-05 10:12:45.209 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:45.211 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:45.223 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:45)
2022-12-05 10:12:45.225 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 28,97%. is added to queue
2022-12-05 10:12:45.227 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:45.2235458+01:00" stamp is good.
2022-12-05 10:12:45.228 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:45.230 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.231 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:45,223;89;28,9688777923584
2022-12-05 10:12:45.232 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:45,223;89;28,9688777923584 stored.
2022-12-05 10:12:45.233 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.270 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:45
2022-12-05 10:12:45.272 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:45.273 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:45.285 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:45)
2022-12-05 10:12:45.288 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,58%. is added to queue
2022-12-05 10:12:45.290 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:45.2859123+01:00" stamp is good.
2022-12-05 10:12:45.291 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:45.293 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.294 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:45,285;90;37,578460693359375
2022-12-05 10:12:45.295 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:45,285;90;37,578460693359375 stored.
2022-12-05 10:12:45.296 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.316 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:45
2022-12-05 10:12:45.319 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:45.320 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:45.332 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:45)
2022-12-05 10:12:45.335 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:45.336 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:45.3327188+01:00" stamp is good.
2022-12-05 10:12:45.338 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:45.339 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.340 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:45,332;91;37,50191879272461
2022-12-05 10:12:45.342 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:45,332;91;37,50191879272461 stored.
2022-12-05 10:12:45.344 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.380 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:45
2022-12-05 10:12:45.382 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:45.383 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:45.404 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:45)
2022-12-05 10:12:45.406 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50,33%. is added to queue
2022-12-05 10:12:45.407 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:45.4041565+01:00" stamp is good.
2022-12-05 10:12:45.408 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:45.409 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.410 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:45,404;92;50,333377838134766
2022-12-05 10:12:45.411 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:45,404;92;50,333377838134766 stored.
2022-12-05 10:12:45.412 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.419 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:45
2022-12-05 10:12:45.422 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:45.423 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:45.435 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:45)
2022-12-05 10:12:45.437 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 61,57%. is added to queue
2022-12-05 10:12:45.439 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:45.4351425+01:00" stamp is good.
2022-12-05 10:12:45.440 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:45.442 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.443 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:45,435;93;61,57241439819336
2022-12-05 10:12:45.444 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:45,435;93;61,57241439819336 stored.
2022-12-05 10:12:45.446 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.464 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:12:45.465 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:45.469 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:45.472 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:12:45.473 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":100,"$type":"MDState"} 
2022-12-05 10:12:45.477 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:12:45.478 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.56ms
2022-12-05 10:12:45.480 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:45.481 +01:00 [INF] Request finished in 16.7637ms 200 application/json; charset=utf-8
2022-12-05 10:12:45.487 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:12:45.488 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:45.489 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:45.491 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:12:45.492 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:12:45.495 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:12:45.496 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 5.3665ms
2022-12-05 10:12:45.498 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:45.499 +01:00 [INF] Request finished in 12.1168ms 200 application/json; charset=utf-8
2022-12-05 10:12:45.503 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:12:45.503 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:45
2022-12-05 10:12:45.508 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:45.509 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:45.510 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:45.511 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:45.513 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:12:45.514 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:12:45.518 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:12:45.519 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.0408ms
2022-12-05 10:12:45.519 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:45)
2022-12-05 10:12:45.522 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:45.523 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50%. is added to queue
2022-12-05 10:12:45.524 +01:00 [INF] Request finished in 21.2056ms 200 application/json; charset=utf-8
2022-12-05 10:12:45.526 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:45.5194230+01:00" stamp is good.
2022-12-05 10:12:45.527 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:45.529 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.529 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:45,519;94;50,00191879272461
2022-12-05 10:12:45.531 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:45,519;94;50,00191879272461 stored.
2022-12-05 10:12:45.532 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.534 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:45
2022-12-05 10:12:45.538 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:45.539 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:45.550 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:45)
2022-12-05 10:12:45.552 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:45.553 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:45.5506947+01:00" stamp is good.
2022-12-05 10:12:45.554 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:45.556 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.557 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:45,550;95;37,502159118652344
2022-12-05 10:12:45.559 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:45,550;95;37,502159118652344 stored.
2022-12-05 10:12:45.560 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.612 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:45
2022-12-05 10:12:45.614 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:45.615 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:45.628 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:45)
2022-12-05 10:12:45.630 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 25%. is added to queue
2022-12-05 10:12:45.632 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:45.6287314+01:00" stamp is good.
2022-12-05 10:12:45.634 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:45.635 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.636 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:45,628;96;24,995840072631836
2022-12-05 10:12:45.637 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:45,628;96;24,995840072631836 stored.
2022-12-05 10:12:45.639 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.644 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:45
2022-12-05 10:12:45.647 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:45.648 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:45.660 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:45)
2022-12-05 10:12:45.662 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,51%. is added to queue
2022-12-05 10:12:45.664 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:45.6600622+01:00" stamp is good.
2022-12-05 10:12:45.665 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:45.666 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.667 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:45,660;97;37,51055908203125
2022-12-05 10:12:45.668 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:45,660;97;37,51055908203125 stored.
2022-12-05 10:12:45.669 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.722 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:45
2022-12-05 10:12:45.724 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:45.725 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:45.738 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:45)
2022-12-05 10:12:45.740 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 49,9%. is added to queue
2022-12-05 10:12:45.741 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:45.7381457+01:00" stamp is good.
2022-12-05 10:12:45.743 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:45.744 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.745 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:45,738;98;49,90156555175781
2022-12-05 10:12:45.747 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:45,738;98;49,90156555175781 stored.
2022-12-05 10:12:45.748 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.753 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:45
2022-12-05 10:12:45.762 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:45.763 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:45.769 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:45)
2022-12-05 10:12:45.771 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50,09%. is added to queue
2022-12-05 10:12:45.773 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:45.7694238+01:00" stamp is good.
2022-12-05 10:12:45.774 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:45.775 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.776 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:45,769;99;50,087528228759766
2022-12-05 10:12:45.777 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:45,769;99;50,087528228759766 stored.
2022-12-05 10:12:45.778 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.831 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:45
2022-12-05 10:12:45.833 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:45.834 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:45.847 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:45)
2022-12-05 10:12:45.850 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,51%. is added to queue
2022-12-05 10:12:45.851 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:45.8474892+01:00" stamp is good.
2022-12-05 10:12:45.853 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:45.854 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.855 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:45,847;100;37,50775909423828
2022-12-05 10:12:45.856 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:45,847;100;37,50775909423828 stored.
2022-12-05 10:12:45.858 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.862 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:45
2022-12-05 10:12:45.866 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:45.867 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:45.878 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:45)
2022-12-05 10:12:45.881 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 49,92%. is added to queue
2022-12-05 10:12:45.882 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:45.8787595+01:00" stamp is good.
2022-12-05 10:12:45.883 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:45.885 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.886 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:45,878;101;49,917625427246094
2022-12-05 10:12:45.887 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:45,878;101;49,917625427246094 stored.
2022-12-05 10:12:45.889 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.941 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:45
2022-12-05 10:12:45.942 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:45.943 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:45.956 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:45)
2022-12-05 10:12:45.958 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50%. is added to queue
2022-12-05 10:12:45.960 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:45.9568343+01:00" stamp is good.
2022-12-05 10:12:45.961 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:45.962 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.963 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:45,956;102;50,00223922729492
2022-12-05 10:12:45.965 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:45,956;102;50,00223922729492 stored.
2022-12-05 10:12:45.966 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.972 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:45
2022-12-05 10:12:45.976 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:45.977 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:45.988 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:45)
2022-12-05 10:12:45.990 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 62,5%. is added to queue
2022-12-05 10:12:45.991 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:45.9881080+01:00" stamp is good.
2022-12-05 10:12:45.992 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:45.993 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:45.994 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:45,988;103;62,50143814086914
2022-12-05 10:12:45.995 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:45,988;103;62,50143814086914 stored.
2022-12-05 10:12:45.997 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.050 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:46
2022-12-05 10:12:46.052 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:46.053 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:46.066 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:46)
2022-12-05 10:12:46.068 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:46.069 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:46.0662243+01:00" stamp is good.
2022-12-05 10:12:46.070 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:46.071 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.072 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:46,066;104;37,499359130859375
2022-12-05 10:12:46.073 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:46,066;104;37,499359130859375 stored.
2022-12-05 10:12:46.074 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.081 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:46
2022-12-05 10:12:46.084 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:46.086 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:46.097 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:46)
2022-12-05 10:12:46.099 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,33%. is added to queue
2022-12-05 10:12:46.100 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:46.0974632+01:00" stamp is good.
2022-12-05 10:12:46.101 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:46.102 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.103 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:46,097;105;37,33170700073242
2022-12-05 10:12:46.104 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:46,097;105;37,33170700073242 stored.
2022-12-05 10:12:46.106 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.159 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:46
2022-12-05 10:12:46.161 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:46.162 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:46.175 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:46)
2022-12-05 10:12:46.177 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:46.178 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:46.1755551+01:00" stamp is good.
2022-12-05 10:12:46.179 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:46.180 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.181 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:46,175;106;37,5007209777832
2022-12-05 10:12:46.182 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:46,175;106;37,5007209777832 stored.
2022-12-05 10:12:46.183 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.191 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:46
2022-12-05 10:12:46.194 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:46.195 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:46.206 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:46)
2022-12-05 10:12:46.209 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,63%. is added to queue
2022-12-05 10:12:46.212 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:46.2069753+01:00" stamp is good.
2022-12-05 10:12:46.213 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:46.214 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.216 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:46,206;107;37,6326789855957
2022-12-05 10:12:46.217 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:46,206;107;37,6326789855957 stored.
2022-12-05 10:12:46.219 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.269 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:46
2022-12-05 10:12:46.271 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:46.272 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:46.284 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 12:46
2022-12-05 10:12:46.285 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:46)
2022-12-05 10:12:46.288 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:12:46.289 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,49%. is added to queue
2022-12-05 10:12:46.290 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:12:46.291 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:46.2850033+01:00" stamp is good.
2022-12-05 10:12:46.294 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:46.295 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.296 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:46,285;108;37,492958068847656
2022-12-05 10:12:46.297 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:46,285;108;37,492958068847656 stored.
2022-12-05 10:12:46.299 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.300 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:46
2022-12-05 10:12:46.300 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:12:46)
2022-12-05 10:12:46.303 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:46.305 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 24,84%. is added to queue
2022-12-05 10:12:46.307 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:46.309 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:46.3005442+01:00" stamp is good.
2022-12-05 10:12:46.312 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:12:46.313 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.314 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 30.30.30.30;2022-12-05 10:12:46,300;16;24,842872619628906
2022-12-05 10:12:46.316 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:12:46,300;16;24,842872619628906 stored.
2022-12-05 10:12:46.316 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:46)
2022-12-05 10:12:46.318 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.319 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,51%. is added to queue
2022-12-05 10:12:46.323 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:46.3162855+01:00" stamp is good.
2022-12-05 10:12:46.324 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:46.325 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.327 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:46,316;109;37,50735855102539
2022-12-05 10:12:46.328 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:46,316;109;37,50735855102539 stored.
2022-12-05 10:12:46.329 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.378 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:46
2022-12-05 10:12:46.381 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:46.382 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:46.394 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:46)
2022-12-05 10:12:46.397 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 12,49%. is added to queue
2022-12-05 10:12:46.399 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:46.3944935+01:00" stamp is good.
2022-12-05 10:12:46.400 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:46.402 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.403 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:46,394;110;12,494799613952637
2022-12-05 10:12:46.404 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:46,394;110;12,494799613952637 stored.
2022-12-05 10:12:46.406 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.409 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:46
2022-12-05 10:12:46.412 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:46.413 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:46.425 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:46)
2022-12-05 10:12:46.427 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,64%. is added to queue
2022-12-05 10:12:46.430 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:46.4257154+01:00" stamp is good.
2022-12-05 10:12:46.432 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:46.433 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.434 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:46,425;111;37,63642120361328
2022-12-05 10:12:46.436 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:46,425;111;37,63642120361328 stored.
2022-12-05 10:12:46.437 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.487 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:46
2022-12-05 10:12:46.489 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:46.490 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:46.503 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:46)
2022-12-05 10:12:46.510 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:46.511 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:46.5037816+01:00" stamp is good.
2022-12-05 10:12:46.512 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:46.514 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.515 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:46,503;112;37,502559661865234
2022-12-05 10:12:46.516 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:46,503;112;37,502559661865234 stored.
2022-12-05 10:12:46.518 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.519 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:46
2022-12-05 10:12:46.522 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:46.523 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:46.534 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:46)
2022-12-05 10:12:46.536 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:46.539 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:46.5349919+01:00" stamp is good.
2022-12-05 10:12:46.540 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:46.542 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.543 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:46,534;113;37,499759674072266
2022-12-05 10:12:46.544 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:46,534;113;37,499759674072266 stored.
2022-12-05 10:12:46.546 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.597 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:46
2022-12-05 10:12:46.600 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:46.602 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:46.613 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:46)
2022-12-05 10:12:46.616 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,46%. is added to queue
2022-12-05 10:12:46.618 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:46.6139529+01:00" stamp is good.
2022-12-05 10:12:46.619 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:46.621 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.622 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:46,613;114;11,459268569946289
2022-12-05 10:12:46.623 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:46,613;114;11,459268569946289 stored.
2022-12-05 10:12:46.624 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.629 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:46
2022-12-05 10:12:46.632 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:46.633 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:46.645 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:46)
2022-12-05 10:12:46.648 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,21%. is added to queue
2022-12-05 10:12:46.650 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:46.6459213+01:00" stamp is good.
2022-12-05 10:12:46.651 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:46.652 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.653 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:46,645;115;11,210517883300781
2022-12-05 10:12:46.655 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:46,645;115;11,210517883300781 stored.
2022-12-05 10:12:46.657 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.709 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:46
2022-12-05 10:12:46.711 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:46.712 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:46.725 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:46)
2022-12-05 10:12:46.729 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,59%. is added to queue
2022-12-05 10:12:46.731 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:46.7259599+01:00" stamp is good.
2022-12-05 10:12:46.732 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:46.734 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.735 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:46,725;116;18,586076736450195
2022-12-05 10:12:46.736 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:46,725;116;18,586076736450195 stored.
2022-12-05 10:12:46.738 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.740 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:46
2022-12-05 10:12:46.744 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:46.745 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:46.756 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:46)
2022-12-05 10:12:46.758 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 0%. is added to queue
2022-12-05 10:12:46.761 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:46.7560612+01:00" stamp is good.
2022-12-05 10:12:46.763 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:46.764 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.765 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:46,756;117;0
2022-12-05 10:12:46.767 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:46,756;117;0 stored.
2022-12-05 10:12:46.768 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.819 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:46
2022-12-05 10:12:46.821 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:46.822 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:46.836 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:46)
2022-12-05 10:12:46.839 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 34,89%. is added to queue
2022-12-05 10:12:46.840 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:46.8360577+01:00" stamp is good.
2022-12-05 10:12:46.842 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:46.843 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.844 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:46,836;118;34,889320373535156
2022-12-05 10:12:46.845 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:46,836;118;34,889320373535156 stored.
2022-12-05 10:12:46.847 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.851 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:46
2022-12-05 10:12:46.854 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:46.855 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:46.867 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:46)
2022-12-05 10:12:46.870 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 64,48%. is added to queue
2022-12-05 10:12:46.871 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:46.8679642+01:00" stamp is good.
2022-12-05 10:12:46.873 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:46.875 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.876 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:46,867;119;64,4758529663086
2022-12-05 10:12:46.877 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:46,867;119;64,4758529663086 stored.
2022-12-05 10:12:46.879 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.931 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:46
2022-12-05 10:12:46.933 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:46.934 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:46.963 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:46
2022-12-05 10:12:46.964 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:46)
2022-12-05 10:12:46.965 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:46.966 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 65,12%. is added to queue
2022-12-05 10:12:46.967 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:46.968 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:46.9640345+01:00" stamp is good.
2022-12-05 10:12:46.970 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:46.971 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.972 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:46,964;120;65,12210845947266
2022-12-05 10:12:46.973 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:46,964;120;65,12210845947266 stored.
2022-12-05 10:12:46.974 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:46.995 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:46)
2022-12-05 10:12:46.997 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 63,83%. is added to queue
2022-12-05 10:12:46.998 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:46.9959035+01:00" stamp is good.
2022-12-05 10:12:46.999 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:47.000 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.001 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:46,995;121;63,82735824584961
2022-12-05 10:12:47.003 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:46,995;121;63,82735824584961 stored.
2022-12-05 10:12:47.004 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.041 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:47
2022-12-05 10:12:47.043 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:47.044 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:47.057 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:47)
2022-12-05 10:12:47.059 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 24,88%. is added to queue
2022-12-05 10:12:47.061 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:47.0579377+01:00" stamp is good.
2022-12-05 10:12:47.062 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:47.063 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.064 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:47,057;122;24,88462257385254
2022-12-05 10:12:47.065 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:47,057;122;24,88462257385254 stored.
2022-12-05 10:12:47.066 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.073 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:47
2022-12-05 10:12:47.078 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:47.079 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:47.106 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:47)
2022-12-05 10:12:47.110 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 76,56%. is added to queue
2022-12-05 10:12:47.111 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:47.1062044+01:00" stamp is good.
2022-12-05 10:12:47.113 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:47.114 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.115 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:47,106;123;76,56202697753906
2022-12-05 10:12:47.117 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:47,106;123;76,56202697753906 stored.
2022-12-05 10:12:47.118 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.153 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:47
2022-12-05 10:12:47.155 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:47.157 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:47.185 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:47
2022-12-05 10:12:47.185 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:47)
2022-12-05 10:12:47.187 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:47.189 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 34,9%. is added to queue
2022-12-05 10:12:47.190 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:47.192 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:47.1859651+01:00" stamp is good.
2022-12-05 10:12:47.194 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:47.196 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.197 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:47,185;124;34,89555740356445
2022-12-05 10:12:47.198 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:47,185;124;34,89555740356445 stored.
2022-12-05 10:12:47.200 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.201 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:47)
2022-12-05 10:12:47.205 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 0%. is added to queue
2022-12-05 10:12:47.206 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:47.2019158+01:00" stamp is good.
2022-12-05 10:12:47.207 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:47.208 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.209 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:47,201;125;0
2022-12-05 10:12:47.210 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:47,201;125;0 stored.
2022-12-05 10:12:47.211 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.263 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:47
2022-12-05 10:12:47.265 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:47.266 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:47.280 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:47)
2022-12-05 10:12:47.282 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,62%. is added to queue
2022-12-05 10:12:47.283 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:47.2799927+01:00" stamp is good.
2022-12-05 10:12:47.284 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:47.285 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.286 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:47,279;126;18,615253448486328
2022-12-05 10:12:47.287 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:47,279;126;18,615253448486328 stored.
2022-12-05 10:12:47.289 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.295 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:47
2022-12-05 10:12:47.298 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:47.299 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:47.311 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 12:47
2022-12-05 10:12:47.311 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:47)
2022-12-05 10:12:47.314 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:12:47.315 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,22%. is added to queue
2022-12-05 10:12:47.317 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:12:47.318 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:47.3119211+01:00" stamp is good.
2022-12-05 10:12:47.321 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:47.322 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.323 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:47,311;127;11,220909118652344
2022-12-05 10:12:47.324 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:47,311;127;11,220909118652344 stored.
2022-12-05 10:12:47.326 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.333 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:12:47)
2022-12-05 10:12:47.336 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 37,51%. is added to queue
2022-12-05 10:12:47.338 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:47.3337057+01:00" stamp is good.
2022-12-05 10:12:47.339 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:12:47.340 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.341 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 20.20.20.20;2022-12-05 10:12:47,333;12;37,50895690917969
2022-12-05 10:12:47.343 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:12:47,333;12;37,50895690917969 stored.
2022-12-05 10:12:47.344 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.380 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:47
2022-12-05 10:12:47.382 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:47.383 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:47.396 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:47)
2022-12-05 10:12:47.398 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,63%. is added to queue
2022-12-05 10:12:47.400 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:47.3962122+01:00" stamp is good.
2022-12-05 10:12:47.401 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:47.403 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.404 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:47,396;128;37,63426971435547
2022-12-05 10:12:47.406 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:47,396;128;37,63426971435547 stored.
2022-12-05 10:12:47.408 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.411 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:47
2022-12-05 10:12:47.414 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:47.415 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:47.427 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:47)
2022-12-05 10:12:47.430 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,58%. is added to queue
2022-12-05 10:12:47.431 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:47.4274238+01:00" stamp is good.
2022-12-05 10:12:47.432 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:47.433 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.435 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:47,427;129;37,57806396484375
2022-12-05 10:12:47.436 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:47,427;129;37,57806396484375 stored.
2022-12-05 10:12:47.438 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.489 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:47
2022-12-05 10:12:47.491 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:47.492 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:47.505 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:47)
2022-12-05 10:12:47.507 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 24,85%. is added to queue
2022-12-05 10:12:47.510 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:47.5055145+01:00" stamp is good.
2022-12-05 10:12:47.511 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:47.512 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.514 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:47,505;130;24,851064682006836
2022-12-05 10:12:47.515 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:47,505;130;24,851064682006836 stored.
2022-12-05 10:12:47.516 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.520 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:47
2022-12-05 10:12:47.524 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:47.525 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:47.536 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:47)
2022-12-05 10:12:47.539 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,7%. is added to queue
2022-12-05 10:12:47.541 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:47.5367536+01:00" stamp is good.
2022-12-05 10:12:47.542 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:47.543 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.545 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:47,536;131;37,69912338256836
2022-12-05 10:12:47.546 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:47,536;131;37,69912338256836 stored.
2022-12-05 10:12:47.548 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.599 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:47
2022-12-05 10:12:47.602 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:47.603 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:47.615 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:47)
2022-12-05 10:12:47.618 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,41%. is added to queue
2022-12-05 10:12:47.619 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:47.6149930+01:00" stamp is good.
2022-12-05 10:12:47.621 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:47.623 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.624 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:47,614;132;37,410831451416016
2022-12-05 10:12:47.626 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:47,614;132;37,410831451416016 stored.
2022-12-05 10:12:47.627 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.630 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:47
2022-12-05 10:12:47.633 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:47.635 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:47.646 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:47)
2022-12-05 10:12:47.649 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50,13%. is added to queue
2022-12-05 10:12:47.651 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:47.6462912+01:00" stamp is good.
2022-12-05 10:12:47.652 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:47.654 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.655 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:47,646;133;50,13308334350586
2022-12-05 10:12:47.657 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:47,646;133;50,13308334350586 stored.
2022-12-05 10:12:47.658 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.709 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:47
2022-12-05 10:12:47.710 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:47.711 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:47.725 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:47)
2022-12-05 10:12:47.727 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,62%. is added to queue
2022-12-05 10:12:47.730 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:47.7254362+01:00" stamp is good.
2022-12-05 10:12:47.732 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:47.734 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.735 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:47,725;134;18,6200008392334
2022-12-05 10:12:47.736 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:47,725;134;18,6200008392334 stored.
2022-12-05 10:12:47.738 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.741 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:47
2022-12-05 10:12:47.745 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:47.746 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:47.773 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:47)
2022-12-05 10:12:47.775 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 53,19%. is added to queue
2022-12-05 10:12:47.776 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:47.7735659+01:00" stamp is good.
2022-12-05 10:12:47.778 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:47.779 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.780 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:47,773;135;53,19425964355469
2022-12-05 10:12:47.782 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:47,773;135;53,19425964355469 stored.
2022-12-05 10:12:47.783 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.821 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:47
2022-12-05 10:12:47.823 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:47.824 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:47.853 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:47
2022-12-05 10:12:47.853 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:47)
2022-12-05 10:12:47.855 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:47.856 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 72,13%. is added to queue
2022-12-05 10:12:47.857 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:47.859 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:47.8534931+01:00" stamp is good.
2022-12-05 10:12:47.861 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:47.862 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.863 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:47,853;136;72,12519073486328
2022-12-05 10:12:47.865 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:47,853;136;72,12519073486328 stored.
2022-12-05 10:12:47.866 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.883 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:47)
2022-12-05 10:12:47.885 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 66,03%. is added to queue
2022-12-05 10:12:47.887 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:47.8834650+01:00" stamp is good.
2022-12-05 10:12:47.889 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:47.890 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.891 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:47,883;137;66,02552032470703
2022-12-05 10:12:47.893 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:47,883;137;66,02552032470703 stored.
2022-12-05 10:12:47.894 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.930 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:47
2022-12-05 10:12:47.931 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:47.932 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:47.945 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:47)
2022-12-05 10:12:47.947 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 34,9%. is added to queue
2022-12-05 10:12:47.948 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:47.9453500+01:00" stamp is good.
2022-12-05 10:12:47.949 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:47.950 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.951 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:47,945;138;34,89583206176758
2022-12-05 10:12:47.952 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:47,945;138;34,89583206176758 stored.
2022-12-05 10:12:47.953 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.961 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:47
2022-12-05 10:12:47.963 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:47.964 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:47.977 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:47)
2022-12-05 10:12:47.979 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,61%. is added to queue
2022-12-05 10:12:47.981 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:47.9774108+01:00" stamp is good.
2022-12-05 10:12:47.982 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:47.983 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:47.984 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:47,977;139;18,613895416259766
2022-12-05 10:12:47.985 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:47,977;139;18,613895416259766 stored.
2022-12-05 10:12:47.986 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.041 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:48
2022-12-05 10:12:48.043 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:48.044 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:48.073 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:48
2022-12-05 10:12:48.073 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:48)
2022-12-05 10:12:48.075 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:48.076 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 65,17%. is added to queue
2022-12-05 10:12:48.079 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:48.080 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:48.0735763+01:00" stamp is good.
2022-12-05 10:12:48.083 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:48.084 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.085 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:48,073;140;65,1668930053711
2022-12-05 10:12:48.087 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:48,073;140;65,1668930053711 stored.
2022-12-05 10:12:48.088 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.105 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:48)
2022-12-05 10:12:48.108 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 67,44%. is added to queue
2022-12-05 10:12:48.109 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:48.1057384+01:00" stamp is good.
2022-12-05 10:12:48.111 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:48.112 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.113 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:48,105;141;67,43502807617188
2022-12-05 10:12:48.114 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:48,105;141;67,43502807617188 stored.
2022-12-05 10:12:48.116 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.153 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:48
2022-12-05 10:12:48.155 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:48.156 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:48.185 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:48
2022-12-05 10:12:48.185 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:48)
2022-12-05 10:12:48.187 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:48.188 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 79,07%. is added to queue
2022-12-05 10:12:48.189 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:48.190 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:48.1854852+01:00" stamp is good.
2022-12-05 10:12:48.192 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:48.193 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.194 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:48,185;142;79,07228088378906
2022-12-05 10:12:48.196 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:48,185;142;79,07228088378906 stored.
2022-12-05 10:12:48.197 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.201 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:48)
2022-12-05 10:12:48.204 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 2,33%. is added to queue
2022-12-05 10:12:48.205 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:48.2013217+01:00" stamp is good.
2022-12-05 10:12:48.206 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:48.207 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.208 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:48,201;143;2,33323335647583
2022-12-05 10:12:48.210 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:48,201;143;2,33323335647583 stored.
2022-12-05 10:12:48.211 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.265 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:48
2022-12-05 10:12:48.266 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:48.268 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:48.281 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:48)
2022-12-05 10:12:48.283 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,62%. is added to queue
2022-12-05 10:12:48.287 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:48.2814179+01:00" stamp is good.
2022-12-05 10:12:48.288 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:48.289 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.291 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:48,281;144;18,617965698242188
2022-12-05 10:12:48.292 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:48,281;144;18,617965698242188 stored.
2022-12-05 10:12:48.294 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.297 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:48
2022-12-05 10:12:48.300 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:48.301 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:48.312 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:48)
2022-12-05 10:12:48.314 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 21,87%. is added to queue
2022-12-05 10:12:48.315 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:48.3123952+01:00" stamp is good.
2022-12-05 10:12:48.316 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:48.317 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.319 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:48,312;145;21,86796760559082
2022-12-05 10:12:48.320 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:48,312;145;21,86796760559082 stored.
2022-12-05 10:12:48.322 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.375 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:48
2022-12-05 10:12:48.377 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:48.378 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:48.391 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:48)
2022-12-05 10:12:48.394 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,53%. is added to queue
2022-12-05 10:12:48.395 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:48.3914102+01:00" stamp is good.
2022-12-05 10:12:48.396 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:48.398 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.399 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:48,391;146;18,53498649597168
2022-12-05 10:12:48.400 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:48,391;146;18,53498649597168 stored.
2022-12-05 10:12:48.402 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.407 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:48
2022-12-05 10:12:48.410 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:48.411 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:48.423 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:48)
2022-12-05 10:12:48.425 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 2,35%. is added to queue
2022-12-05 10:12:48.428 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:48.4234411+01:00" stamp is good.
2022-12-05 10:12:48.429 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:48.431 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.432 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:48,423;147;2,3459529876708984
2022-12-05 10:12:48.433 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:48,423;147;2,3459529876708984 stored.
2022-12-05 10:12:48.435 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.486 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:48
2022-12-05 10:12:48.488 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:48.489 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:48.502 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:48)
2022-12-05 10:12:48.504 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,51%. is added to queue
2022-12-05 10:12:48.507 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:48.5022806+01:00" stamp is good.
2022-12-05 10:12:48.508 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:48.509 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.510 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:48,502;148;37,506160736083984
2022-12-05 10:12:48.511 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:48,502;148;37,506160736083984 stored.
2022-12-05 10:12:48.512 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.517 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:48
2022-12-05 10:12:48.520 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:48.522 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:48.533 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:48)
2022-12-05 10:12:48.536 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:48.539 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:48.5335669+01:00" stamp is good.
2022-12-05 10:12:48.541 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:48.542 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.543 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:48,533;149;37,496559143066406
2022-12-05 10:12:48.545 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:48,533;149;37,496559143066406 stored.
2022-12-05 10:12:48.547 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.595 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:48
2022-12-05 10:12:48.597 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:48.598 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:48.611 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:48)
2022-12-05 10:12:48.613 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 61,91%. is added to queue
2022-12-05 10:12:48.616 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:48.6114464+01:00" stamp is good.
2022-12-05 10:12:48.617 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:48.618 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.619 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:48,611;150;61,90519714355469
2022-12-05 10:12:48.621 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:48,611;150;61,90519714355469 stored.
2022-12-05 10:12:48.622 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.627 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:48
2022-12-05 10:12:48.630 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:48.631 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:48.643 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:48)
2022-12-05 10:12:48.645 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,22%. is added to queue
2022-12-05 10:12:48.647 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:48.6434121+01:00" stamp is good.
2022-12-05 10:12:48.649 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:48.650 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.651 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:48,643;151;11,22020435333252
2022-12-05 10:12:48.652 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:48,643;151;11,22020435333252 stored.
2022-12-05 10:12:48.654 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.705 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:48
2022-12-05 10:12:48.707 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:48.708 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:48.721 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:48)
2022-12-05 10:12:48.724 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,63%. is added to queue
2022-12-05 10:12:48.725 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:48.7214548+01:00" stamp is good.
2022-12-05 10:12:48.726 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:48.727 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.728 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:48,721;152;18,633405685424805
2022-12-05 10:12:48.730 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:48,721;152;18,633405685424805 stored.
2022-12-05 10:12:48.731 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.737 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:48
2022-12-05 10:12:48.741 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:48.742 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:48.753 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:48)
2022-12-05 10:12:48.755 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 0%. is added to queue
2022-12-05 10:12:48.758 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:48.7535539+01:00" stamp is good.
2022-12-05 10:12:48.759 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:48.760 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.761 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:48,753;153;0
2022-12-05 10:12:48.762 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:48,753;153;0 stored.
2022-12-05 10:12:48.764 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.817 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:48
2022-12-05 10:12:48.820 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:48.822 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:48.833 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:48)
2022-12-05 10:12:48.835 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 2,32%. is added to queue
2022-12-05 10:12:48.837 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:48.8333877+01:00" stamp is good.
2022-12-05 10:12:48.839 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:48.841 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.843 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:48,833;154;2,3166487216949463
2022-12-05 10:12:48.845 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:48,833;154;2,3166487216949463 stored.
2022-12-05 10:12:48.847 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.848 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:48
2022-12-05 10:12:48.851 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:48.853 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:48.863 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:48)
2022-12-05 10:12:48.865 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 34,89%. is added to queue
2022-12-05 10:12:48.867 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:48.8635070+01:00" stamp is good.
2022-12-05 10:12:48.868 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:48.870 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.871 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:48,863;155;34,88615036010742
2022-12-05 10:12:48.872 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:48,863;155;34,88615036010742 stored.
2022-12-05 10:12:48.874 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.926 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:48
2022-12-05 10:12:48.927 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:48.928 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:48.941 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:48)
2022-12-05 10:12:48.943 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 28,97%. is added to queue
2022-12-05 10:12:48.945 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:48.9413576+01:00" stamp is good.
2022-12-05 10:12:48.946 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:48.947 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.947 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:48,941;156;28,965648651123047
2022-12-05 10:12:48.949 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:48,941;156;28,965648651123047 stored.
2022-12-05 10:12:48.950 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.957 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:48
2022-12-05 10:12:48.960 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:48.961 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:48.973 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:48)
2022-12-05 10:12:48.976 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 80,47%. is added to queue
2022-12-05 10:12:48.977 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:48.9736544+01:00" stamp is good.
2022-12-05 10:12:48.978 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:48.979 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:48.980 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:48,973;157;80,4656753540039
2022-12-05 10:12:48.982 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:48,973;157;80,4656753540039 stored.
2022-12-05 10:12:48.983 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.037 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:49
2022-12-05 10:12:49.039 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:49.040 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:49.053 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:49)
2022-12-05 10:12:49.055 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,6%. is added to queue
2022-12-05 10:12:49.058 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:49.0533892+01:00" stamp is good.
2022-12-05 10:12:49.059 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:49.060 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.061 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:49,053;158;18,595422744750977
2022-12-05 10:12:49.063 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:49,053;158;18,595422744750977 stored.
2022-12-05 10:12:49.064 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.069 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:49
2022-12-05 10:12:49.072 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:49.074 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:49.101 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:49)
2022-12-05 10:12:49.103 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 32,48%. is added to queue
2022-12-05 10:12:49.105 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:49.1014815+01:00" stamp is good.
2022-12-05 10:12:49.106 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:49.107 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.108 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:49,101;159;32,483848571777344
2022-12-05 10:12:49.109 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:49,101;159;32,483848571777344 stored.
2022-12-05 10:12:49.111 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.149 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:49
2022-12-05 10:12:49.150 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:49.152 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:49.165 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:49)
2022-12-05 10:12:49.167 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,85%. is added to queue
2022-12-05 10:12:49.169 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:49.1656803+01:00" stamp is good.
2022-12-05 10:12:49.171 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:49.173 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.174 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:49,165;160;18,852466583251953
2022-12-05 10:12:49.176 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:49,165;160;18,852466583251953 stored.
2022-12-05 10:12:49.177 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.181 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:49
2022-12-05 10:12:49.184 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:49.185 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:49.213 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:49)
2022-12-05 10:12:49.215 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 54,98%. is added to queue
2022-12-05 10:12:49.217 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:49.2134451+01:00" stamp is good.
2022-12-05 10:12:49.218 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:49.219 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.221 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:49,213;161;54,9836540222168
2022-12-05 10:12:49.222 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:49,213;161;54,9836540222168 stored.
2022-12-05 10:12:49.224 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.261 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:49
2022-12-05 10:12:49.263 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:49.264 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:49.292 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:49
2022-12-05 10:12:49.292 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 12:49
2022-12-05 10:12:49.292 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:49)
2022-12-05 10:12:49.294 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:49.295 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:12:49.296 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 71,1%. is added to queue
2022-12-05 10:12:49.298 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:49.299 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:12:49.301 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:49.2927019+01:00" stamp is good.
2022-12-05 10:12:49.305 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:49.306 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.310 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:49,292;162;71,09832000732422
2022-12-05 10:12:49.311 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:49,292;162;71,09832000732422 stored.
2022-12-05 10:12:49.312 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.323 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:49)
2022-12-05 10:12:49.323 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:12:49)
2022-12-05 10:12:49.326 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 53,52%. is added to queue
2022-12-05 10:12:49.328 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 51,17%. is added to queue
2022-12-05 10:12:49.330 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:49.3235788+01:00" stamp is good.
2022-12-05 10:12:49.332 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:49.3237085+01:00" stamp is good.
2022-12-05 10:12:49.333 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:49.334 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:12:49.336 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.337 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.338 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:49,323;163;53,52237319946289
2022-12-05 10:12:49.341 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 30.30.30.30;2022-12-05 10:12:49,323;17;51,172489166259766
2022-12-05 10:12:49.343 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:49,323;163;53,52237319946289 stored.
2022-12-05 10:12:49.344 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:12:49,323;17;51,172489166259766 stored.
2022-12-05 10:12:49.345 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.347 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.371 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:49
2022-12-05 10:12:49.373 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:49.374 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:49.403 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:49
2022-12-05 10:12:49.403 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:49)
2022-12-05 10:12:49.405 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:49.406 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 65,11%. is added to queue
2022-12-05 10:12:49.408 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:49.410 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:49.4035305+01:00" stamp is good.
2022-12-05 10:12:49.413 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:49.414 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.415 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:49,403;164;65,11463165283203
2022-12-05 10:12:49.417 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:49,403;164;65,11463165283203 stored.
2022-12-05 10:12:49.418 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.435 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:49)
2022-12-05 10:12:49.437 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 59,34%. is added to queue
2022-12-05 10:12:49.439 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:49.4354911+01:00" stamp is good.
2022-12-05 10:12:49.441 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:49.443 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.444 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:49,435;165;59,343204498291016
2022-12-05 10:12:49.446 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:49,435;165;59,343204498291016 stored.
2022-12-05 10:12:49.447 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.483 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:49
2022-12-05 10:12:49.484 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:49.485 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:49.499 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:49)
2022-12-05 10:12:49.501 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,63%. is added to queue
2022-12-05 10:12:49.504 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:49.4995080+01:00" stamp is good.
2022-12-05 10:12:49.506 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:49.507 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.509 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:49,499;166;18,631526947021484
2022-12-05 10:12:49.510 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:49,499;166;18,631526947021484 stored.
2022-12-05 10:12:49.512 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.515 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:49
2022-12-05 10:12:49.518 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:49.519 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:49.531 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:49)
2022-12-05 10:12:49.533 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,22%. is added to queue
2022-12-05 10:12:49.537 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:49.5314563+01:00" stamp is good.
2022-12-05 10:12:49.539 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:49.540 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.541 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:49,531;167;11,221715927124023
2022-12-05 10:12:49.543 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:49,531;167;11,221715927124023 stored.
2022-12-05 10:12:49.544 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.595 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:49
2022-12-05 10:12:49.596 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:49.597 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:49.611 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:49)
2022-12-05 10:12:49.614 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 25,09%. is added to queue
2022-12-05 10:12:49.616 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:49.6117441+01:00" stamp is good.
2022-12-05 10:12:49.617 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:49.618 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.619 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:49,611;168;25,086875915527344
2022-12-05 10:12:49.621 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:49,611;168;25,086875915527344 stored.
2022-12-05 10:12:49.622 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.626 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:49
2022-12-05 10:12:49.628 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:49.629 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:49.641 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:49)
2022-12-05 10:12:49.644 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,23%. is added to queue
2022-12-05 10:12:49.645 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:49.6416845+01:00" stamp is good.
2022-12-05 10:12:49.647 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:49.648 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.649 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:49,641;169;11,225046157836914
2022-12-05 10:12:49.651 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:49,641;169;11,225046157836914 stored.
2022-12-05 10:12:49.652 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.703 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:49
2022-12-05 10:12:49.705 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:49.707 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:49.719 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:49)
2022-12-05 10:12:49.721 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,21%. is added to queue
2022-12-05 10:12:49.724 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:49.7194017+01:00" stamp is good.
2022-12-05 10:12:49.726 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:49.727 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.728 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:49,719;170;11,212132453918457
2022-12-05 10:12:49.729 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:49,719;170;11,212132453918457 stored.
2022-12-05 10:12:49.731 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.735 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:49
2022-12-05 10:12:49.738 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:49.739 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:49.750 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:49)
2022-12-05 10:12:49.752 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 0%. is added to queue
2022-12-05 10:12:49.755 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:49.7505021+01:00" stamp is good.
2022-12-05 10:12:49.756 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:49.758 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.759 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:49,750;171;0
2022-12-05 10:12:49.761 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:49,750;171;0 stored.
2022-12-05 10:12:49.763 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.811 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:49
2022-12-05 10:12:49.812 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:49.814 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:49.826 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:49)
2022-12-05 10:12:49.829 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,23%. is added to queue
2022-12-05 10:12:49.831 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:49.8264988+01:00" stamp is good.
2022-12-05 10:12:49.832 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:49.834 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.835 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:49,826;172;11,230694770812988
2022-12-05 10:12:49.836 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:49,826;172;11,230694770812988 stored.
2022-12-05 10:12:49.838 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.842 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:49
2022-12-05 10:12:49.845 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:49.846 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:49.873 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:49)
2022-12-05 10:12:49.875 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 47,41%. is added to queue
2022-12-05 10:12:49.877 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:49.8735424+01:00" stamp is good.
2022-12-05 10:12:49.878 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:49.879 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.880 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:49,873;173;47,41495895385742
2022-12-05 10:12:49.882 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:49,873;173;47,41495895385742 stored.
2022-12-05 10:12:49.883 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.921 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:49
2022-12-05 10:12:49.922 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:49.924 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:49.937 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:49)
2022-12-05 10:12:49.939 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:49.942 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:49.9372900+01:00" stamp is good.
2022-12-05 10:12:49.943 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:49.944 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.945 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:49,937;174;37,495361328125
2022-12-05 10:12:49.947 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:49,937;174;37,495361328125 stored.
2022-12-05 10:12:49.948 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.952 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:49
2022-12-05 10:12:49.956 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:49.957 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:49.968 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:49)
2022-12-05 10:12:49.970 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50%. is added to queue
2022-12-05 10:12:49.972 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:49.9683851+01:00" stamp is good.
2022-12-05 10:12:49.973 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:49.975 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:49.976 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:49,968;175;50,00352096557617
2022-12-05 10:12:49.977 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:49,968;175;50,00352096557617 stored.
2022-12-05 10:12:49.979 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.030 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:50
2022-12-05 10:12:50.031 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:50.033 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:50.046 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:50)
2022-12-05 10:12:50.048 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 34,89%. is added to queue
2022-12-05 10:12:50.050 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:50.0467790+01:00" stamp is good.
2022-12-05 10:12:50.051 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:50.051 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.052 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:50,046;176;34,892578125
2022-12-05 10:12:50.053 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:50,046;176;34,892578125 stored.
2022-12-05 10:12:50.055 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.062 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:50
2022-12-05 10:12:50.065 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:50.066 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:50.078 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:50)
2022-12-05 10:12:50.080 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 28,97%. is added to queue
2022-12-05 10:12:50.082 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:50.0783656+01:00" stamp is good.
2022-12-05 10:12:50.083 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:50.084 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.085 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:50,078;177;28,974044799804688
2022-12-05 10:12:50.087 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:50,078;177;28,974044799804688 stored.
2022-12-05 10:12:50.088 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.142 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:50
2022-12-05 10:12:50.143 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:50.144 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:50.158 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:50)
2022-12-05 10:12:50.160 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 35,05%. is added to queue
2022-12-05 10:12:50.162 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:50.1584673+01:00" stamp is good.
2022-12-05 10:12:50.163 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:50.165 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.166 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:50,158;178;35,05494689941406
2022-12-05 10:12:50.167 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:50,158;178;35,05494689941406 stored.
2022-12-05 10:12:50.169 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.174 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:50
2022-12-05 10:12:50.177 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:50.179 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:50.190 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:50)
2022-12-05 10:12:50.193 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 2,67%. is added to queue
2022-12-05 10:12:50.195 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:50.1903962+01:00" stamp is good.
2022-12-05 10:12:50.196 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:50.197 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.198 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:50,190;179;2,6719954013824463
2022-12-05 10:12:50.199 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:50,190;179;2,6719954013824463 stored.
2022-12-05 10:12:50.201 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.254 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:50
2022-12-05 10:12:50.256 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:50.257 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:50.270 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:50)
2022-12-05 10:12:50.272 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,61%. is added to queue
2022-12-05 10:12:50.274 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:50.2703123+01:00" stamp is good.
2022-12-05 10:12:50.275 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:50.276 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.277 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:50,270;180;18,61441993713379
2022-12-05 10:12:50.278 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:50,270;180;18,61441993713379 stored.
2022-12-05 10:12:50.279 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.286 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:50
2022-12-05 10:12:50.288 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:50.290 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:50.302 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:50)
2022-12-05 10:12:50.304 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,21%. is added to queue
2022-12-05 10:12:50.307 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:50.3023628+01:00" stamp is good.
2022-12-05 10:12:50.308 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:50.310 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.311 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:50,302;181;11,210517883300781
2022-12-05 10:12:50.312 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:50,302;181;11,210517883300781 stored.
2022-12-05 10:12:50.314 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.366 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:50
2022-12-05 10:12:50.367 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:50.369 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:50.382 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:50)
2022-12-05 10:12:50.384 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,84%. is added to queue
2022-12-05 10:12:50.386 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:50.3823302+01:00" stamp is good.
2022-12-05 10:12:50.387 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:50.389 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.390 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:50,382;182;18,837785720825195
2022-12-05 10:12:50.392 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:50,382;182;18,837785720825195 stored.
2022-12-05 10:12:50.393 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.398 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:50
2022-12-05 10:12:50.400 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:50.402 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:50.414 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:50)
2022-12-05 10:12:50.416 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,51%. is added to queue
2022-12-05 10:12:50.419 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:50.4144191+01:00" stamp is good.
2022-12-05 10:12:50.420 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:50.422 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.423 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:50,414;183;11,506606101989746
2022-12-05 10:12:50.425 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:50,414;183;11,506606101989746 stored.
2022-12-05 10:12:50.426 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.471 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:50
2022-12-05 10:12:50.472 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:50.474 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:50.488 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:50)
2022-12-05 10:12:50.490 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:50.492 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:50.4880211+01:00" stamp is good.
2022-12-05 10:12:50.493 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:50.494 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.495 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:50,488;184;37,495758056640625
2022-12-05 10:12:50.496 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:50,488;184;37,495758056640625 stored.
2022-12-05 10:12:50.498 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.503 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:50
2022-12-05 10:12:50.506 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:50.507 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:50.519 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:50)
2022-12-05 10:12:50.521 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50%. is added to queue
2022-12-05 10:12:50.522 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:50.5191657+01:00" stamp is good.
2022-12-05 10:12:50.524 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:50.525 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.526 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:50,519;185;50,00352096557617
2022-12-05 10:12:50.528 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:50,519;185;50,00352096557617 stored.
2022-12-05 10:12:50.529 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.581 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:50
2022-12-05 10:12:50.583 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:50.584 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:50.597 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:50)
2022-12-05 10:12:50.601 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 12,27%. is added to queue
2022-12-05 10:12:50.603 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:50.5973375+01:00" stamp is good.
2022-12-05 10:12:50.604 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:50.606 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.607 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:50,597;186;12,271324157714844
2022-12-05 10:12:50.608 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:50,597;186;12,271324157714844 stored.
2022-12-05 10:12:50.610 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.612 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:50
2022-12-05 10:12:50.615 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:50.618 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:50.628 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:50)
2022-12-05 10:12:50.631 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 61,57%. is added to queue
2022-12-05 10:12:50.634 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:50.6284585+01:00" stamp is good.
2022-12-05 10:12:50.636 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:50.637 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.638 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:50,628;187;61,5673713684082
2022-12-05 10:12:50.640 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:50,628;187;61,5673713684082 stored.
2022-12-05 10:12:50.642 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.687 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:50
2022-12-05 10:12:50.689 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:50.690 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:50.703 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:50)
2022-12-05 10:12:50.706 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,63%. is added to queue
2022-12-05 10:12:50.707 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:50.7035555+01:00" stamp is good.
2022-12-05 10:12:50.709 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:50.710 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.711 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:50,703;188;37,629093170166016
2022-12-05 10:12:50.712 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:50,703;188;37,629093170166016 stored.
2022-12-05 10:12:50.714 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.719 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:50
2022-12-05 10:12:50.721 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:50.722 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:50.735 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:50)
2022-12-05 10:12:50.737 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 75,33%. is added to queue
2022-12-05 10:12:50.739 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:50.7351660+01:00" stamp is good.
2022-12-05 10:12:50.740 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:50.742 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.743 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:50,735;189;75,32951354980469
2022-12-05 10:12:50.744 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:50,735;189;75,32951354980469 stored.
2022-12-05 10:12:50.746 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.776 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/10.10.10.10  
2022-12-05 10:12:50.777 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:50.779 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:50.781 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:12:50.782 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 100 
2022-12-05 10:12:50.783 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:12:50.785 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 4.1622ms
2022-12-05 10:12:50.787 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:50.790 +01:00 [INF] Request finished in 13.6819ms 200 application/json; charset=utf-8
2022-12-05 10:12:50.795 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/20.20.20.20  
2022-12-05 10:12:50.796 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:50.796 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:50
2022-12-05 10:12:50.801 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:50.802 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:50.804 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 20.20.20.20
2022-12-05 10:12:50.805 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:50.806 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 4000 
2022-12-05 10:12:50.809 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:12:50.810 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 5.785ms
2022-12-05 10:12:50.812 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:50.813 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:50)
2022-12-05 10:12:50.816 +01:00 [INF] Request finished in 20.8857ms 200 application/json; charset=utf-8
2022-12-05 10:12:50.817 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 0%. is added to queue
2022-12-05 10:12:50.819 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:50.8130705+01:00" stamp is good.
2022-12-05 10:12:50.820 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/30.30.30.30  
2022-12-05 10:12:50.820 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:50.821 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:50.822 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.823 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:50.824 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:50,813;190;0
2022-12-05 10:12:50.826 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:12:50.827 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:50,813;190;0 stored.
2022-12-05 10:12:50.828 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 3000 
2022-12-05 10:12:50.828 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:50
2022-12-05 10:12:50.832 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.832 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:12:50.834 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:50.836 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 10.088ms
2022-12-05 10:12:50.837 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:50.839 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:50.841 +01:00 [INF] Request finished in 20.7224ms 200 application/json; charset=utf-8
2022-12-05 10:12:50.845 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:50)
2022-12-05 10:12:50.848 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 0%. is added to queue
2022-12-05 10:12:50.850 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:50.8450459+01:00" stamp is good.
2022-12-05 10:12:50.851 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:50.852 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.853 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:50,845;191;0
2022-12-05 10:12:50.855 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:50,845;191;0 stored.
2022-12-05 10:12:50.857 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.920 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:50
2022-12-05 10:12:50.922 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:50.923 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:50.937 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:50)
2022-12-05 10:12:50.939 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,6%. is added to queue
2022-12-05 10:12:50.940 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:50.9369968+01:00" stamp is good.
2022-12-05 10:12:50.941 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:50.942 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.943 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:50,936;192;18,59829330444336
2022-12-05 10:12:50.945 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:50,936;192;18,59829330444336 stored.
2022-12-05 10:12:50.946 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.951 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:50
2022-12-05 10:12:50.954 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:50.955 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:50.967 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:50)
2022-12-05 10:12:50.969 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 41,42%. is added to queue
2022-12-05 10:12:50.970 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:50.9670108+01:00" stamp is good.
2022-12-05 10:12:50.972 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:50.973 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:50.975 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:50,967;193;41,41695785522461
2022-12-05 10:12:50.977 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:50,967;193;41,41695785522461 stored.
2022-12-05 10:12:50.978 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.037 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:51
2022-12-05 10:12:51.038 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:51.040 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:51.052 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:51)
2022-12-05 10:12:51.055 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,36%. is added to queue
2022-12-05 10:12:51.057 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:51.0528633+01:00" stamp is good.
2022-12-05 10:12:51.058 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:51.059 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.060 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:51,052;194;37,35799789428711
2022-12-05 10:12:51.062 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:51,052;194;37,35799789428711 stored.
2022-12-05 10:12:51.063 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.068 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:51
2022-12-05 10:12:51.071 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:51.072 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:51.084 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:51)
2022-12-05 10:12:51.086 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:51.087 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:51.0841716+01:00" stamp is good.
2022-12-05 10:12:51.090 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:51.092 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.093 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:51,084;195;37,502159118652344
2022-12-05 10:12:51.095 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:51,084;195;37,502159118652344 stored.
2022-12-05 10:12:51.096 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.146 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:51
2022-12-05 10:12:51.148 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:51.149 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:51.162 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:51)
2022-12-05 10:12:51.164 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:51.167 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:51.1623211+01:00" stamp is good.
2022-12-05 10:12:51.168 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:51.170 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.171 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:51,162;196;37,499759674072266
2022-12-05 10:12:51.172 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:51,162;196;37,499759674072266 stored.
2022-12-05 10:12:51.174 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.177 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:51
2022-12-05 10:12:51.180 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:51.182 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:51.193 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:51)
2022-12-05 10:12:51.195 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50%. is added to queue
2022-12-05 10:12:51.197 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:51.1936802+01:00" stamp is good.
2022-12-05 10:12:51.198 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:51.199 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.200 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:51,193;197;50
2022-12-05 10:12:51.202 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:51,193;197;50 stored.
2022-12-05 10:12:51.203 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.255 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:51
2022-12-05 10:12:51.257 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:51.258 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:51.271 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:51)
2022-12-05 10:12:51.273 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50,11%. is added to queue
2022-12-05 10:12:51.275 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:51.2717531+01:00" stamp is good.
2022-12-05 10:12:51.277 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:51.278 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.279 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:51,271;198;50,1063346862793
2022-12-05 10:12:51.281 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:51,271;198;50,1063346862793 stored.
2022-12-05 10:12:51.282 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.287 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:51
2022-12-05 10:12:51.290 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:51.291 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:51.302 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:51)
2022-12-05 10:12:51.305 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50%. is added to queue
2022-12-05 10:12:51.307 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:51.3029186+01:00" stamp is good.
2022-12-05 10:12:51.309 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:51.310 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.311 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:51,302;199;50,0015983581543
2022-12-05 10:12:51.313 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:51,302;199;50,0015983581543 stored.
2022-12-05 10:12:51.314 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.318 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 12:51
2022-12-05 10:12:51.321 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:12:51.322 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:12:51.334 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:12:51)
2022-12-05 10:12:51.336 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 21,85%. is added to queue
2022-12-05 10:12:51.338 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:51.3343582+01:00" stamp is good.
2022-12-05 10:12:51.339 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:12:51.340 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.341 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 20.20.20.20;2022-12-05 10:12:51,334;13;21,85468292236328
2022-12-05 10:12:51.342 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:12:51,334;13;21,85468292236328 stored.
2022-12-05 10:12:51.343 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.366 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:51
2022-12-05 10:12:51.367 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:51.369 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:51.381 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:51)
2022-12-05 10:12:51.383 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,22%. is added to queue
2022-12-05 10:12:51.385 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:51.3813508+01:00" stamp is good.
2022-12-05 10:12:51.387 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:51.388 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.389 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:51,381;200;11,217782974243164
2022-12-05 10:12:51.391 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:51,381;200;11,217782974243164 stored.
2022-12-05 10:12:51.393 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.396 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:51
2022-12-05 10:12:51.398 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:51.400 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:51.412 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:51)
2022-12-05 10:12:51.415 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,44%. is added to queue
2022-12-05 10:12:51.416 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:51.4123959+01:00" stamp is good.
2022-12-05 10:12:51.417 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:51.419 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.420 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:51,412;201;11,444816589355469
2022-12-05 10:12:51.421 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:51,412;201;11,444816589355469 stored.
2022-12-05 10:12:51.423 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.476 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:51
2022-12-05 10:12:51.477 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:51.478 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:51.492 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:51)
2022-12-05 10:12:51.494 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 24,88%. is added to queue
2022-12-05 10:12:51.495 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:51.4922883+01:00" stamp is good.
2022-12-05 10:12:51.497 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:51.498 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.499 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:51,492;202;24,880964279174805
2022-12-05 10:12:51.501 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:51,492;202;24,880964279174805 stored.
2022-12-05 10:12:51.502 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.508 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:51
2022-12-05 10:12:51.511 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:51.512 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:51.524 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:51)
2022-12-05 10:12:51.527 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,51%. is added to queue
2022-12-05 10:12:51.529 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:51.5244778+01:00" stamp is good.
2022-12-05 10:12:51.531 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:51.532 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.533 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:51,524;203;11,506606101989746
2022-12-05 10:12:51.535 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:51,524;203;11,506606101989746 stored.
2022-12-05 10:12:51.536 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.588 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:51
2022-12-05 10:12:51.590 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:51.591 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:51.620 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:51
2022-12-05 10:12:51.620 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:51)
2022-12-05 10:12:51.621 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:51.623 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 51,17%. is added to queue
2022-12-05 10:12:51.626 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:51.627 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:51.6203515+01:00" stamp is good.
2022-12-05 10:12:51.631 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:51.632 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.633 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:51,620;204;51,172142028808594
2022-12-05 10:12:51.635 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:51,620;204;51,172142028808594 stored.
2022-12-05 10:12:51.638 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.652 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:51)
2022-12-05 10:12:51.654 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 49,04%. is added to queue
2022-12-05 10:12:51.657 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:51.6524086+01:00" stamp is good.
2022-12-05 10:12:51.658 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:51.659 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.660 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:51,652;205;49,039833068847656
2022-12-05 10:12:51.662 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:51,652;205;49,039833068847656 stored.
2022-12-05 10:12:51.663 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.700 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:51
2022-12-05 10:12:51.701 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:51.703 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:51.732 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:51
2022-12-05 10:12:51.732 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:51)
2022-12-05 10:12:51.734 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:51.735 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 72,1%. is added to queue
2022-12-05 10:12:51.737 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:51.739 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:51.7324733+01:00" stamp is good.
2022-12-05 10:12:51.741 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:51.743 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.744 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:51,732;206;72,09811401367188
2022-12-05 10:12:51.745 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:51,732;206;72,09811401367188 stored.
2022-12-05 10:12:51.747 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.748 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:51)
2022-12-05 10:12:51.752 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 0%. is added to queue
2022-12-05 10:12:51.754 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:51.7484104+01:00" stamp is good.
2022-12-05 10:12:51.755 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:51.756 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.758 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:51,748;207;0
2022-12-05 10:12:51.759 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:51,748;207;0 stored.
2022-12-05 10:12:51.760 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.810 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:51
2022-12-05 10:12:51.811 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:51.812 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:51.826 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:51)
2022-12-05 10:12:51.828 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 0%. is added to queue
2022-12-05 10:12:51.830 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:51.8263291+01:00" stamp is good.
2022-12-05 10:12:51.831 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:51.832 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.833 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:51,826;208;0
2022-12-05 10:12:51.835 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:51,826;208;0 stored.
2022-12-05 10:12:51.836 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.842 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:51
2022-12-05 10:12:51.845 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:51.846 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:51.858 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:51)
2022-12-05 10:12:51.861 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 2,35%. is added to queue
2022-12-05 10:12:51.862 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:51.8584905+01:00" stamp is good.
2022-12-05 10:12:51.863 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:51.865 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.866 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:51,858;209;2,3518118858337402
2022-12-05 10:12:51.867 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:51,858;209;2,3518118858337402 stored.
2022-12-05 10:12:51.868 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.922 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:51
2022-12-05 10:12:51.923 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:51.924 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:51.938 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:51)
2022-12-05 10:12:51.940 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 24,95%. is added to queue
2022-12-05 10:12:51.942 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:51.9385533+01:00" stamp is good.
2022-12-05 10:12:51.943 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:51.944 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.945 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:51,938;210;24,952547073364258
2022-12-05 10:12:51.947 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:51,938;210;24,952547073364258 stored.
2022-12-05 10:12:51.948 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.954 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:51
2022-12-05 10:12:51.957 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:51.958 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:51.970 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:51)
2022-12-05 10:12:51.973 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,22%. is added to queue
2022-12-05 10:12:51.975 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:51.9704445+01:00" stamp is good.
2022-12-05 10:12:51.976 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:51.978 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:51.979 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:51,970;211;11,216975212097168
2022-12-05 10:12:51.980 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:51,970;211;11,216975212097168 stored.
2022-12-05 10:12:51.981 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.033 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:52
2022-12-05 10:12:52.034 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:52.036 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:52.049 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:52)
2022-12-05 10:12:52.051 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,62%. is added to queue
2022-12-05 10:12:52.052 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:52.0493437+01:00" stamp is good.
2022-12-05 10:12:52.053 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:52.054 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.056 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:52,049;212;18,622034072875977
2022-12-05 10:12:52.058 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:52,049;212;18,622034072875977 stored.
2022-12-05 10:12:52.060 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.064 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:52
2022-12-05 10:12:52.067 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:52.068 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:52.080 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:52)
2022-12-05 10:12:52.082 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 46,89%. is added to queue
2022-12-05 10:12:52.084 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:52.0805027+01:00" stamp is good.
2022-12-05 10:12:52.086 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:52.088 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.090 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:52,080;213;46,89344024658203
2022-12-05 10:12:52.092 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:52,080;213;46,89344024658203 stored.
2022-12-05 10:12:52.094 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.144 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:52
2022-12-05 10:12:52.146 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:52.148 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:52.160 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:52)
2022-12-05 10:12:52.164 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,49%. is added to queue
2022-12-05 10:12:52.165 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:52.1604814+01:00" stamp is good.
2022-12-05 10:12:52.166 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:52.168 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.169 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:52,160;214;11,488158226013184
2022-12-05 10:12:52.171 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:52,160;214;11,488158226013184 stored.
2022-12-05 10:12:52.172 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.176 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:52
2022-12-05 10:12:52.179 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:52.180 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:52.192 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:52)
2022-12-05 10:12:52.194 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,23%. is added to queue
2022-12-05 10:12:52.196 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:52.1925819+01:00" stamp is good.
2022-12-05 10:12:52.198 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:52.199 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.200 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:52,192;215;11,225046157836914
2022-12-05 10:12:52.202 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:52,192;215;11,225046157836914 stored.
2022-12-05 10:12:52.203 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.256 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:52
2022-12-05 10:12:52.258 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:52.259 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:52.272 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:52)
2022-12-05 10:12:52.274 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,64%. is added to queue
2022-12-05 10:12:52.276 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:52.2723729+01:00" stamp is good.
2022-12-05 10:12:52.277 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:52.279 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.280 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:52,272;216;18,636951446533203
2022-12-05 10:12:52.281 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:52,272;216;18,636951446533203 stored.
2022-12-05 10:12:52.283 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.288 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:52
2022-12-05 10:12:52.295 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:52.296 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:52.320 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 12:52
2022-12-05 10:12:52.320 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:52)
2022-12-05 10:12:52.322 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:12:52.323 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 55,61%. is added to queue
2022-12-05 10:12:52.324 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:12:52.325 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:52.3204001+01:00" stamp is good.
2022-12-05 10:12:52.327 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:52.328 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.329 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:52,320;217;55,607025146484375
2022-12-05 10:12:52.330 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:52,320;217;55,607025146484375 stored.
2022-12-05 10:12:52.332 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.352 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:12:52)
2022-12-05 10:12:52.354 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 62,43%. is added to queue
2022-12-05 10:12:52.355 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:52.3523311+01:00" stamp is good.
2022-12-05 10:12:52.357 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:12:52.358 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.359 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 30.30.30.30;2022-12-05 10:12:52,352;18;62,432918548583984
2022-12-05 10:12:52.360 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:12:52,352;18;62,432918548583984 stored.
2022-12-05 10:12:52.362 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.368 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:52
2022-12-05 10:12:52.371 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:52.372 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:52.400 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:52
2022-12-05 10:12:52.400 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:52)
2022-12-05 10:12:52.401 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:52.402 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 78,3%. is added to queue
2022-12-05 10:12:52.403 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:52.405 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:52.4004100+01:00" stamp is good.
2022-12-05 10:12:52.407 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:52.408 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.409 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:52,400;218;78,29594421386719
2022-12-05 10:12:52.410 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:52,400;218;78,29594421386719 stored.
2022-12-05 10:12:52.412 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.431 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:52)
2022-12-05 10:12:52.432 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 68,75%. is added to queue
2022-12-05 10:12:52.434 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:52.4313270+01:00" stamp is good.
2022-12-05 10:12:52.435 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:52.436 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.437 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:52,431;219;68,74825286865234
2022-12-05 10:12:52.438 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:52,431;219;68,74825286865234 stored.
2022-12-05 10:12:52.440 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.478 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:52
2022-12-05 10:12:52.479 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:52.480 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:52.494 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:52)
2022-12-05 10:12:52.496 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 34,9%. is added to queue
2022-12-05 10:12:52.498 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:52.4943993+01:00" stamp is good.
2022-12-05 10:12:52.499 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:52.500 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.501 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:52,494;220;34,9012565612793
2022-12-05 10:12:52.503 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:52,494;220;34,9012565612793 stored.
2022-12-05 10:12:52.505 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.510 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:52
2022-12-05 10:12:52.512 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:52.514 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:52.542 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:52)
2022-12-05 10:12:52.544 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 63,88%. is added to queue
2022-12-05 10:12:52.546 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:52.5424621+01:00" stamp is good.
2022-12-05 10:12:52.548 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:52.549 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.550 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:52,542;221;63,87767028808594
2022-12-05 10:12:52.552 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:52,542;221;63,87767028808594 stored.
2022-12-05 10:12:52.553 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.589 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:52
2022-12-05 10:12:52.590 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:52.591 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:52.620 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:52
2022-12-05 10:12:52.620 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:52)
2022-12-05 10:12:52.621 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:52.623 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 56,6%. is added to queue
2022-12-05 10:12:52.624 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:52.626 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:52.6203952+01:00" stamp is good.
2022-12-05 10:12:52.628 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:52.629 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.630 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:52,620;222;56,596553802490234
2022-12-05 10:12:52.632 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:52,620;222;56,596553802490234 stored.
2022-12-05 10:12:52.633 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.650 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:52)
2022-12-05 10:12:52.652 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 57,54%. is added to queue
2022-12-05 10:12:52.653 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:52.6504409+01:00" stamp is good.
2022-12-05 10:12:52.655 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:52.657 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.659 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:52,650;223;57,53883743286133
2022-12-05 10:12:52.660 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:52,650;223;57,53883743286133 stored.
2022-12-05 10:12:52.662 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.696 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:52
2022-12-05 10:12:52.697 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:52.699 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:52.712 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:52)
2022-12-05 10:12:52.714 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,62%. is added to queue
2022-12-05 10:12:52.716 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:52.7124059+01:00" stamp is good.
2022-12-05 10:12:52.717 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:52.718 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.719 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:52,712;224;18,619321823120117
2022-12-05 10:12:52.720 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:52,712;224;18,619321823120117 stored.
2022-12-05 10:12:52.722 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.728 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:52
2022-12-05 10:12:52.731 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:52.732 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:52.760 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:52)
2022-12-05 10:12:52.761 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 49,36%. is added to queue
2022-12-05 10:12:52.763 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:52.7603262+01:00" stamp is good.
2022-12-05 10:12:52.764 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:52.765 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.766 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:52,760;225;49,36033248901367
2022-12-05 10:12:52.767 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:52,760;225;49,36033248901367 stored.
2022-12-05 10:12:52.768 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.807 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:52
2022-12-05 10:12:52.808 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:52.810 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:52.838 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:52
2022-12-05 10:12:52.838 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:52)
2022-12-05 10:12:52.840 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:52.843 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 49,36%. is added to queue
2022-12-05 10:12:52.844 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:52.846 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:52.8384558+01:00" stamp is good.
2022-12-05 10:12:52.848 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:52.850 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.851 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:52,838;226;49,36333465576172
2022-12-05 10:12:52.852 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:52,838;226;49,36333465576172 stored.
2022-12-05 10:12:52.857 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.870 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:52)
2022-12-05 10:12:52.872 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 74,52%. is added to queue
2022-12-05 10:12:52.876 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:52.8704102+01:00" stamp is good.
2022-12-05 10:12:52.877 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:52.879 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.880 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:52,870;227;74,52146911621094
2022-12-05 10:12:52.881 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:52,870;227;74,52146911621094 stored.
2022-12-05 10:12:52.883 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.918 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:52
2022-12-05 10:12:52.919 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:52.920 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:52.950 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:52
2022-12-05 10:12:52.950 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:52)
2022-12-05 10:12:52.951 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:52.953 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 65,16%. is added to queue
2022-12-05 10:12:52.955 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:52.956 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:52.9504693+01:00" stamp is good.
2022-12-05 10:12:52.959 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:52.960 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.961 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:52,950;228;65,16441345214844
2022-12-05 10:12:52.963 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:52,950;228;65,16441345214844 stored.
2022-12-05 10:12:52.964 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.982 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:52)
2022-12-05 10:12:52.984 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 68,8%. is added to queue
2022-12-05 10:12:52.986 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:52.9824157+01:00" stamp is good.
2022-12-05 10:12:52.987 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:52.988 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:52.989 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:52,982;229;68,79692840576172
2022-12-05 10:12:52.991 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:52,982;229;68,79692840576172 stored.
2022-12-05 10:12:52.992 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.029 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:53
2022-12-05 10:12:53.030 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:53.031 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:53.060 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:53
2022-12-05 10:12:53.060 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:53)
2022-12-05 10:12:53.061 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:53.062 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 51,17%. is added to queue
2022-12-05 10:12:53.063 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:53.064 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:53.0603187+01:00" stamp is good.
2022-12-05 10:12:53.067 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:53.068 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.069 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:53,060;230;51,17143630981445
2022-12-05 10:12:53.071 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:53,060;230;51,17143630981445 stored.
2022-12-05 10:12:53.072 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.076 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:53)
2022-12-05 10:12:53.078 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 2,23%. is added to queue
2022-12-05 10:12:53.080 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:53.0762835+01:00" stamp is good.
2022-12-05 10:12:53.081 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:53.082 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.083 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:53,076;231;2,226649761199951
2022-12-05 10:12:53.084 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:53,076;231;2,226649761199951 stored.
2022-12-05 10:12:53.085 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.138 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:53
2022-12-05 10:12:53.141 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:53.142 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:53.154 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:53)
2022-12-05 10:12:53.156 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 0%. is added to queue
2022-12-05 10:12:53.158 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:53.1544352+01:00" stamp is good.
2022-12-05 10:12:53.160 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:53.161 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.162 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:53,154;232;0
2022-12-05 10:12:53.163 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:53,154;232;0 stored.
2022-12-05 10:12:53.164 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.170 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:53
2022-12-05 10:12:53.173 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:53.174 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:53.186 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:53)
2022-12-05 10:12:53.189 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 46,74%. is added to queue
2022-12-05 10:12:53.191 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:53.1863853+01:00" stamp is good.
2022-12-05 10:12:53.193 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:53.195 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.196 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:53,186;233;46,737510681152344
2022-12-05 10:12:53.198 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:53,186;233;46,737510681152344 stored.
2022-12-05 10:12:53.200 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.250 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:53
2022-12-05 10:12:53.252 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:53.253 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:53.266 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:53)
2022-12-05 10:12:53.268 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,62%. is added to queue
2022-12-05 10:12:53.271 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:53.2664052+01:00" stamp is good.
2022-12-05 10:12:53.272 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:53.273 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.274 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:53,266;234;18,617286682128906
2022-12-05 10:12:53.275 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:53,266;234;18,617286682128906 stored.
2022-12-05 10:12:53.276 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.282 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:53
2022-12-05 10:12:53.285 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:53.286 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:53.298 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:53)
2022-12-05 10:12:53.300 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,47%. is added to queue
2022-12-05 10:12:53.303 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:53.2983576+01:00" stamp is good.
2022-12-05 10:12:53.304 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:53.306 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.307 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:53,298;235;11,466492652893066
2022-12-05 10:12:53.309 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:53,298;235;11,466492652893066 stored.
2022-12-05 10:12:53.311 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.362 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:53
2022-12-05 10:12:53.363 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:53.364 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:53.378 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:53)
2022-12-05 10:12:53.380 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 55,05%. is added to queue
2022-12-05 10:12:53.382 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:53.3784331+01:00" stamp is good.
2022-12-05 10:12:53.383 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:53.385 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.386 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:53,378;236;55,04664611816406
2022-12-05 10:12:53.387 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:53,378;236;55,04664611816406 stored.
2022-12-05 10:12:53.389 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.394 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:53
2022-12-05 10:12:53.397 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:53.398 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:53.410 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:53)
2022-12-05 10:12:53.412 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,22%. is added to queue
2022-12-05 10:12:53.415 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:53.4103493+01:00" stamp is good.
2022-12-05 10:12:53.416 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:53.418 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.419 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:53,410;237;11,2210111618042
2022-12-05 10:12:53.420 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:53,410;237;11,2210111618042 stored.
2022-12-05 10:12:53.422 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.474 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:53
2022-12-05 10:12:53.475 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:53.477 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:53.490 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:53)
2022-12-05 10:12:53.492 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,62%. is added to queue
2022-12-05 10:12:53.494 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:53.4903065+01:00" stamp is good.
2022-12-05 10:12:53.495 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:53.496 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.497 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:53,490;238;18,6200008392334
2022-12-05 10:12:53.499 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:53,490;238;18,6200008392334 stored.
2022-12-05 10:12:53.500 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.505 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:53
2022-12-05 10:12:53.508 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:53.509 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:53.520 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:53)
2022-12-05 10:12:53.528 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 2,34%. is added to queue
2022-12-05 10:12:53.530 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:53.5203512+01:00" stamp is good.
2022-12-05 10:12:53.531 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:53.532 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.533 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:53,520;239;2,3429999351501465
2022-12-05 10:12:53.535 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:53,520;239;2,3429999351501465 stored.
2022-12-05 10:12:53.538 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.584 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:53
2022-12-05 10:12:53.585 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:53.587 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:53.599 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:53)
2022-12-05 10:12:53.601 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 28,98%. is added to queue
2022-12-05 10:12:53.603 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:53.5992885+01:00" stamp is good.
2022-12-05 10:12:53.605 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:53.606 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.607 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:53,599;240;28,979209899902344
2022-12-05 10:12:53.609 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:53,599;240;28,979209899902344 stored.
2022-12-05 10:12:53.610 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.615 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:53
2022-12-05 10:12:53.618 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:53.619 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:53.630 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:53)
2022-12-05 10:12:53.632 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 60,94%. is added to queue
2022-12-05 10:12:53.634 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:53.6304175+01:00" stamp is good.
2022-12-05 10:12:53.635 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:53.636 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.637 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:53,630;241;60,94268798828125
2022-12-05 10:12:53.639 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:53,630;241;60,94268798828125 stored.
2022-12-05 10:12:53.640 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.692 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:53
2022-12-05 10:12:53.693 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:53.694 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:53.708 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:53)
2022-12-05 10:12:53.710 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,62%. is added to queue
2022-12-05 10:12:53.711 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:53.7082662+01:00" stamp is good.
2022-12-05 10:12:53.712 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:53.713 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.714 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:53,708;242;18,619321823120117
2022-12-05 10:12:53.715 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:53,708;242;18,619321823120117 stored.
2022-12-05 10:12:53.716 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.724 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:53
2022-12-05 10:12:53.727 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:53.728 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:53.740 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:53)
2022-12-05 10:12:53.742 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,22%. is added to queue
2022-12-05 10:12:53.744 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:53.7404531+01:00" stamp is good.
2022-12-05 10:12:53.745 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:53.746 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.747 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:53,740;243;11,22252368927002
2022-12-05 10:12:53.748 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:53,740;243;11,22252368927002 stored.
2022-12-05 10:12:53.749 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.804 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:53
2022-12-05 10:12:53.805 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:53.806 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:53.820 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:53)
2022-12-05 10:12:53.822 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 24,87%. is added to queue
2022-12-05 10:12:53.825 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:53.8202864+01:00" stamp is good.
2022-12-05 10:12:53.826 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:53.828 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.829 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:53,820;244;24,87364387512207
2022-12-05 10:12:53.830 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:53,820;244;24,87364387512207 stored.
2022-12-05 10:12:53.832 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.836 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:53
2022-12-05 10:12:53.839 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:53.840 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:53.842 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:53)
2022-12-05 10:12:53.843 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 0%. is added to queue
2022-12-05 10:12:53.844 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:53.8422352+01:00" stamp is good.
2022-12-05 10:12:53.845 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:53.846 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.847 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:53,842;245;0
2022-12-05 10:12:53.848 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:53,842;245;0 stored.
2022-12-05 10:12:53.850 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.916 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:53
2022-12-05 10:12:53.917 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:53.919 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:53.948 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:53
2022-12-05 10:12:53.948 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:53)
2022-12-05 10:12:53.949 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:53.951 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 51,17%. is added to queue
2022-12-05 10:12:53.952 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:53.953 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:53.9484871+01:00" stamp is good.
2022-12-05 10:12:53.956 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:53.957 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.958 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:53,948;246;51,17143630981445
2022-12-05 10:12:53.960 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:53,948;246;51,17143630981445 stored.
2022-12-05 10:12:53.961 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.978 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:53)
2022-12-05 10:12:53.979 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 57,54%. is added to queue
2022-12-05 10:12:53.981 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:53.9783214+01:00" stamp is good.
2022-12-05 10:12:53.983 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:53.984 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:53.985 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:53,978;247;57,54197692871094
2022-12-05 10:12:53.986 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:53,978;247;57,54197692871094 stored.
2022-12-05 10:12:53.988 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.026 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:54
2022-12-05 10:12:54.029 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:54.030 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:54.058 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:54
2022-12-05 10:12:54.058 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:54)
2022-12-05 10:12:54.060 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:54.061 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 54,93%. is added to queue
2022-12-05 10:12:54.063 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:54.065 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:54.0585069+01:00" stamp is good.
2022-12-05 10:12:54.067 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:54.069 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.070 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:54,058;248;54,92547607421875
2022-12-05 10:12:54.071 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:54,058;248;54,92547607421875 stored.
2022-12-05 10:12:54.073 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.090 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:54)
2022-12-05 10:12:54.092 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 59,31%. is added to queue
2022-12-05 10:12:54.094 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:54.0903758+01:00" stamp is good.
2022-12-05 10:12:54.095 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:54.096 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.097 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:54,090;249;59,305084228515625
2022-12-05 10:12:54.099 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:54,090;249;59,305084228515625 stored.
2022-12-05 10:12:54.100 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.138 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:54
2022-12-05 10:12:54.139 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:54.141 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:54.169 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:54
2022-12-05 10:12:54.169 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:54)
2022-12-05 10:12:54.170 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:54.171 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 56,6%. is added to queue
2022-12-05 10:12:54.172 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:54.174 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:54.1693106+01:00" stamp is good.
2022-12-05 10:12:54.176 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:54.177 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.177 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:54,169;250;56,59751892089844
2022-12-05 10:12:54.179 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:54,169;250;56,59751892089844 stored.
2022-12-05 10:12:54.180 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.200 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:54)
2022-12-05 10:12:54.201 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 60,93%. is added to queue
2022-12-05 10:12:54.203 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:54.2003049+01:00" stamp is good.
2022-12-05 10:12:54.204 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:54.206 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.207 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:54,200;251;60,93431854248047
2022-12-05 10:12:54.208 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:54,200;251;60,93431854248047 stored.
2022-12-05 10:12:54.210 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.246 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:54
2022-12-05 10:12:54.247 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:54.248 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:54.276 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:54
2022-12-05 10:12:54.276 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:54)
2022-12-05 10:12:54.277 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:54.279 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 47,42%. is added to queue
2022-12-05 10:12:54.280 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:54.281 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:54.2764843+01:00" stamp is good.
2022-12-05 10:12:54.283 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:54.284 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.285 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:54,276;252;47,41536331176758
2022-12-05 10:12:54.286 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:54,276;252;47,41536331176758 stored.
2022-12-05 10:12:54.287 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.307 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:54)
2022-12-05 10:12:54.308 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 60,94%. is added to queue
2022-12-05 10:12:54.309 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:54.3074304+01:00" stamp is good.
2022-12-05 10:12:54.310 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:54.311 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.314 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:54,307;253;60,936038970947266
2022-12-05 10:12:54.316 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:54,307;253;60,936038970947266 stored.
2022-12-05 10:12:54.317 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.369 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:54
2022-12-05 10:12:54.370 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:54.372 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:54.400 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:54
2022-12-05 10:12:54.400 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:54)
2022-12-05 10:12:54.402 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:54.403 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 56,66%. is added to queue
2022-12-05 10:12:54.406 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:54.408 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:54.4005619+01:00" stamp is good.
2022-12-05 10:12:54.410 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:54.412 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.413 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:54,400;254;56,65568161010742
2022-12-05 10:12:54.415 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:54,400;254;56,65568161010742 stored.
2022-12-05 10:12:54.418 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.432 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:54)
2022-12-05 10:12:54.435 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 57,52%. is added to queue
2022-12-05 10:12:54.436 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:54.4324499+01:00" stamp is good.
2022-12-05 10:12:54.437 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:54.439 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.440 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:54,432;255;57,52147674560547
2022-12-05 10:12:54.441 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:54,432;255;57,52147674560547 stored.
2022-12-05 10:12:54.443 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.480 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:54
2022-12-05 10:12:54.481 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:54.483 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:54.512 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:54
2022-12-05 10:12:54.512 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:54)
2022-12-05 10:12:54.513 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:54.515 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 44,2%. is added to queue
2022-12-05 10:12:54.516 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:54.517 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:54.5123866+01:00" stamp is good.
2022-12-05 10:12:54.519 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:54.520 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.521 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:54,512;256;44,19622802734375
2022-12-05 10:12:54.522 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:54,512;256;44,19622802734375 stored.
2022-12-05 10:12:54.523 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.544 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:54)
2022-12-05 10:12:54.545 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 62,44%. is added to queue
2022-12-05 10:12:54.546 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:54.5443206+01:00" stamp is good.
2022-12-05 10:12:54.547 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:54.548 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.549 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:54,544;257;62,4379768371582
2022-12-05 10:12:54.550 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:54,544;257;62,4379768371582 stored.
2022-12-05 10:12:54.551 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.592 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:54
2022-12-05 10:12:54.593 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:54.595 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:54.608 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:54)
2022-12-05 10:12:54.610 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,62%. is added to queue
2022-12-05 10:12:54.611 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:54.6083012+01:00" stamp is good.
2022-12-05 10:12:54.612 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:54.613 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.614 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:54,608;258;18,615097045898438
2022-12-05 10:12:54.615 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:54,608;258;18,615097045898438 stored.
2022-12-05 10:12:54.616 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.624 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:54
2022-12-05 10:12:54.626 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:54.627 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:54.640 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:54)
2022-12-05 10:12:54.642 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,62%. is added to queue
2022-12-05 10:12:54.644 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:54.6404625+01:00" stamp is good.
2022-12-05 10:12:54.645 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:54.646 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.647 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:54,640;259;18,622713088989258
2022-12-05 10:12:54.648 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:54,640;259;18,622713088989258 stored.
2022-12-05 10:12:54.649 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.704 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:54
2022-12-05 10:12:54.705 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:54.707 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:54.720 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:54)
2022-12-05 10:12:54.722 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 35,03%. is added to queue
2022-12-05 10:12:54.725 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:54.7203567+01:00" stamp is good.
2022-12-05 10:12:54.726 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:54.727 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.728 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:54,720;260;35,02848434448242
2022-12-05 10:12:54.730 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:54,720;260;35,02848434448242 stored.
2022-12-05 10:12:54.731 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.736 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:54
2022-12-05 10:12:54.739 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:54.741 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:54.752 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:54)
2022-12-05 10:12:54.754 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 21,87%. is added to queue
2022-12-05 10:12:54.757 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:54.7522901+01:00" stamp is good.
2022-12-05 10:12:54.758 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:54.760 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.761 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:54,752;261;21,86796760559082
2022-12-05 10:12:54.762 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:54,752;261;21,86796760559082 stored.
2022-12-05 10:12:54.764 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.818 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:54
2022-12-05 10:12:54.820 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:54.821 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:54.833 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:54)
2022-12-05 10:12:54.836 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 62,42%. is added to queue
2022-12-05 10:12:54.838 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:54.8339262+01:00" stamp is good.
2022-12-05 10:12:54.839 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:54.841 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.842 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:54,833;262;62,41637420654297
2022-12-05 10:12:54.843 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:54,833;262;62,41637420654297 stored.
2022-12-05 10:12:54.845 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.849 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:54
2022-12-05 10:12:54.852 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:54.853 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:54.865 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:54)
2022-12-05 10:12:54.867 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 64,6%. is added to queue
2022-12-05 10:12:54.869 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:54.8653599+01:00" stamp is good.
2022-12-05 10:12:54.870 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:54.871 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.872 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:54,865;263;64,59947967529297
2022-12-05 10:12:54.874 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:54,865;263;64,59947967529297 stored.
2022-12-05 10:12:54.876 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.927 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:54
2022-12-05 10:12:54.928 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:54.930 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:54.943 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:54)
2022-12-05 10:12:54.945 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,87%. is added to queue
2022-12-05 10:12:54.947 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:54.9432841+01:00" stamp is good.
2022-12-05 10:12:54.949 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:54.950 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.951 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:54,943;264;18,869476318359375
2022-12-05 10:12:54.952 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:54,943;264;18,869476318359375 stored.
2022-12-05 10:12:54.954 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.959 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:54
2022-12-05 10:12:54.961 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:54.962 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:54.974 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:54)
2022-12-05 10:12:54.976 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,32%. is added to queue
2022-12-05 10:12:54.978 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:54.9744016+01:00" stamp is good.
2022-12-05 10:12:54.980 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:54.981 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:54.982 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:54,974;265;11,316145896911621
2022-12-05 10:12:54.984 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:54,974;265;11,316145896911621 stored.
2022-12-05 10:12:54.985 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:55.037 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:55
2022-12-05 10:12:55.038 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:55.040 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:55.053 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:55)
2022-12-05 10:12:55.056 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,64%. is added to queue
2022-12-05 10:12:55.058 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:55.0539232+01:00" stamp is good.
2022-12-05 10:12:55.059 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:55.061 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:55.062 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:55,053;266;37,63825225830078
2022-12-05 10:12:55.063 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:55,053;266;37,63825225830078 stored.
2022-12-05 10:12:55.064 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:55.069 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:55
2022-12-05 10:12:55.072 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:55.074 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:55.085 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:55)
2022-12-05 10:12:55.087 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:55.089 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:55.0851832+01:00" stamp is good.
2022-12-05 10:12:55.090 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:55.091 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:55.093 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:55,085;267;37,495758056640625
2022-12-05 10:12:55.094 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:55,085;267;37,495758056640625 stored.
2022-12-05 10:12:55.096 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:55.148 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:55
2022-12-05 10:12:55.150 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:55.151 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:55.164 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:55)
2022-12-05 10:12:55.166 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 34,86%. is added to queue
2022-12-05 10:12:55.168 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:55.1645793+01:00" stamp is good.
2022-12-05 10:12:55.170 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:55.171 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:55.172 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:55,164;268;34,856204986572266
2022-12-05 10:12:55.173 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:55,164;268;34,856204986572266 stored.
2022-12-05 10:12:55.175 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:55.188 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:55
2022-12-05 10:12:55.191 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:55.192 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:55.204 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:55)
2022-12-05 10:12:55.206 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:55.208 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:55.2039903+01:00" stamp is good.
2022-12-05 10:12:55.210 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:55.211 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:55.213 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:55,203;269;37,49911880493164
2022-12-05 10:12:55.214 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:55,203;269;37,49911880493164 stored.
2022-12-05 10:12:55.216 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:55.218 +01:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/interval/10.10.10.10/ application/json; charset=utf-8 17
2022-12-05 10:12:55.221 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.SetMDInsterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:55.223 +01:00 [INF] Route matched with {action = "SetMDInsterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SetMDInsterval(System.String, DataModel.MDDataModel.MDIntervalData) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:55.226 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:12:55.227 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> Interval: DataModel.MDDataModel.MDIntervalData 
2022-12-05 10:12:55.228 +01:00 [INF] MeasureDevice 10.10.10.10 -> New intaerval set: 100
2022-12-05 10:12:55.230 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:12:55.231 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.SetMDInsterval (MeasureDeviceServiceAPIProject) in 5.8359ms
2022-12-05 10:12:55.233 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.SetMDInsterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:55.234 +01:00 [INF] Request finished in 16.6419ms 200 
2022-12-05 10:12:55.265 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/10.10.10.10  
2022-12-05 10:12:55.266 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:55.267 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:55.269 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:12:55.270 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 1000 
2022-12-05 10:12:55.271 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:12:55.271 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:55
2022-12-05 10:12:55.276 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 6.8163ms
2022-12-05 10:12:55.277 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:55.279 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:55.280 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:55.281 +01:00 [INF] Request finished in 15.7972ms 200 application/json; charset=utf-8
2022-12-05 10:12:55.286 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/20.20.20.20  
2022-12-05 10:12:55.287 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:55.291 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:55.294 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 20.20.20.20
2022-12-05 10:12:55.295 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 4000 
2022-12-05 10:12:55.296 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:12:55.297 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 3.7588ms
2022-12-05 10:12:55.299 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:55.300 +01:00 [INF] Request finished in 14.5812ms 200 application/json; charset=utf-8
2022-12-05 10:12:55.303 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:55
2022-12-05 10:12:55.303 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:55)
2022-12-05 10:12:55.307 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/30.30.30.30  
2022-12-05 10:12:55.312 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:55.313 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 72,09%. is added to queue
2022-12-05 10:12:55.314 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:55.315 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:55.316 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:55.3033495+01:00" stamp is good.
2022-12-05 10:12:55.317 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:55.321 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:55.323 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:12:55.324 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:55.325 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 3000 
2022-12-05 10:12:55.326 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:55,303;270;72,09251403808594
2022-12-05 10:12:55.327 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:12:55.328 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:55,303;270;72,09251403808594 stored.
2022-12-05 10:12:55.329 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 5.7678ms
2022-12-05 10:12:55.329 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 12:55
2022-12-05 10:12:55.329 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 12:55
2022-12-05 10:12:55.329 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:55)
2022-12-05 10:12:55.330 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:55.332 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:55.333 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:12:55.334 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:12:55.337 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 0%. is added to queue
2022-12-05 10:12:55.340 +01:00 [INF] Request finished in 32.2842ms 200 application/json; charset=utf-8
2022-12-05 10:12:55.341 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:12:55.342 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:12:55.343 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:55.3296741+01:00" stamp is good.
2022-12-05 10:12:55.347 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:55.348 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:55.349 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:55,329;271;0
2022-12-05 10:12:55.350 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:55,329;271;0 stored.
2022-12-05 10:12:55.353 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:55.366 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:12:55)
2022-12-05 10:12:55.366 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:12:55)
2022-12-05 10:12:55.368 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 53,49%. is added to queue
2022-12-05 10:12:55.369 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 51,17%. is added to queue
2022-12-05 10:12:55.371 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:55.3664562+01:00" stamp is good.
2022-12-05 10:12:55.373 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:55.3665670+01:00" stamp is good.
2022-12-05 10:12:55.374 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:12:55.375 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:12:55.376 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:55.377 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:55.378 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 20.20.20.20;2022-12-05 10:12:55,366;14;53,49312210083008
2022-12-05 10:12:55.379 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 30.30.30.30;2022-12-05 10:12:55,366;19;51,16735076904297
2022-12-05 10:12:55.380 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:12:55,366;14;53,49312210083008 stored.
2022-12-05 10:12:55.383 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:12:55,366;19;51,16735076904297 stored.
2022-12-05 10:12:55.384 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:55.386 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:56.301 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:56
2022-12-05 10:12:56.303 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:56.304 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:56.317 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:56)
2022-12-05 10:12:56.319 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,23%. is added to queue
2022-12-05 10:12:56.321 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:56.3172986+01:00" stamp is good.
2022-12-05 10:12:56.322 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:56.324 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:56.325 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:56,317;272;11,231399536132812
2022-12-05 10:12:56.326 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:56,317;272;11,231399536132812 stored.
2022-12-05 10:12:56.328 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:56.333 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:56
2022-12-05 10:12:56.336 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:56.337 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:56.349 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:56)
2022-12-05 10:12:56.351 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,19%. is added to queue
2022-12-05 10:12:56.354 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:56.3493933+01:00" stamp is good.
2022-12-05 10:12:56.357 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:56.358 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:56.360 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:56,349;273;11,193561553955078
2022-12-05 10:12:56.361 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:56,349;273;11,193561553955078 stored.
2022-12-05 10:12:56.363 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:57.312 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:57
2022-12-05 10:12:57.314 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:57.315 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:57.328 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:57)
2022-12-05 10:12:57.330 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 35,08%. is added to queue
2022-12-05 10:12:57.332 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:57.3284468+01:00" stamp is good.
2022-12-05 10:12:57.334 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:57.335 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:57.336 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:57,328;274;35,0765380859375
2022-12-05 10:12:57.338 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:57,328;274;35,0765380859375 stored.
2022-12-05 10:12:57.340 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:57.344 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:57
2022-12-05 10:12:57.347 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:57.348 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:57.360 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:57)
2022-12-05 10:12:57.362 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 46,87%. is added to queue
2022-12-05 10:12:57.364 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:57.3603490+01:00" stamp is good.
2022-12-05 10:12:57.366 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:57.367 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:57.368 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:57,360;275;46,865562438964844
2022-12-05 10:12:57.369 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:57,360;275;46,865562438964844 stored.
2022-12-05 10:12:57.371 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:57.915 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:12:57.916 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:57.917 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:57.921 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:12:57.922 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":1000,"$type":"MDState"} 
2022-12-05 10:12:57.927 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:12:57.929 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 8.1026ms
2022-12-05 10:12:57.930 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:57.932 +01:00 [INF] Request finished in 17.0021ms 200 application/json; charset=utf-8
2022-12-05 10:12:57.938 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:12:57.940 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:57.941 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:57.945 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:12:57.946 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:12:57.953 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:12:57.954 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 9.7155ms
2022-12-05 10:12:57.956 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:57.959 +01:00 [INF] Request finished in 20.4146ms 200 application/json; charset=utf-8
2022-12-05 10:12:57.963 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:12:57.967 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:57.968 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:12:57.970 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:12:57.971 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:12:57.975 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:12:57.976 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.2068ms
2022-12-05 10:12:57.978 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:12:57.979 +01:00 [INF] Request finished in 16.2264ms 200 application/json; charset=utf-8
2022-12-05 10:12:58.330 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:58
2022-12-05 10:12:58.332 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:58.333 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:58.345 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 12:58
2022-12-05 10:12:58.345 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:58)
2022-12-05 10:12:58.348 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:12:58.350 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50,05%. is added to queue
2022-12-05 10:12:58.351 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:12:58.352 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:58.3459424+01:00" stamp is good.
2022-12-05 10:12:58.355 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:58.356 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:58.357 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:58,345;276;50,0511474609375
2022-12-05 10:12:58.359 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:58,345;276;50,0511474609375 stored.
2022-12-05 10:12:58.360 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:58.361 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:58
2022-12-05 10:12:58.361 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:12:58)
2022-12-05 10:12:58.365 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:58.366 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 49,85%. is added to queue
2022-12-05 10:12:58.368 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:58.369 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:58.3615210+01:00" stamp is good.
2022-12-05 10:12:58.373 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:12:58.375 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:58.377 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:58)
2022-12-05 10:12:58.378 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 30.30.30.30;2022-12-05 10:12:58,361;20;49,84914779663086
2022-12-05 10:12:58.380 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 50%. is added to queue
2022-12-05 10:12:58.381 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:12:58,361;20;49,84914779663086 stored.
2022-12-05 10:12:58.382 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:58.3771592+01:00" stamp is good.
2022-12-05 10:12:58.384 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:58.385 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:58.387 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:58.388 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:58,377;277;50,000640869140625
2022-12-05 10:12:58.389 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:58,377;277;50,000640869140625 stored.
2022-12-05 10:12:58.391 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:59.339 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:59
2022-12-05 10:12:59.341 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:59.342 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:59.355 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 12:59
2022-12-05 10:12:59.355 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:59)
2022-12-05 10:12:59.357 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:12:59.359 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:12:59.360 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:12:59.361 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:59.3553327+01:00" stamp is good.
2022-12-05 10:12:59.364 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:59.365 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:59.366 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:59,355;278;37,502159118652344
2022-12-05 10:12:59.368 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:59,355;278;37,502159118652344 stored.
2022-12-05 10:12:59.369 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:59.370 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 12:59
2022-12-05 10:12:59.370 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:12:59)
2022-12-05 10:12:59.374 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:12:59.375 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 25%. is added to queue
2022-12-05 10:12:59.377 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:12:59.379 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:59.3709908+01:00" stamp is good.
2022-12-05 10:12:59.381 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:12:59.383 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:59.384 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 20.20.20.20;2022-12-05 10:12:59,370;15;25,004959106445312
2022-12-05 10:12:59.385 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:12:59,370;15;25,004959106445312 stored.
2022-12-05 10:12:59.386 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:12:59)
2022-12-05 10:12:59.389 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:59.390 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,49%. is added to queue
2022-12-05 10:12:59.393 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:12:59.3866165+01:00" stamp is good.
2022-12-05 10:12:59.394 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:12:59.395 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:12:59.396 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> Data is stored: 10.10.10.10;2022-12-05 10:12:59,386;279;37,49176025390625
2022-12-05 10:12:59.397 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:12:59,386;279;37,49176025390625 stored.
2022-12-05 10:12:59.398 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-12.txt
2022-12-05 10:13:00.343 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:00
2022-12-05 10:13:00.346 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:13:00.347 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:13:00.359 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:13:00)
2022-12-05 10:13:00.361 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 2,62%. is added to queue
2022-12-05 10:13:00.363 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:00.3592535+01:00" stamp is expired.
2022-12-05 10:13:00.364 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> File is closed
2022-12-05 10:13:00.366 +01:00 [INF] PeriodicallyStoreSystem  -> d:\tuw\log\2022-12-5-10-12.txt is closed.
2022-12-05 10:13:00.367 +01:00 [INF] PeriodicallyStoreSystem  -> 2022-12-5-10-12.txt is closed and new extenstion is bak.
2022-12-05 10:13:00.369 +01:00 [INF] PeriodicallyStoreSystem -> New File id: 2022-12-5-10-13.txt
2022-12-05 10:13:00.370 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:13:00.371 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:00.373 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> File not exsist. File created.
2022-12-05 10:13:00.374 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:00
2022-12-05 10:13:00.377 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:13:00,359;1;2,6215286254882812 stored.
2022-12-05 10:13:00.380 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:13:00.382 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:00.383 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:13:00.390 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:13:00)
2022-12-05 10:13:00.392 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 0%. is added to queue
2022-12-05 10:13:00.395 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:00.3901453+01:00" stamp is good.
2022-12-05 10:13:00.397 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:13:00.398 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:00.399 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 10.10.10.10;2022-12-05 10:13:00,390;2;0
2022-12-05 10:13:00.401 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:13:00,390;2;0 stored.
2022-12-05 10:13:00.402 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:01.359 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 13:01
2022-12-05 10:13:01.359 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:01
2022-12-05 10:13:01.361 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:13:01.362 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:13:01.363 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:13:01.364 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:13:01.375 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:13:01)
2022-12-05 10:13:01.375 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:13:01)
2022-12-05 10:13:01.377 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,49%. is added to queue
2022-12-05 10:13:01.379 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 37,49%. is added to queue
2022-12-05 10:13:01.381 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:01.3754071+01:00" stamp is good.
2022-12-05 10:13:01.382 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:01.3755656+01:00" stamp is expired.
2022-12-05 10:13:01.384 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:13:01.386 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> File is closed
2022-12-05 10:13:01.387 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:01.388 +01:00 [INF] PeriodicallyStoreSystem  -> d:\tuw\log\2022-12-5-10-12.txt is closed.
2022-12-05 10:13:01.390 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 10.10.10.10;2022-12-05 10:13:01,375;3;37,4935188293457
2022-12-05 10:13:01.390 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:01
2022-12-05 10:13:01.393 +01:00 [INF] PeriodicallyStoreSystem  -> 2022-12-5-10-12.txt is closed and new extenstion is bak.
2022-12-05 10:13:01.395 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:13:01,375;3;37,4935188293457 stored.
2022-12-05 10:13:01.397 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:13:01.398 +01:00 [INF] PeriodicallyStoreSystem -> New File id: 2022-12-5-10-13.txt
2022-12-05 10:13:01.400 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:01.401 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:13:01.402 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:13:01.406 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:01.406 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:13:01)
2022-12-05 10:13:01.410 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,43%. is added to queue
2022-12-05 10:13:01.412 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:01.4066470+01:00" stamp is good.
2022-12-05 10:13:01.413 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:13:01.415 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:01.416 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 10.10.10.10;2022-12-05 10:13:01,406;4;37,43008041381836
2022-12-05 10:13:01.417 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:13:01,406;4;37,43008041381836 stored.
2022-12-05 10:13:01.419 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:01.420 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> File not exsist. File created.
2022-12-05 10:13:01.424 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:13:01,375;1;37,4935188293457 stored.
2022-12-05 10:13:01.427 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:02.370 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:02
2022-12-05 10:13:02.373 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:13:02.374 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:13:02.403 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:02
2022-12-05 10:13:02.403 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:13:02)
2022-12-05 10:13:02.405 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:13:02.407 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 44,2%. is added to queue
2022-12-05 10:13:02.408 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:13:02.411 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:02.4033315+01:00" stamp is good.
2022-12-05 10:13:02.414 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:13:02.415 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:02.416 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 10.10.10.10;2022-12-05 10:13:02,403;5;44,197425842285156
2022-12-05 10:13:02.418 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:13:02,403;5;44,197425842285156 stored.
2022-12-05 10:13:02.421 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:02.434 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:13:02)
2022-12-05 10:13:02.436 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 53,5%. is added to queue
2022-12-05 10:13:02.439 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:02.4342080+01:00" stamp is good.
2022-12-05 10:13:02.442 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:13:02.443 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:02.444 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 10.10.10.10;2022-12-05 10:13:02,434;6;53,49869155883789
2022-12-05 10:13:02.445 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:13:02,434;6;53,49869155883789 stored.
2022-12-05 10:13:02.447 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:03.365 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 13:03
2022-12-05 10:13:03.367 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:13:03.368 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:13:03.381 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:03
2022-12-05 10:13:03.381 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:13:03)
2022-12-05 10:13:03.384 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:13:03.386 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 34,89%. is added to queue
2022-12-05 10:13:03.387 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:13:03.389 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:03.3812029+01:00" stamp is expired.
2022-12-05 10:13:03.394 +01:00 [INF] MeasuringDataStore 2022-12-5-10-12.txt -> File is closed
2022-12-05 10:13:03.396 +01:00 [INF] PeriodicallyStoreSystem  -> d:\tuw\log\2022-12-5-10-12.txt is closed.
2022-12-05 10:13:03.399 +01:00 [INF] PeriodicallyStoreSystem  -> 2022-12-5-10-12.txt is closed and new extenstion is bak.
2022-12-05 10:13:03.400 +01:00 [INF] PeriodicallyStoreSystem -> New File id: 2022-12-5-10-13.txt
2022-12-05 10:13:03.402 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:13:03.404 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:03.406 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> File not exsist. File created.
2022-12-05 10:13:03.407 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:13:03,381;1;34,887149810791016 stored.
2022-12-05 10:13:03.409 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:03.412 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:13:03)
2022-12-05 10:13:03.414 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 70,68%. is added to queue
2022-12-05 10:13:03.416 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:03.4121364+01:00" stamp is good.
2022-12-05 10:13:03.417 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:13:03.418 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:03.420 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 10.10.10.10;2022-12-05 10:13:03,412;7;70,67931365966797
2022-12-05 10:13:03.421 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:13:03,412;7;70,67931365966797 stored.
2022-12-05 10:13:03.423 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:03.427 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:03
2022-12-05 10:13:03.431 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:13:03.432 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:13:03.444 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:13:03)
2022-12-05 10:13:03.446 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 11,22%. is added to queue
2022-12-05 10:13:03.448 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:03.4442866+01:00" stamp is good.
2022-12-05 10:13:03.449 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:13:03.451 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:03.453 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 10.10.10.10;2022-12-05 10:13:03,444;8;11,2210111618042
2022-12-05 10:13:03.454 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:13:03,444;8;11,2210111618042 stored.
2022-12-05 10:13:03.455 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:04.367 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 13:04
2022-12-05 10:13:04.369 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:13:04.370 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:13:04.383 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:13:04)
2022-12-05 10:13:04.385 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 50%. is added to queue
2022-12-05 10:13:04.386 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:04.3834906+01:00" stamp is good.
2022-12-05 10:13:04.387 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:13:04.389 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:04.390 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 30.30.30.30;2022-12-05 10:13:04,383;2;50,00191879272461
2022-12-05 10:13:04.392 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:13:04,383;2;50,00191879272461 stored.
2022-12-05 10:13:04.394 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:04.399 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:04
2022-12-05 10:13:04.402 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:13:04.403 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:13:04.415 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:13:04)
2022-12-05 10:13:04.419 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 63,57%. is added to queue
2022-12-05 10:13:04.421 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:04.4153785+01:00" stamp is good.
2022-12-05 10:13:04.422 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:13:04.424 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:04.425 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 10.10.10.10;2022-12-05 10:13:04,415;9;63,56887435913086
2022-12-05 10:13:04.426 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:13:04,415;9;63,56887435913086 stored.
2022-12-05 10:13:04.428 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:04.447 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:04
2022-12-05 10:13:04.448 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:13:04.450 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:13:04.479 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:13:04)
2022-12-05 10:13:04.480 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 51,17%. is added to queue
2022-12-05 10:13:04.483 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:04.4793475+01:00" stamp is good.
2022-12-05 10:13:04.484 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:13:04.485 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:04.486 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 10.10.10.10;2022-12-05 10:13:04,479;10;51,171260833740234
2022-12-05 10:13:04.487 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:13:04,479;10;51,171260833740234 stored.
2022-12-05 10:13:04.489 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:05.408 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:05
2022-12-05 10:13:05.409 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:13:05.411 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:13:05.424 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:13:05)
2022-12-05 10:13:05.426 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,64%. is added to queue
2022-12-05 10:13:05.428 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:05.4241082+01:00" stamp is good.
2022-12-05 10:13:05.429 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:13:05.430 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:05.431 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 10.10.10.10;2022-12-05 10:13:05,424;11;37,63945007324219
2022-12-05 10:13:05.433 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:13:05,424;11;37,63945007324219 stored.
2022-12-05 10:13:05.434 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:05.455 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:05
2022-12-05 10:13:05.457 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:13:05.458 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:13:05.471 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:13:05)
2022-12-05 10:13:05.473 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,47%. is added to queue
2022-12-05 10:13:05.475 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:05.4713336+01:00" stamp is good.
2022-12-05 10:13:05.476 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:13:05.478 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:05.479 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 10.10.10.10;2022-12-05 10:13:05,471;12;37,466941833496094
2022-12-05 10:13:05.480 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:13:05,471;12;37,466941833496094 stored.
2022-12-05 10:13:05.481 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:05.839 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/stop/10.10.10.10  
2022-12-05 10:13:05.840 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:05.841 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:05.843 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 10.10.10.10
2022-12-05 10:13:05.844 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> Controlling: stop, IP address: 10.10.10.10.
2022-12-05 10:13:05.845 +01:00 [INF] ControllingContollers->Token stop cancel is requested
2022-12-05 10:13:05.846 +01:00 [INF] ControllingContollers->Stop Async
2022-12-05 10:13:05.847 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:13:05.848 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 5.1849ms
2022-12-05 10:13:05.850 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:05.851 +01:00 [INF] Request finished in 11.6341ms 200 
2022-12-05 10:13:05.883 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:13:05.884 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:05.885 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:05.890 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:13:05.891 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":1000,"$type":"MDState"} 
2022-12-05 10:13:05.894 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:05.895 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 5.3262ms
2022-12-05 10:13:05.896 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:05.898 +01:00 [INF] Request finished in 14.5339ms 200 application/json; charset=utf-8
2022-12-05 10:13:05.905 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:13:05.906 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:05.907 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:05.909 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:13:05.910 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:13:05.915 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:05.916 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.8417ms
2022-12-05 10:13:05.920 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:05.921 +01:00 [INF] Request finished in 16.6288ms 200 application/json; charset=utf-8
2022-12-05 10:13:05.926 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:13:05.927 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:05.928 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:05.931 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:13:05.932 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:13:05.938 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:05.939 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 8.7453ms
2022-12-05 10:13:05.941 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:05.942 +01:00 [INF] Request finished in 16.4642ms 200 application/json; charset=utf-8
2022-12-05 10:13:07.378 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 13:07
2022-12-05 10:13:07.378 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 13:07
2022-12-05 10:13:07.380 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:13:07.381 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:13:07.382 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:13:07.384 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:13:07.394 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:13:07)
2022-12-05 10:13:07.394 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:13:07)
2022-12-05 10:13:07.397 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:13:07.398 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:13:07.399 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:07.3943215+01:00" stamp is good.
2022-12-05 10:13:07.400 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:07.3944390+01:00" stamp is good.
2022-12-05 10:13:07.401 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:13:07.402 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:13:07.404 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:07.405 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:07.406 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 20.20.20.20;2022-12-05 10:13:07,394;2;37,50136184692383
2022-12-05 10:13:07.407 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 30.30.30.30;2022-12-05 10:13:07,394;3;37,50136184692383
2022-12-05 10:13:07.408 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:13:07,394;2;37,50136184692383 stored.
2022-12-05 10:13:07.411 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:13:07,394;3;37,50136184692383 stored.
2022-12-05 10:13:07.412 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:07.414 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:09.261 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/stop/20.20.20.20  
2022-12-05 10:13:09.262 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:09.264 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:09.266 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 10.10.10.10
2022-12-05 10:13:09.266 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> Controlling: stop, IP address: 20.20.20.20.
2022-12-05 10:13:09.268 +01:00 [INF] ControllingContollers->Token stop cancel is requested
2022-12-05 10:13:09.269 +01:00 [INF] ControllingContollers->Stop Async
2022-12-05 10:13:09.269 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:13:09.270 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 5.0152ms
2022-12-05 10:13:09.272 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:09.274 +01:00 [INF] Request finished in 12.3534ms 200 
2022-12-05 10:13:09.304 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:13:09.305 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:09.307 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:09.308 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:13:09.309 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":1000,"$type":"MDState"} 
2022-12-05 10:13:09.313 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:09.316 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 7.3302ms
2022-12-05 10:13:09.317 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:09.318 +01:00 [INF] Request finished in 14.0599ms 200 application/json; charset=utf-8
2022-12-05 10:13:09.323 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:13:09.324 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:09.325 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:09.327 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:13:09.328 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:13:09.332 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:09.334 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.1994ms
2022-12-05 10:13:09.335 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:09.336 +01:00 [INF] Request finished in 13.3816ms 200 application/json; charset=utf-8
2022-12-05 10:13:09.343 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:13:09.344 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:09.346 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:09.348 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:13:09.349 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:13:09.352 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:09.356 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 8.5487ms
2022-12-05 10:13:09.358 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:09.359 +01:00 [INF] Request finished in 15.8307ms 200 application/json; charset=utf-8
2022-12-05 10:13:10.400 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 13:10
2022-12-05 10:13:10.402 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:13:10.404 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:13:10.416 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:13:10)
2022-12-05 10:13:10.418 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 37,48%. is added to queue
2022-12-05 10:13:10.420 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:10.4162963+01:00" stamp is good.
2022-12-05 10:13:10.421 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:13:10.423 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:10.424 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 30.30.30.30;2022-12-05 10:13:10,416;4;37,477352142333984
2022-12-05 10:13:10.425 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:13:10,416;4;37,477352142333984 stored.
2022-12-05 10:13:10.427 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:10.725 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/stop/30.30.30.30  
2022-12-05 10:13:10.726 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:10.729 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:10.732 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 30.30.30.30
2022-12-05 10:13:10.733 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> Controlling: stop, IP address: 30.30.30.30.
2022-12-05 10:13:10.735 +01:00 [INF] ControllingContollers->Token stop cancel is requested
2022-12-05 10:13:10.736 +01:00 [INF] ControllingContollers->Stop Async
2022-12-05 10:13:10.737 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:13:10.738 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 6.779ms
2022-12-05 10:13:10.740 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:10.743 +01:00 [INF] Request finished in 17.4834ms 200 
2022-12-05 10:13:10.778 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:13:10.779 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:10.780 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:10.782 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:13:10.783 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":1000,"$type":"MDState"} 
2022-12-05 10:13:10.787 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:10.788 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 5.4845ms
2022-12-05 10:13:10.789 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:10.791 +01:00 [INF] Request finished in 12.7359ms 200 application/json; charset=utf-8
2022-12-05 10:13:10.795 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:13:10.796 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:10.797 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:10.799 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:13:10.800 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:13:10.803 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:10.804 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 4.947ms
2022-12-05 10:13:10.808 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:10.809 +01:00 [INF] Request finished in 14.1749ms 200 application/json; charset=utf-8
2022-12-05 10:13:10.813 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:13:10.814 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:10.815 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:10.817 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:13:10.818 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:13:10.824 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:10.825 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 7.5542ms
2022-12-05 10:13:10.826 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:10.828 +01:00 [INF] Request finished in 14.0541ms 200 application/json; charset=utf-8
2022-12-05 10:13:33.269 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/start/10.10.10.10  
2022-12-05 10:13:33.271 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:33.273 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:33.275 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 10.10.10.10
2022-12-05 10:13:33.276 +01:00 [INF] ControllingContollers->Token stop cancel is not requested
2022-12-05 10:13:33.277 +01:00 [INF] MeasureDevice 10.10.10.10 -> StartAsync
2022-12-05 10:13:33.279 +01:00 [INF] MeasureDevice 10.10.10.10 -> StartAsync, mesuring interval is 1000
2022-12-05 10:13:33.280 +01:00 [INF] Token cancel is not requested
2022-12-05 10:13:33.281 +01:00 [INF] MeasureDeviceAPIService -> Uri is http://localhost:5001/api/md/
2022-12-05 10:13:33.282 +01:00 [INF] MeasureDeviceAPIService -> Sended data -> {"Id":1,"Name":"10.10.10.10","Interval":1000,"$type":"EFMeasureDevice"}
2022-12-05 10:13:33.289 +01:00 [INF] ControllingContollers->Start Async
2022-12-05 10:13:33.290 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:13:33.291 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 16.3888ms
2022-12-05 10:13:33.293 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:33.295 +01:00 [INF] Request finished in 25.2036ms 200 
2022-12-05 10:13:33.349 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:13:33.350 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:33.352 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:33.353 +01:00 [INF] MeasureDeviceAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:13:33.355 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:13:33.356 +01:00 [INF] MeasureDevice 10.10.10.10 -> ExecuteAsync
2022-12-05 10:13:33.357 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":1000,"$type":"MDState"} 
2022-12-05 10:13:33.359 +01:00 [INF] ExecuteAsync Token cancel is not requested
2022-12-05 10:13:33.363 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:33.364 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:33
2022-12-05 10:13:33.365 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 10.274ms
2022-12-05 10:13:33.366 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:13:33.367 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:33.369 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:13:33.387 +01:00 [INF] Request finished in 37.3719ms 200 application/json; charset=utf-8
2022-12-05 10:13:33.392 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:13:33.393 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:33.394 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:33.396 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:13:33.397 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:13:33.401 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:13:33)
2022-12-05 10:13:33.403 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:33.404 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,42%. is added to queue
2022-12-05 10:13:33.405 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 9.2764ms
2022-12-05 10:13:33.407 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:33.4010370+01:00" stamp is good.
2022-12-05 10:13:33.408 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:33.409 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:13:33.410 +01:00 [INF] Request finished in 18.4955ms 200 application/json; charset=utf-8
2022-12-05 10:13:33.411 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:33.413 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 10.10.10.10;2022-12-05 10:13:33,401;13;37,422462463378906
2022-12-05 10:13:33.414 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:13:33,401;13;37,422462463378906 stored.
2022-12-05 10:13:33.414 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:13:33.416 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:33.419 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:33.422 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:33.424 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:13:33.425 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:13:33.428 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:33.429 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 5.6135ms
2022-12-05 10:13:33.431 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:33.435 +01:00 [INF] Request finished in 20.3699ms 200 application/json; charset=utf-8
2022-12-05 10:13:34.391 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:34
2022-12-05 10:13:34.394 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:13:34.395 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:13:34.407 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:13:34)
2022-12-05 10:13:34.409 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,49%. is added to queue
2022-12-05 10:13:34.410 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:34.4076738+01:00" stamp is good.
2022-12-05 10:13:34.412 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:13:34.413 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:34.414 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 10.10.10.10;2022-12-05 10:13:34,407;14;37,49095916748047
2022-12-05 10:13:34.415 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:13:34,407;14;37,49095916748047 stored.
2022-12-05 10:13:34.416 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:34.525 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/start/20.20.20.20  
2022-12-05 10:13:34.526 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:34.528 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:34.530 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 10.10.10.10
2022-12-05 10:13:34.531 +01:00 [INF] ControllingContollers->Token stop cancel is not requested
2022-12-05 10:13:34.532 +01:00 [INF] MeasureDevice 20.20.20.20 -> StartAsync
2022-12-05 10:13:34.533 +01:00 [INF] MeasureDevice 20.20.20.20 -> StartAsync, mesuring interval is 4000
2022-12-05 10:13:34.535 +01:00 [INF] Token cancel is not requested
2022-12-05 10:13:34.536 +01:00 [INF] MeasureDeviceAPIService -> Uri is http://localhost:5001/api/md/
2022-12-05 10:13:34.537 +01:00 [INF] MeasureDeviceAPIService -> Sended data -> {"Id":2,"Name":"20.20.20.20","Interval":4000,"$type":"EFMeasureDevice"}
2022-12-05 10:13:34.544 +01:00 [INF] ControllingContollers->Start Async
2022-12-05 10:13:34.545 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:13:34.547 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 16.2839ms
2022-12-05 10:13:34.548 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:34.549 +01:00 [INF] Request finished in 24.3011ms 200 
2022-12-05 10:13:34.602 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:13:34.602 +01:00 [INF] MeasureDeviceAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:13:34.603 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:34.605 +01:00 [INF] MeasureDevice 20.20.20.20 -> ExecuteAsync
2022-12-05 10:13:34.606 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:34.607 +01:00 [INF] ExecuteAsync Token cancel is not requested
2022-12-05 10:13:34.609 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:13:34.610 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 13:34
2022-12-05 10:13:34.611 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":1000,"$type":"MDState"} 
2022-12-05 10:13:34.612 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:13:34.616 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:34.617 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:13:34.618 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 9.0507ms
2022-12-05 10:13:34.624 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:34.625 +01:00 [INF] Request finished in 23.1976ms 200 application/json; charset=utf-8
2022-12-05 10:13:34.629 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:13:34.630 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:34.631 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:34.633 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:13:34.634 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:13:34.635 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:13:34)
2022-12-05 10:13:34.640 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:34.641 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 81,25%. is added to queue
2022-12-05 10:13:34.642 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 9.7976ms
2022-12-05 10:13:34.644 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:34.6359614+01:00" stamp is good.
2022-12-05 10:13:34.645 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:34.646 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:13:34.647 +01:00 [INF] Request finished in 18.146ms 200 application/json; charset=utf-8
2022-12-05 10:13:34.648 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:34.650 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 20.20.20.20;2022-12-05 10:13:34,635;3;81,24769592285156
2022-12-05 10:13:34.653 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:13:34.654 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:13:34,635;3;81,24769592285156 stored.
2022-12-05 10:13:34.655 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:34.656 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:34.657 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:34.660 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:13:34.661 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":false,"IsMeasuring":false,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:13:34.665 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:34.666 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 5.8287ms
2022-12-05 10:13:34.670 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:34.672 +01:00 [INF] Request finished in 18.126ms 200 application/json; charset=utf-8
2022-12-05 10:13:35.414 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:35
2022-12-05 10:13:35.416 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:13:35.417 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:13:35.430 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:13:35)
2022-12-05 10:13:35.433 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,61%. is added to queue
2022-12-05 10:13:35.434 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:35.4308068+01:00" stamp is good.
2022-12-05 10:13:35.435 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:13:35.437 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:35.438 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 10.10.10.10;2022-12-05 10:13:35,430;15;18,613895416259766
2022-12-05 10:13:35.439 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:13:35,430;15;18,613895416259766 stored.
2022-12-05 10:13:35.441 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:36.150 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/start/30.30.30.30  
2022-12-05 10:13:36.151 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:36.153 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:36.155 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 30.30.30.30
2022-12-05 10:13:36.156 +01:00 [INF] ControllingContollers->Token stop cancel is not requested
2022-12-05 10:13:36.157 +01:00 [INF] MeasureDevice 30.30.30.30 -> StartAsync
2022-12-05 10:13:36.158 +01:00 [INF] MeasureDevice 30.30.30.30 -> StartAsync, mesuring interval is 3000
2022-12-05 10:13:36.159 +01:00 [INF] Token cancel is not requested
2022-12-05 10:13:36.160 +01:00 [INF] MeasureDeviceAPIService -> Uri is http://localhost:5001/api/md/
2022-12-05 10:13:36.161 +01:00 [INF] MeasureDeviceAPIService -> Sended data -> {"Id":3,"Name":"30.30.30.30","Interval":3000,"$type":"EFMeasureDevice"}
2022-12-05 10:13:36.165 +01:00 [INF] ControllingContollers->Start Async
2022-12-05 10:13:36.169 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:13:36.170 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 14.8534ms
2022-12-05 10:13:36.172 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:36.173 +01:00 [INF] Request finished in 22.962ms 200 
2022-12-05 10:13:36.224 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:13:36.225 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:36.226 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:36.227 +01:00 [INF] MeasureDeviceAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:13:36.228 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:13:36.229 +01:00 [INF] MeasureDevice 30.30.30.30 -> ExecuteAsync
2022-12-05 10:13:36.230 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":1000,"$type":"MDState"} 
2022-12-05 10:13:36.231 +01:00 [INF] ExecuteAsync Token cancel is not requested
2022-12-05 10:13:36.234 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:36.235 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 13:36
2022-12-05 10:13:36.236 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 7.603ms
2022-12-05 10:13:36.241 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:13:36.243 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:36.243 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:13:36.244 +01:00 [INF] Request finished in 20.7459ms 200 application/json; charset=utf-8
2022-12-05 10:13:36.249 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:13:36.249 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:36.250 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:36.251 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:13:36)
2022-12-05 10:13:36.262 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:13:36.263 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 62,5%. is added to queue
2022-12-05 10:13:36.264 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:13:36.265 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:36.2519097+01:00" stamp is good.
2022-12-05 10:13:36.268 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:36.269 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:13:36.270 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 8.0602ms
2022-12-05 10:13:36.271 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:36.272 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:36.273 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 30.30.30.30;2022-12-05 10:13:36,251;5;62,502159118652344
2022-12-05 10:13:36.274 +01:00 [INF] Request finished in 25.3991ms 200 application/json; charset=utf-8
2022-12-05 10:13:36.275 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:13:36,251;5;62,502159118652344 stored.
2022-12-05 10:13:36.277 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:36.278 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:13:36.279 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:36.280 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:36.282 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:13:36.286 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:13:36.290 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:36.292 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 10.0242ms
2022-12-05 10:13:36.293 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:36.295 +01:00 [INF] Request finished in 16.7072ms 200 application/json; charset=utf-8
2022-12-05 10:13:36.433 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:36
2022-12-05 10:13:36.434 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:13:36.436 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:13:36.448 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:13:36)
2022-12-05 10:13:36.451 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:13:36.453 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:36.4488569+01:00" stamp is good.
2022-12-05 10:13:36.454 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:13:36.455 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:36.457 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 10.10.10.10;2022-12-05 10:13:36,448;16;37,49856185913086
2022-12-05 10:13:36.458 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:13:36,448;16;37,49856185913086 stored.
2022-12-05 10:13:36.460 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:37.381 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/nomeasuring/10.10.10.10  
2022-12-05 10:13:37.382 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:37.384 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:37.386 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 10.10.10.10
2022-12-05 10:13:37.387 +01:00 [INF] ControllingContollers->Stop Measuring
2022-12-05 10:13:37.389 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:13:37.390 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 3.7424ms
2022-12-05 10:13:37.392 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:37.393 +01:00 [INF] Request finished in 11.7395ms 200 
2022-12-05 10:13:37.421 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:13:37.422 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:37.424 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:37.426 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:13:37.427 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":false,"MeasuringInterval":1000,"$type":"MDState"} 
2022-12-05 10:13:37.431 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:37.432 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.3986ms
2022-12-05 10:13:37.433 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:37
2022-12-05 10:13:37.437 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:37.439 +01:00 [INF] Request finished in 17.8462ms 200 application/json; charset=utf-8
2022-12-05 10:13:37.444 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:13:37.445 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:37.446 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:37.448 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:13:37.449 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:13:37.453 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:37.458 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 9.4782ms
2022-12-05 10:13:37.459 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:37.460 +01:00 [INF] Request finished in 16.7001ms 200 application/json; charset=utf-8
2022-12-05 10:13:37.465 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:13:37.466 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:37.467 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:37.469 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:13:37.472 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:13:37.476 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:37.477 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 7.9115ms
2022-12-05 10:13:37.479 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:37.480 +01:00 [INF] Request finished in 15.1119ms 200 application/json; charset=utf-8
2022-12-05 10:13:38.451 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:38
2022-12-05 10:13:38.454 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/nomeasuring/20.20.20.20  
2022-12-05 10:13:38.455 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:38.457 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:38.460 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 10.10.10.10
2022-12-05 10:13:38.461 +01:00 [INF] ControllingContollers->Stop Measuring
2022-12-05 10:13:38.462 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:13:38.463 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 3.3074ms
2022-12-05 10:13:38.465 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:38.466 +01:00 [INF] Request finished in 12.2138ms 200 
2022-12-05 10:13:38.499 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:13:38.501 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:38.502 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:38.505 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:13:38.506 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":false,"MeasuringInterval":1000,"$type":"MDState"} 
2022-12-05 10:13:38.510 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:38.511 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.6998ms
2022-12-05 10:13:38.513 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:38.514 +01:00 [INF] Request finished in 15.7616ms 200 application/json; charset=utf-8
2022-12-05 10:13:38.518 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:13:38.519 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:38.520 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:38.525 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:13:38.526 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":false,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:13:38.529 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:38.530 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 5.5319ms
2022-12-05 10:13:38.532 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:38.533 +01:00 [INF] Request finished in 14.7202ms 200 application/json; charset=utf-8
2022-12-05 10:13:38.540 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:13:38.540 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:38.542 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:38.543 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:13:38.544 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:13:38.548 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:38.549 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 5.1735ms
2022-12-05 10:13:38.550 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:38.551 +01:00 [INF] Request finished in 11.7689ms 200 application/json; charset=utf-8
2022-12-05 10:13:38.620 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 13:38
2022-12-05 10:13:39.240 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 13:39
2022-12-05 10:13:39.242 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:13:39.244 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:13:39.256 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:13:39)
2022-12-05 10:13:39.259 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 18,83%. is added to queue
2022-12-05 10:13:39.261 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:13:39.2569892+01:00" stamp is good.
2022-12-05 10:13:39.262 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:13:39.263 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:39.264 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> Data is stored: 30.30.30.30;2022-12-05 10:13:39,256;6;18,827665328979492
2022-12-05 10:13:39.266 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:13:39,256;6;18,827665328979492 stored.
2022-12-05 10:13:39.267 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-13.txt
2022-12-05 10:13:39.465 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:39
2022-12-05 10:13:39.533 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/nomeasuring/30.30.30.30  
2022-12-05 10:13:39.534 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:39.536 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:39.538 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 30.30.30.30
2022-12-05 10:13:39.539 +01:00 [INF] ControllingContollers->Stop Measuring
2022-12-05 10:13:39.540 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:13:39.541 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 3.2135ms
2022-12-05 10:13:39.543 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:39.544 +01:00 [INF] Request finished in 10.6423ms 200 
2022-12-05 10:13:39.572 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:13:39.573 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:39.574 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:39.576 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:13:39.577 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":false,"MeasuringInterval":1000,"$type":"MDState"} 
2022-12-05 10:13:39.581 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:39.582 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 5.9ms
2022-12-05 10:13:39.586 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:39.588 +01:00 [INF] Request finished in 15.8769ms 200 application/json; charset=utf-8
2022-12-05 10:13:39.592 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:13:39.593 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:39.594 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:39.596 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:13:39.597 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":false,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:13:39.600 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:39.601 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 5.1089ms
2022-12-05 10:13:39.602 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:39.607 +01:00 [INF] Request finished in 15.2077ms 200 application/json; charset=utf-8
2022-12-05 10:13:39.611 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:13:39.612 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:39.613 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:13:39.615 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:13:39.615 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":false,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:13:39.618 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:13:39.622 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 7.8815ms
2022-12-05 10:13:39.624 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:13:39.626 +01:00 [INF] Request finished in 14.5452ms 200 application/json; charset=utf-8
2022-12-05 10:13:40.485 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:40
2022-12-05 10:13:41.492 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:41
2022-12-05 10:13:42.269 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 13:42
2022-12-05 10:13:42.503 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:42
2022-12-05 10:13:42.628 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 13:42
2022-12-05 10:13:43.503 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:43
2022-12-05 10:13:44.503 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:44
2022-12-05 10:13:45.284 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 13:45
2022-12-05 10:13:45.503 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:45
2022-12-05 10:13:46.518 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:46
2022-12-05 10:13:46.629 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 13:46
2022-12-05 10:13:47.519 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:47
2022-12-05 10:13:48.285 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 13:48
2022-12-05 10:13:48.535 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:48
2022-12-05 10:13:49.535 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:49
2022-12-05 10:13:50.535 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:50
2022-12-05 10:13:50.644 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 13:50
2022-12-05 10:13:51.300 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 13:51
2022-12-05 10:13:51.550 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:51
2022-12-05 10:13:52.551 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:52
2022-12-05 10:13:53.566 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:53
2022-12-05 10:13:54.309 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 13:54
2022-12-05 10:13:54.575 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:54
2022-12-05 10:13:54.653 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 13:54
2022-12-05 10:13:55.585 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:55
2022-12-05 10:13:56.593 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:56
2022-12-05 10:13:57.329 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 13:57
2022-12-05 10:13:57.594 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:57
2022-12-05 10:13:58.595 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:58
2022-12-05 10:13:58.659 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 13:58
2022-12-05 10:13:59.621 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 13:59
2022-12-05 10:14:00.339 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 14:00
2022-12-05 10:14:00.636 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:00
2022-12-05 10:14:01.650 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:01
2022-12-05 10:14:02.652 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:02
2022-12-05 10:14:02.667 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 14:02
2022-12-05 10:14:03.340 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 14:03
2022-12-05 10:14:03.664 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:03
2022-12-05 10:14:04.667 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:04
2022-12-05 10:14:05.669 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:05
2022-12-05 10:14:06.356 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 14:06
2022-12-05 10:14:06.669 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 14:06
2022-12-05 10:14:06.669 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:06
2022-12-05 10:14:07.685 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:07
2022-12-05 10:14:08.685 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:08
2022-12-05 10:14:09.372 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 14:09
2022-12-05 10:14:09.700 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:09
2022-12-05 10:14:10.685 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 14:10
2022-12-05 10:14:10.700 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:10
2022-12-05 10:14:11.716 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:11
2022-12-05 10:14:12.372 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 14:12
2022-12-05 10:14:12.731 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:12
2022-12-05 10:14:13.754 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:13
2022-12-05 10:14:14.692 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 14:14
2022-12-05 10:14:14.754 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:14
2022-12-05 10:14:15.379 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 14:15
2022-12-05 10:14:15.770 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:15
2022-12-05 10:14:16.502 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/measuring/10.10.10.10  
2022-12-05 10:14:16.503 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:16.505 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:16.508 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 10.10.10.10
2022-12-05 10:14:16.509 +01:00 [INF] ControllingContollers->Start Measuring
2022-12-05 10:14:16.510 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:14:16.511 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 3.3826ms
2022-12-05 10:14:16.513 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:16.514 +01:00 [INF] Request finished in 12.1762ms 200 
2022-12-05 10:14:16.549 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:14:16.551 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:16.552 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:16.555 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:14:16.556 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":1000,"$type":"MDState"} 
2022-12-05 10:14:16.560 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:14:16.561 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.4647ms
2022-12-05 10:14:16.563 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:16.564 +01:00 [INF] Request finished in 15.233ms 200 application/json; charset=utf-8
2022-12-05 10:14:16.569 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:14:16.577 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:16.578 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:16.580 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:14:16.581 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":false,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:14:16.585 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:14:16.588 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 7.7872ms
2022-12-05 10:14:16.589 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:16.590 +01:00 [INF] Request finished in 21.6952ms 200 application/json; charset=utf-8
2022-12-05 10:14:16.595 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:14:16.596 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:16.597 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:16.599 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:14:16.600 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":false,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:14:16.607 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:14:16.608 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 8.639ms
2022-12-05 10:14:16.609 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:16.610 +01:00 [INF] Request finished in 15.4764ms 200 application/json; charset=utf-8
2022-12-05 10:14:16.782 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:16
2022-12-05 10:14:16.784 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:14:16.785 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:14:16.798 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:14:16)
2022-12-05 10:14:16.801 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,83%. is added to queue
2022-12-05 10:14:16.803 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:14:16.7988018+01:00" stamp is expired.
2022-12-05 10:14:16.805 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> File is closed
2022-12-05 10:14:16.806 +01:00 [INF] PeriodicallyStoreSystem  -> d:\tuw\log\2022-12-5-10-13.txt is closed.
2022-12-05 10:14:16.807 +01:00 [INF] PeriodicallyStoreSystem  -> 2022-12-5-10-13.txt is closed and new extenstion is bak.
2022-12-05 10:14:16.809 +01:00 [INF] PeriodicallyStoreSystem -> New File id: 2022-12-5-10-14.txt
2022-12-05 10:14:16.810 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:14:16.812 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:16.814 +01:00 [INF] MeasuringDataStore 2022-12-5-10-14.txt -> File not exsist. File created.
2022-12-05 10:14:16.816 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:14:16,798;1;18,826316833496094 stored.
2022-12-05 10:14:16.818 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:17.566 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/measuring/20.20.20.20  
2022-12-05 10:14:17.567 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:17.568 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:17.571 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 10.10.10.10
2022-12-05 10:14:17.572 +01:00 [INF] ControllingContollers->Start Measuring
2022-12-05 10:14:17.574 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:14:17.575 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 3.9779ms
2022-12-05 10:14:17.577 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:17.578 +01:00 [INF] Request finished in 12.0179ms 200 
2022-12-05 10:14:17.617 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:14:17.619 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:17.620 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:17.622 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:14:17.623 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":1000,"$type":"MDState"} 
2022-12-05 10:14:17.627 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:14:17.628 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.4085ms
2022-12-05 10:14:17.630 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:17.631 +01:00 [INF] Request finished in 14.3393ms 200 application/json; charset=utf-8
2022-12-05 10:14:17.636 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:14:17.640 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:17.641 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:17.644 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:14:17.645 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:14:17.649 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:14:17.650 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.0429ms
2022-12-05 10:14:17.651 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:17.655 +01:00 [INF] Request finished in 19.1793ms 200 application/json; charset=utf-8
2022-12-05 10:14:17.661 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:14:17.662 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:17.664 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:17.666 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:14:17.667 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":false,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:14:17.673 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:14:17.675 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 8.8803ms
2022-12-05 10:14:17.676 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:17.678 +01:00 [INF] Request finished in 16.8074ms 200 application/json; charset=utf-8
2022-12-05 10:14:17.795 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:17
2022-12-05 10:14:17.797 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:14:17.798 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:14:17.811 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:14:17)
2022-12-05 10:14:17.813 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,84%. is added to queue
2022-12-05 10:14:17.816 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:14:17.8114511+01:00" stamp is good.
2022-12-05 10:14:17.817 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:14:17.818 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:17.819 +01:00 [INF] MeasuringDataStore 2022-12-5-10-14.txt -> Data is stored: 10.10.10.10;2022-12-05 10:14:17,811;2;18,841157913208008
2022-12-05 10:14:17.821 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:14:17,811;2;18,841157913208008 stored.
2022-12-05 10:14:17.822 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:18.334 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/measuring/30.30.30.30  
2022-12-05 10:14:18.335 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:18.337 +01:00 [INF] Route matched with {action = "ControllingMeasuring", controller = "ControllingContoller"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ControllingMeasuring(System.String, System.String) on controller MeasureDeviceServiceAPIProject.Controllers.ControllingContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:18.340 +01:00 [INF] ControllingContollers -> ControllingMeasuring -> IP address: 30.30.30.30
2022-12-05 10:14:18.341 +01:00 [INF] ControllingContollers->Start Measuring
2022-12-05 10:14:18.342 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:14:18.344 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject) in 3.6176ms
2022-12-05 10:14:18.345 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.ControllingContoller.ControllingMeasuring (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:18.346 +01:00 [INF] Request finished in 12.6046ms 200 
2022-12-05 10:14:18.385 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:14:18.386 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:18.387 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:18.390 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:14:18.391 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":1000,"$type":"MDState"} 
2022-12-05 10:14:18.395 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:14:18.396 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 6.5262ms
2022-12-05 10:14:18.397 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 14:18
2022-12-05 10:14:18.400 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:18.401 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:14:18.402 +01:00 [INF] Request finished in 17.685ms 200 application/json; charset=utf-8
2022-12-05 10:14:18.404 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:14:18.408 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:14:18.409 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:18.411 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:18.413 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:14:18.419 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":4000,"$type":"MDState"} 
2022-12-05 10:14:18.423 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:14:18.425 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 11.9839ms
2022-12-05 10:14:18.427 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:18.428 +01:00 [INF] Request finished in 20.1135ms 200 application/json; charset=utf-8
2022-12-05 10:14:18.430 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:14:18)
2022-12-05 10:14:18.434 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 67,46%. is added to queue
2022-12-05 10:14:18.435 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:14:18.435 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:14:18.4301839+01:00" stamp is expired.
2022-12-05 10:14:18.437 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:18.438 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> File is closed
2022-12-05 10:14:18.439 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:18.441 +01:00 [INF] PeriodicallyStoreSystem  -> d:\tuw\log\2022-12-5-10-13.txt is closed.
2022-12-05 10:14:18.443 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:14:18.445 +01:00 [INF] PeriodicallyStoreSystem  -> 2022-12-5-10-13.txt is closed and new extenstion is bak.
2022-12-05 10:14:18.445 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":3000,"$type":"MDState"} 
2022-12-05 10:14:18.448 +01:00 [INF] PeriodicallyStoreSystem -> New File id: 2022-12-5-10-14.txt
2022-12-05 10:14:18.452 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:14:18.452 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:14:18.453 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 10.5165ms
2022-12-05 10:14:18.455 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:18.456 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:18.458 +01:00 [INF] MeasuringDataStore 2022-12-5-10-14.txt -> File not exsist. File created.
2022-12-05 10:14:18.458 +01:00 [INF] Request finished in 23.4562ms 200 application/json; charset=utf-8
2022-12-05 10:14:18.460 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:14:18,430;1;67,45740509033203 stored.
2022-12-05 10:14:18.465 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:18.698 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 14:18
2022-12-05 10:14:18.700 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:14:18.701 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:14:18.730 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:14:18)
2022-12-05 10:14:18.731 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 71,06%. is added to queue
2022-12-05 10:14:18.733 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:14:18.7302992+01:00" stamp is expired.
2022-12-05 10:14:18.735 +01:00 [INF] MeasuringDataStore 2022-12-5-10-13.txt -> File is closed
2022-12-05 10:14:18.736 +01:00 [INF] PeriodicallyStoreSystem  -> d:\tuw\log\2022-12-5-10-13.txt is closed.
2022-12-05 10:14:18.738 +01:00 [INF] PeriodicallyStoreSystem  -> 2022-12-5-10-13.txt is closed and new extenstion is bak.
2022-12-05 10:14:18.739 +01:00 [INF] PeriodicallyStoreSystem -> New File id: 2022-12-5-10-14.txt
2022-12-05 10:14:18.741 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:14:18.742 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:18.743 +01:00 [INF] MeasuringDataStore 2022-12-5-10-14.txt -> File not exsist. File created.
2022-12-05 10:14:18.744 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:14:18,730;1;71,06438446044922 stored.
2022-12-05 10:14:18.748 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:18.825 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:18
2022-12-05 10:14:18.827 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:14:18.828 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:14:18.842 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:14:18)
2022-12-05 10:14:18.844 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,85%. is added to queue
2022-12-05 10:14:18.846 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:14:18.8421848+01:00" stamp is good.
2022-12-05 10:14:18.847 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:14:18.848 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:18.849 +01:00 [INF] MeasuringDataStore 2022-12-5-10-14.txt -> Data is stored: 10.10.10.10;2022-12-05 10:14:18,842;3;18,846553802490234
2022-12-05 10:14:18.850 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:14:18,842;3;18,846553802490234 stored.
2022-12-05 10:14:18.852 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:19.835 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:19
2022-12-05 10:14:19.836 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:14:19.838 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:14:19.850 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:14:19)
2022-12-05 10:14:19.853 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,51%. is added to queue
2022-12-05 10:14:19.856 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:14:19.8509681+01:00" stamp is good.
2022-12-05 10:14:19.857 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:14:19.858 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:19.859 +01:00 [INF] MeasuringDataStore 2022-12-5-10-14.txt -> Data is stored: 10.10.10.10;2022-12-05 10:14:19,850;4;37,51215744018555
2022-12-05 10:14:19.860 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:14:19,850;4;37,51215744018555 stored.
2022-12-05 10:14:19.862 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:20.630 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/10.10.10.10  
2022-12-05 10:14:20.631 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:20.633 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:20.635 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:14:20.636 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 1000 
2022-12-05 10:14:20.638 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:14:20.639 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 4.0211ms
2022-12-05 10:14:20.641 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:20.643 +01:00 [INF] Request finished in 13.4837ms 200 application/json; charset=utf-8
2022-12-05 10:14:20.650 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/20.20.20.20  
2022-12-05 10:14:20.651 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:20.653 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:20.656 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 20.20.20.20
2022-12-05 10:14:20.658 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 4000 
2022-12-05 10:14:20.659 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:14:20.660 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 4.1274ms
2022-12-05 10:14:20.662 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:20.666 +01:00 [INF] Request finished in 15.3033ms 200 application/json; charset=utf-8
2022-12-05 10:14:20.670 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/30.30.30.30  
2022-12-05 10:14:20.671 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:20.673 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:20.675 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:14:20.675 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 3000 
2022-12-05 10:14:20.676 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:14:20.677 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 3.04ms
2022-12-05 10:14:20.679 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:20.682 +01:00 [INF] Request finished in 12.1049ms 200 application/json; charset=utf-8
2022-12-05 10:14:20.838 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:20
2022-12-05 10:14:20.840 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:14:20.841 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:14:20.869 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:14:20)
2022-12-05 10:14:20.871 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 42,13%. is added to queue
2022-12-05 10:14:20.872 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:14:20.8697814+01:00" stamp is good.
2022-12-05 10:14:20.873 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:14:20.874 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:20.875 +01:00 [INF] MeasuringDataStore 2022-12-5-10-14.txt -> Data is stored: 10.10.10.10;2022-12-05 10:14:20,869;5;42,12898635864258
2022-12-05 10:14:20.877 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:14:20,869;5;42,12898635864258 stored.
2022-12-05 10:14:20.878 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:21.410 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 14:21
2022-12-05 10:14:21.412 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:14:21.413 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:14:21.427 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:14:21)
2022-12-05 10:14:21.429 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 18,6%. is added to queue
2022-12-05 10:14:21.431 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:14:21.4270736+01:00" stamp is good.
2022-12-05 10:14:21.432 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:14:21.433 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:21.434 +01:00 [INF] MeasuringDataStore 2022-12-5-10-14.txt -> Data is stored: 30.30.30.30;2022-12-05 10:14:21,427;2;18,60100746154785
2022-12-05 10:14:21.436 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:14:21,427;2;18,60100746154785 stored.
2022-12-05 10:14:21.437 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:21.854 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:21
2022-12-05 10:14:21.856 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:14:21.857 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:14:21.886 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:14:21)
2022-12-05 10:14:21.889 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 72,1%. is added to queue
2022-12-05 10:14:21.891 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:14:21.8869244+01:00" stamp is good.
2022-12-05 10:14:21.892 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:14:21.893 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:21.895 +01:00 [INF] MeasuringDataStore 2022-12-5-10-14.txt -> Data is stored: 10.10.10.10;2022-12-05 10:14:21,886;6;72,09562683105469
2022-12-05 10:14:21.896 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:14:21,886;6;72,09562683105469 stored.
2022-12-05 10:14:21.898 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:22.718 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 14:22
2022-12-05 10:14:22.720 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:14:22.721 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:14:22.736 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:14:22)
2022-12-05 10:14:22.737 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 18,86%. is added to queue
2022-12-05 10:14:22.741 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:14:22.7362514+01:00" stamp is good.
2022-12-05 10:14:22.742 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:14:22.744 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:22.745 +01:00 [INF] MeasuringDataStore 2022-12-5-10-14.txt -> Data is stored: 20.20.20.20;2022-12-05 10:14:22,736;2;18,862062454223633
2022-12-05 10:14:22.746 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:14:22,736;2;18,862062454223633 stored.
2022-12-05 10:14:22.748 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:22.861 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:22
2022-12-05 10:14:22.863 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:14:22.864 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:14:22.877 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:14:22)
2022-12-05 10:14:22.880 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 18,6%. is added to queue
2022-12-05 10:14:22.882 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:14:22.8778761+01:00" stamp is good.
2022-12-05 10:14:22.883 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:14:22.884 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:22.885 +01:00 [INF] MeasuringDataStore 2022-12-5-10-14.txt -> Data is stored: 10.10.10.10;2022-12-05 10:14:22,877;7;18,59829330444336
2022-12-05 10:14:22.886 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:14:22,877;7;18,59829330444336 stored.
2022-12-05 10:14:22.888 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:23.870 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:23
2022-12-05 10:14:23.872 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:14:23.873 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:14:23.886 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:14:23)
2022-12-05 10:14:23.888 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:14:23.891 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:14:23.8861789+01:00" stamp is good.
2022-12-05 10:14:23.893 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:14:23.895 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:23.896 +01:00 [INF] MeasuringDataStore 2022-12-5-10-14.txt -> Data is stored: 10.10.10.10;2022-12-05 10:14:23,886;8;37,50136184692383
2022-12-05 10:14:23.897 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:14:23,886;8;37,50136184692383 stored.
2022-12-05 10:14:23.899 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:24.419 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 14:24
2022-12-05 10:14:24.423 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:14:24.424 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:14:24.435 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:14:24)
2022-12-05 10:14:24.439 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 0%. is added to queue
2022-12-05 10:14:24.441 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:14:24.4357568+01:00" stamp is good.
2022-12-05 10:14:24.442 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:14:24.444 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:24.445 +01:00 [INF] MeasuringDataStore 2022-12-5-10-14.txt -> Data is stored: 30.30.30.30;2022-12-05 10:14:24,435;3;0
2022-12-05 10:14:24.446 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:14:24,435;3;0 stored.
2022-12-05 10:14:24.448 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:24.882 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:24
2022-12-05 10:14:24.884 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:14:24.885 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:14:24.898 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:14:24)
2022-12-05 10:14:24.900 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 37,38%. is added to queue
2022-12-05 10:14:24.902 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:14:24.8987233+01:00" stamp is good.
2022-12-05 10:14:24.903 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:14:24.904 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:24.906 +01:00 [INF] MeasuringDataStore 2022-12-5-10-14.txt -> Data is stored: 10.10.10.10;2022-12-05 10:14:24,898;9;37,38290023803711
2022-12-05 10:14:24.907 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:14:24,898;9;37,38290023803711 stored.
2022-12-05 10:14:24.909 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:25.890 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:25
2022-12-05 10:14:25.892 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:14:25.893 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:14:25.906 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:14:25)
2022-12-05 10:14:25.909 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 35,04%. is added to queue
2022-12-05 10:14:25.910 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:14:25.9066926+01:00" stamp is good.
2022-12-05 10:14:25.912 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:14:25.913 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:25.914 +01:00 [INF] MeasuringDataStore 2022-12-5-10-14.txt -> Data is stored: 10.10.10.10;2022-12-05 10:14:25,906;10;35,036048889160156
2022-12-05 10:14:25.915 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:14:25,906;10;35,036048889160156 stored.
2022-12-05 10:14:25.917 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:26.744 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 14:26
2022-12-05 10:14:26.746 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:14:26.747 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:14:26.776 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:14:26)
2022-12-05 10:14:26.778 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 51,17%. is added to queue
2022-12-05 10:14:26.779 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:14:26.7768110+01:00" stamp is good.
2022-12-05 10:14:26.780 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:14:26.781 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:26.782 +01:00 [INF] MeasuringDataStore 2022-12-5-10-14.txt -> Data is stored: 20.20.20.20;2022-12-05 10:14:26,776;3;51,17161178588867
2022-12-05 10:14:26.783 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:14:26,776;3;51,17161178588867 stored.
2022-12-05 10:14:26.785 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:26.900 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:26
2022-12-05 10:14:26.902 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:14:26.903 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:14:26.932 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:14:26)
2022-12-05 10:14:26.934 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 65,12%. is added to queue
2022-12-05 10:14:26.935 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:14:26.9328112+01:00" stamp is good.
2022-12-05 10:14:26.936 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:14:26.938 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:26.938 +01:00 [INF] MeasuringDataStore 2022-12-5-10-14.txt -> Data is stored: 10.10.10.10;2022-12-05 10:14:26,932;11;65,12335205078125
2022-12-05 10:14:26.940 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:14:26,932;11;65,12335205078125 stored.
2022-12-05 10:14:26.941 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:27.425 +01:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/interval/10.10.10.10/ application/json; charset=utf-8 19
2022-12-05 10:14:27.427 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.SetMDInsterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:27.428 +01:00 [INF] Route matched with {action = "SetMDInsterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SetMDInsterval(System.String, DataModel.MDDataModel.MDIntervalData) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:27.430 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:14:27.431 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> Interval: DataModel.MDDataModel.MDIntervalData 
2022-12-05 10:14:27.432 +01:00 [INF] MeasureDevice 10.10.10.10 -> New intaerval set: 1000
2022-12-05 10:14:27.433 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 14:27
2022-12-05 10:14:27.434 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:14:27.435 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:14:27.437 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.SetMDInsterval (MeasureDeviceServiceAPIProject) in 6.6976ms
2022-12-05 10:14:27.438 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:14:27.439 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.SetMDInsterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:27.442 +01:00 [INF] Request finished in 16.874ms 200 
2022-12-05 10:14:27.449 +01:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/interval/20.20.20.20/ application/json; charset=utf-8 19
2022-12-05 10:14:27.453 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.SetMDInsterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:27.455 +01:00 [INF] Route matched with {action = "SetMDInsterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SetMDInsterval(System.String, DataModel.MDDataModel.MDIntervalData) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:27.458 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:14:27.459 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> Interval: DataModel.MDDataModel.MDIntervalData 
2022-12-05 10:14:27.460 +01:00 [INF] MeasureDevice 20.20.20.20 -> New intaerval set: 4000
2022-12-05 10:14:27.461 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:14:27.462 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.SetMDInsterval (MeasureDeviceServiceAPIProject) in 5.3617ms
2022-12-05 10:14:27.464 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.SetMDInsterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:27.465 +01:00 [INF] Request finished in 16.6345ms 200 
2022-12-05 10:14:27.471 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:14:27)
2022-12-05 10:14:27.472 +01:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/api/interval/30.30.30.30/ application/json; charset=utf-8 19
2022-12-05 10:14:27.475 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 42,72%. is added to queue
2022-12-05 10:14:27.478 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.SetMDInsterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:27.480 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:14:27.4715083+01:00" stamp is good.
2022-12-05 10:14:27.481 +01:00 [INF] Route matched with {action = "SetMDInsterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SetMDInsterval(System.String, DataModel.MDDataModel.MDIntervalData) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:27.483 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:14:27.485 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 30.30.30.30
2022-12-05 10:14:27.486 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:27.489 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> Interval: DataModel.MDDataModel.MDIntervalData 
2022-12-05 10:14:27.490 +01:00 [INF] MeasuringDataStore 2022-12-5-10-14.txt -> Data is stored: 30.30.30.30;2022-12-05 10:14:27,471;4;42,7214469909668
2022-12-05 10:14:27.491 +01:00 [INF] MeasureDevice 30.30.30.30 -> New intaerval set: 3000
2022-12-05 10:14:27.492 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:14:27,471;4;42,7214469909668 stored.
2022-12-05 10:14:27.493 +01:00 [INF] Executing HttpStatusCodeResult, setting HTTP status code 200
2022-12-05 10:14:27.495 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:27.496 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.SetMDInsterval (MeasureDeviceServiceAPIProject) in 10.9635ms
2022-12-05 10:14:27.498 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.SetMDInsterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:27.500 +01:00 [INF] Request finished in 27.7827ms 200 
2022-12-05 10:14:27.530 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/10.10.10.10  
2022-12-05 10:14:27.531 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:27.532 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:27.535 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:14:27.536 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 100000 
2022-12-05 10:14:27.538 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:14:27.540 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 4.9871ms
2022-12-05 10:14:27.542 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:27.543 +01:00 [INF] Request finished in 13.4289ms 200 application/json; charset=utf-8
2022-12-05 10:14:27.548 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/20.20.20.20  
2022-12-05 10:14:27.552 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:27.554 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:27.556 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 20.20.20.20
2022-12-05 10:14:27.557 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 400000 
2022-12-05 10:14:27.558 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:14:27.560 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 3.7791ms
2022-12-05 10:14:27.561 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:27.563 +01:00 [INF] Request finished in 14.3197ms 200 application/json; charset=utf-8
2022-12-05 10:14:27.571 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/30.30.30.30  
2022-12-05 10:14:27.572 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:27.573 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:27.576 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:14:27.577 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 300000 
2022-12-05 10:14:27.578 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:14:27.580 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 4.0526ms
2022-12-05 10:14:27.584 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:27.585 +01:00 [INF] Request finished in 14.3226ms 200 application/json; charset=utf-8
2022-12-05 10:14:27.919 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 14:27
2022-12-05 10:14:27.921 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:14:27.923 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:14:27.950 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:14:27)
2022-12-05 10:14:27.952 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 62,44%. is added to queue
2022-12-05 10:14:27.953 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:14:27.9507348+01:00" stamp is good.
2022-12-05 10:14:27.955 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:14:27.956 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:27.957 +01:00 [INF] MeasuringDataStore 2022-12-5-10-14.txt -> Data is stored: 10.10.10.10;2022-12-05 10:14:27,950;12;62,43783187866211
2022-12-05 10:14:27.958 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:14:27,950;12;62,43783187866211 stored.
2022-12-05 10:14:27.959 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:28.997 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/10.10.10.10  
2022-12-05 10:14:28.998 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:28.999 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:29.001 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:14:29.002 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 100000 
2022-12-05 10:14:29.003 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:14:29.004 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 3.7913ms
2022-12-05 10:14:29.006 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:29.007 +01:00 [INF] Request finished in 10.3799ms 200 application/json; charset=utf-8
2022-12-05 10:14:29.011 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/20.20.20.20  
2022-12-05 10:14:29.012 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:29.013 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:29.015 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 20.20.20.20
2022-12-05 10:14:29.016 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 400000 
2022-12-05 10:14:29.017 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:14:29.022 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 6.8694ms
2022-12-05 10:14:29.023 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:29.024 +01:00 [INF] Request finished in 13.079ms 200 application/json; charset=utf-8
2022-12-05 10:14:29.029 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/30.30.30.30  
2022-12-05 10:14:29.030 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:29.031 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:29.033 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:14:29.034 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 300000 
2022-12-05 10:14:29.035 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:14:29.036 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 3.2543ms
2022-12-05 10:14:29.041 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:29.042 +01:00 [INF] Request finished in 13.3318ms 200 application/json; charset=utf-8
2022-12-05 10:14:30.316 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/10.10.10.10  
2022-12-05 10:14:30.318 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:30.319 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:30.321 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:14:30.322 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 100000 
2022-12-05 10:14:30.324 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:14:30.325 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 3.5635ms
2022-12-05 10:14:30.327 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:30.328 +01:00 [INF] Request finished in 11.5766ms 200 application/json; charset=utf-8
2022-12-05 10:14:30.333 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/20.20.20.20  
2022-12-05 10:14:30.337 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:30.338 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:30.341 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 20.20.20.20
2022-12-05 10:14:30.342 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 400000 
2022-12-05 10:14:30.343 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:14:30.344 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 3.4511ms
2022-12-05 10:14:30.346 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:30.347 +01:00 [INF] Request finished in 13.9703ms 200 application/json; charset=utf-8
2022-12-05 10:14:30.351 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/30.30.30.30  
2022-12-05 10:14:30.352 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:30.356 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:30.359 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:14:30.360 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 300000 
2022-12-05 10:14:30.361 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:14:30.362 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 3.5537ms
2022-12-05 10:14:30.364 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:30.365 +01:00 [INF] Request finished in 13.4579ms 200 application/json; charset=utf-8
2022-12-05 10:14:30.447 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 14:30
2022-12-05 10:14:30.449 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:14:30.450 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:14:30.463 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:14:30)
2022-12-05 10:14:30.466 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 37,5%. is added to queue
2022-12-05 10:14:30.467 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:14:30.4636803+01:00" stamp is good.
2022-12-05 10:14:30.468 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:14:30.470 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:30.471 +01:00 [INF] MeasuringDataStore 2022-12-5-10-14.txt -> Data is stored: 30.30.30.30;2022-12-05 10:14:30,463;5;37,50175857543945
2022-12-05 10:14:30.473 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:14:30,463;5;37,50175857543945 stored.
2022-12-05 10:14:30.474 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:30.760 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 14:30
2022-12-05 10:14:30.762 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:14:30.763 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:14:30.793 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:14:30)
2022-12-05 10:14:30.795 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 58,15%. is added to queue
2022-12-05 10:14:30.797 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:14:30.7930687+01:00" stamp is good.
2022-12-05 10:14:30.798 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:14:30.799 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:30.800 +01:00 [INF] MeasuringDataStore 2022-12-5-10-14.txt -> Data is stored: 20.20.20.20;2022-12-05 10:14:30,793;4;58,14684295654297
2022-12-05 10:14:30.802 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:14:30,793;4;58,14684295654297 stored.
2022-12-05 10:14:30.803 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-14.txt
2022-12-05 10:14:35.924 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/10.10.10.10  
2022-12-05 10:14:35.926 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:35.927 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:35.930 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:14:35.931 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 100000 
2022-12-05 10:14:35.933 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:14:35.934 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 3.6576ms
2022-12-05 10:14:35.935 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:35.937 +01:00 [INF] Request finished in 12.5243ms 200 application/json; charset=utf-8
2022-12-05 10:14:35.944 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/20.20.20.20  
2022-12-05 10:14:35.948 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:35.950 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:35.952 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 20.20.20.20
2022-12-05 10:14:35.953 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 400000 
2022-12-05 10:14:35.954 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:14:35.956 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 4.1053ms
2022-12-05 10:14:35.957 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:35.959 +01:00 [INF] Request finished in 14.6ms 200 application/json; charset=utf-8
2022-12-05 10:14:35.965 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/interval/30.30.30.30  
2022-12-05 10:14:35.966 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:35.968 +01:00 [INF] Route matched with {action = "GetMDInterval", controller = "MDIntervalContoller"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetMDInterval(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:35.973 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:14:35.974 +01:00 [INF] MDIntervalContoller -> ControllingMeasuring -> State: 300000 
2022-12-05 10:14:35.975 +01:00 [INF] Executing ObjectResult, writing value of type 'System.Int64'.
2022-12-05 10:14:35.977 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject) in 3.4722ms
2022-12-05 10:14:35.978 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDIntervalContoller.GetMDInterval (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:35.979 +01:00 [INF] Request finished in 14.043ms 200 application/json; charset=utf-8
2022-12-05 10:14:38.615 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/10.10.10.10/state  
2022-12-05 10:14:38.616 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:38.618 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:38.621 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 10.10.10.10.
2022-12-05 10:14:38.622 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":100000,"$type":"MDState"} 
2022-12-05 10:14:38.627 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:14:38.629 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 8.1047ms
2022-12-05 10:14:38.631 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:38.635 +01:00 [INF] Request finished in 19.8599ms 200 application/json; charset=utf-8
2022-12-05 10:14:38.640 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/20.20.20.20/state  
2022-12-05 10:14:38.641 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:38.644 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:38.647 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 20.20.20.20.
2022-12-05 10:14:38.651 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":400000,"$type":"MDState"} 
2022-12-05 10:14:38.657 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:14:38.658 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 11.0076ms
2022-12-05 10:14:38.660 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:38.661 +01:00 [INF] Request finished in 21.2287ms 200 application/json; charset=utf-8
2022-12-05 10:14:38.669 +01:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/30.30.30.30/state  
2022-12-05 10:14:38.670 +01:00 [INF] Executing endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:38.671 +01:00 [INF] Route matched with {action = "GetState", controller = "MDStateContollers"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetState(System.String) on controller MeasureDeviceServiceAPIProject.Controllers.MDStateContollers (MeasureDeviceServiceAPIProject).
2022-12-05 10:14:38.673 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> IP Address: 30.30.30.30.
2022-12-05 10:14:38.674 +01:00 [INF] MDStateContollers -> ControllingMeasuring -> State: {"IsWorking":true,"IsMeasuring":true,"MeasuringInterval":300000,"$type":"MDState"} 
2022-12-05 10:14:38.677 +01:00 [INF] Executing ObjectResult, writing value of type 'DataModel.MDDataModel.MDState'.
2022-12-05 10:14:38.678 +01:00 [INF] Executed action MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject) in 5.3668ms
2022-12-05 10:14:38.682 +01:00 [INF] Executed endpoint 'MeasureDeviceServiceAPIProject.Controllers.MDStateContollers.GetState (MeasureDeviceServiceAPIProject)'
2022-12-05 10:14:38.683 +01:00 [INF] Request finished in 14.661ms 200 application/json; charset=utf-8
2022-12-05 10:15:00.793 +01:00 [INF] Application is shutting down...
2022-12-05 10:15:05.789 +01:00 [FTL] measuring-system stopped unexpectedly
2022-12-05 10:15:05.790 +01:00 [FTL] The operation was canceled.
2022-12-05 10:15:10.435 +01:00 [INF] measuring-system started
2022-12-05 10:15:10.566 +01:00 [INF] MeasureDevice 10.10.10.10 -> Path is d:\tuw\log\
2022-12-05 10:15:10.570 +01:00 [INF] MeasureDevice 10.10.10.10 -> Initialize device...
2022-12-05 10:15:10.578 +01:00 [INF] MeasureDevice 20.20.20.20 -> Path is d:\tuw\log\
2022-12-05 10:15:10.579 +01:00 [INF] MeasureDevice 10.10.10.10 -> StoringDataPeriodically->Init
2022-12-05 10:15:10.579 +01:00 [INF] MeasureDevice 20.20.20.20 -> Initialize device...
2022-12-05 10:15:10.581 +01:00 [INF] MeasureDevice 10.10.10.10 -> StoringDataPeriodically->Init->Path is d:\tuw\log\
2022-12-05 10:15:10.583 +01:00 [INF] SendBackupFileSystem -> Send Started
2022-12-05 10:15:10.587 +01:00 [INF] MeasureDevice 20.20.20.20 -> StoringDataPeriodically->Init
2022-12-05 10:15:10.587 +01:00 [INF] SendBackupFileSystem -> Send Started
2022-12-05 10:15:10.587 +01:00 [INF] MeasureDevice 30.30.30.30 -> Path is d:\tuw\log\
2022-12-05 10:15:10.588 +01:00 [INF] SendBackupFileSystem ->Found closd TXT file. Rename to BAK extenson: d:\tuw\log\10.10.10.10\2022-12-5-10-14.txt
2022-12-05 10:15:10.588 +01:00 [INF] MeasureDevice 20.20.20.20 -> StoringDataPeriodically->Init->Path is d:\tuw\log\
2022-12-05 10:15:10.592 +01:00 [INF] SendBackupFileSystem ->Found closd TXT file. Rename to BAK extenson: d:\tuw\log\20.20.20.20\2022-12-5-10-14.txt
2022-12-05 10:15:10.593 +01:00 [INF] MeasureDevice 30.30.30.30 -> Initialize device...
2022-12-05 10:15:10.594 +01:00 [INF] SendBackupFileSystem -> GetBackupFiles->Found 4 txt file.
2022-12-05 10:15:10.596 +01:00 [INF] SendBackupFileSystem -> GetBackupFiles->Found 5 txt file.
2022-12-05 10:15:10.600 +01:00 [INF] SendBackupFileSystem -> Precessed file:d:\tuw\log\10.10.10.10\2022-12-5-10-11.bak.
2022-12-05 10:15:10.601 +01:00 [INF] SendBackupFileSystem -> Precessed file:d:\tuw\log\20.20.20.20\2022-12-5-10-10.bak.
2022-12-05 10:15:10.602 +01:00 [INF] SendBackupFileSystem -> Number of line in file 11.
2022-12-05 10:15:10.604 +01:00 [INF] SendBackupFileSystem -> Number of line in file 25.
2022-12-05 10:15:10.608 +01:00 [INF] MeasureDevice 30.30.30.30 -> StoringDataPeriodically->Init
2022-12-05 10:15:10.608 +01:00 [INF] SendBackupFileSystem -> Send Started
2022-12-05 10:15:10.611 +01:00 [INF] MeasureDevice 30.30.30.30 -> StoringDataPeriodically->Init->Path is d:\tuw\log\
2022-12-05 10:15:10.613 +01:00 [INF] SendBackupFileSystem ->Found closd TXT file. Rename to BAK extenson: d:\tuw\log\30.30.30.30\2022-12-5-10-14.txt
2022-12-05 10:15:10.614 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:10.614 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:10.615 +01:00 [INF] SendBackupFileSystem -> GetBackupFiles->Found 4 txt file.
2022-12-05 10:15:10.618 +01:00 [INF] SendBackupFileSystem -> Precessed file:d:\tuw\log\30.30.30.30\2022-12-5-10-11.bak.
2022-12-05 10:15:10.619 +01:00 [INF] MeasureDevice 10.10.10.10 -> StartAsync
2022-12-05 10:15:10.619 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:03,227;2;74,9988784790039
2022-12-05 10:15:10.619 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:11:06,812;2;54,94086456298828
2022-12-05 10:15:10.620 +01:00 [INF] SendBackupFileSystem -> Number of line in file 5.
2022-12-05 10:15:10.623 +01:00 [INF] MeasureDevice 10.10.10.10 -> StartAsync, mesuring interval is 5000
2022-12-05 10:15:10.627 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:10.628 +01:00 [INF] Token cancel is not requested
2022-12-05 10:15:10.629 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:11:46,070;2;62,50128173828125
2022-12-05 10:15:10.631 +01:00 [INF] MeasureDeviceAPIService -> Uri is http://localhost:5001/api/md/
2022-12-05 10:15:10.636 +01:00 [INF] MeasureDeviceAPIService -> Sended data -> {"Id":1,"Name":"10.10.10.10","Interval":5000,"$type":"EFMeasureDevice"}
2022-12-05 10:15:10.872 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:10.872 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:10.872 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:10.878 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:10.878 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:10.878 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:10.879 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:10.880 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:10.881 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:10.882 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:11:49,078;3;37,500160217285156
2022-12-05 10:15:10.883 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:11:11,824;3;49,995201110839844
2022-12-05 10:15:10.884 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:05,242;3;74,99871826171875
2022-12-05 10:15:10.896 +01:00 [INF] MeasureDeviceAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:10.900 +01:00 [INF] MeasureDevice 10.10.10.10 -> ExecuteAsync
2022-12-05 10:15:10.902 +01:00 [INF] ExecuteAsync Token cancel is not requested
2022-12-05 10:15:10.904 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 15:10
2022-12-05 10:15:10.939 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:10.941 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:10.942 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:10.943 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:11:52,083;4;18,603721618652344
2022-12-05 10:15:10.954 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:10.956 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:10.957 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:10.957 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:10.958 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:10.959 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:11:16,838;4;62,496238708496094
2022-12-05 10:15:10.961 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:10.963 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:07,255;4;79,07643127441406
2022-12-05 10:15:10.999 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.000 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.001 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.002 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:11:55,104;5;65,50010681152344
2022-12-05 10:15:11.023 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.024 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.025 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.026 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.029 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.030 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:11:23,842;5;67,45348358154297
2022-12-05 10:15:11.031 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.033 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:09,252;5;75,00303649902344
2022-12-05 10:15:11.066 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.067 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.069 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.070 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:11:58,124;6;31,062009811401367
2022-12-05 10:15:11.089 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.094 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.096 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.096 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.097 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:11:30,869;6;49,99679946899414
2022-12-05 10:15:11.098 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.100 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.101 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:11,267;6;74,99951934814453
2022-12-05 10:15:11.127 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.130 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.132 +01:00 [INF] SendBackupFileSystem -> All line from d:\tuw\log\30.30.30.30\2022-12-5-10-11.bak is sended.
2022-12-05 10:15:11.134 +01:00 [INF] SendBackupFileSystem -> Precessed file:d:\tuw\log\30.30.30.30\2022-12-5-10-12.bak.
2022-12-05 10:15:11.139 +01:00 [INF] SendBackupFileSystem -> Number of line in file 19.
2022-12-05 10:15:11.140 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.141 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:12:04,147;2;37,49951934814453
2022-12-05 10:15:11.148 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.149 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.150 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.154 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:11:44,669;7;62,50128173828125
2022-12-05 10:15:11.160 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.161 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.163 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.164 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:13,268;7;75,00048065185547
2022-12-05 10:15:11.201 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.203 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.204 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.205 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:12:07,162;3;37,50136184692383
2022-12-05 10:15:11.212 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.213 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.217 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.218 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:11:44,892;8;18,6200008392334
2022-12-05 10:15:11.223 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.225 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.226 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.228 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:15,286;8;75,00208282470703
2022-12-05 10:15:11.270 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.272 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.273 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.275 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:12:10,198;4;72,09602355957031
2022-12-05 10:15:11.280 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.281 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.283 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.284 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:11:51,701;9;65,12297821044922
2022-12-05 10:15:11.284 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.286 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.287 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.288 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:17,300;9;74,99791717529297
2022-12-05 10:15:11.334 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.335 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.337 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.338 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:12:13,215;5;77,47615051269531
2022-12-05 10:15:11.343 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.344 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.345 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.346 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:11:51,909;10;24,868440628051758
2022-12-05 10:15:11.348 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.349 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.350 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.352 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:19,315;10;74,99935913085938
2022-12-05 10:15:11.401 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.403 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.405 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.407 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:12:16,212;6;37,50136184692383
2022-12-05 10:15:11.414 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.415 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.415 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.416 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.420 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.421 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.422 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:11:58,707;11;24,875185012817383
2022-12-05 10:15:11.423 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:21,329;11;67,44236755371094
2022-12-05 10:15:11.475 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.477 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.478 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.479 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:12:19,224;7;18,619321823120117
2022-12-05 10:15:11.483 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.484 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.484 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.485 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.486 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.487 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.488 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:11:58,930;12;82,24309539794922
2022-12-05 10:15:11.489 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:23,343;12;67,44535064697266
2022-12-05 10:15:11.530 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.532 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.533 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.534 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:12:22,246;8;58,191490173339844
2022-12-05 10:15:11.551 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.552 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.553 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.553 +01:00 [INF] SendBackupFileSystem -> All line from d:\tuw\log\10.10.10.10\2022-12-5-10-11.bak is sended.
2022-12-05 10:15:11.554 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.556 +01:00 [INF] SendBackupFileSystem -> Precessed file:d:\tuw\log\10.10.10.10\2022-12-5-10-12.bak.
2022-12-05 10:15:11.557 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.562 +01:00 [INF] SendBackupFileSystem -> Number of line in file 278.
2022-12-05 10:15:11.562 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:25,361;13;100
2022-12-05 10:15:11.563 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.565 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:05,937;2;18,621356964111328
2022-12-05 10:15:11.594 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.595 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.596 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.597 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:12:25,240;9;18,85531997680664
2022-12-05 10:15:11.631 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.633 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.634 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.635 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:27,379;14;75,0014419555664
2022-12-05 10:15:11.635 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.637 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.639 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.640 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:12,740;3;37,50495910644531
2022-12-05 10:15:11.665 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.666 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.669 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.670 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:12:28,243;10;49,99711990356445
2022-12-05 10:15:11.694 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.695 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.697 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.698 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:29,404;15;75,00479888916016
2022-12-05 10:15:11.705 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.707 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.709 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.710 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:12,942;4;46,72933578491211
2022-12-05 10:15:11.733 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.735 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.736 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.738 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:12:31,249;11;49,993919372558594
2022-12-05 10:15:11.758 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.759 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.764 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.765 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:31,410;16;100
2022-12-05 10:15:11.769 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.770 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.771 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.772 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:19,755;5;37,50056076049805
2022-12-05 10:15:11.799 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.800 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.801 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.802 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:12:34,279;12;84,97517395019531
2022-12-05 10:15:11.831 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.833 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.834 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.835 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:33,417;17;75,00224304199219
2022-12-05 10:15:11.839 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.840 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.841 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.842 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:19,959;6;37,500160217285156
2022-12-05 10:15:11.867 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.868 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.870 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.873 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:12:37,271;13;50,04252243041992
2022-12-05 10:15:11.907 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.908 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.909 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.910 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:35,439;18;83,72199249267578
2022-12-05 10:15:11.915 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.916 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.919 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.920 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:26,763;7;11,209710121154785
2022-12-05 10:15:11.939 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.941 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.942 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.943 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:12:40,280;14;37,498958587646484
2022-12-05 10:15:11.970 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.972 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.973 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.974 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:37,453;19;75,0035171508789
2022-12-05 10:15:11.984 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:11.985 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:11.986 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:11.988 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:26,977;8;49,999359130859375
2022-12-05 10:15:11.999 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.000 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.001 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.003 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:12:43,292;15;37,51191711425781
2022-12-05 10:15:12.039 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.041 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.042 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.043 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:39,468;20;100
2022-12-05 10:15:12.047 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.048 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.049 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.050 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:33,785;9;33,641380310058594
2022-12-05 10:15:12.069 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.070 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.072 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.075 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:12:46,300;16;24,842872619628906
2022-12-05 10:15:12.113 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.114 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.115 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.116 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:41,472;21;82,24131774902344
2022-12-05 10:15:12.123 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.125 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.126 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.127 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:33,991;10;18,59829330444336
2022-12-05 10:15:12.138 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.139 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.141 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.142 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:12:49,323;17;51,172489166259766
2022-12-05 10:15:12.172 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.174 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.175 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.176 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:43,483;22;74,99759674072266
2022-12-05 10:15:12.184 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.185 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.186 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.187 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:40,811;11;18,530384063720703
2022-12-05 10:15:12.195 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.196 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.197 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.198 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:12:52,352;18;62,432918548583984
2022-12-05 10:15:12.232 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.234 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.235 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.236 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:45,486;23;87,50039672851562
2022-12-05 10:15:12.245 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.246 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.247 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.251 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:40,923;12;18,63966178894043
2022-12-05 10:15:12.261 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.262 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.266 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.267 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:12:55,366;19;51,16735076904297
2022-12-05 10:15:12.299 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.301 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.302 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.303 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:47,513;24;84,37854766845703
2022-12-05 10:15:12.308 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.310 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.311 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.314 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:41,003;13;18,59964942932129
2022-12-05 10:15:12.325 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.326 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.329 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.331 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:12:58,361;20;49,84914779663086
2022-12-05 10:15:12.363 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.365 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.366 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.367 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:49,519;25;75
2022-12-05 10:15:12.372 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.373 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.374 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.376 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:41,035;14;11,220909118652344
2022-12-05 10:15:12.385 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.390 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.391 +01:00 [INF] SendBackupFileSystem -> All line from d:\tuw\log\30.30.30.30\2022-12-5-10-12.bak is sended.
2022-12-05 10:15:12.393 +01:00 [INF] SendBackupFileSystem -> Precessed file:d:\tuw\log\30.30.30.30\2022-12-5-10-13.bak.
2022-12-05 10:15:12.394 +01:00 [INF] SendBackupFileSystem -> Number of line in file 5.
2022-12-05 10:15:12.396 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.397 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:13:04,383;2;50,00191879272461
2022-12-05 10:15:12.423 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.424 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.425 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.427 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:10:51,555;26;85,2323989868164
2022-12-05 10:15:12.430 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.431 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.432 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.435 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:41,113;15;18,754732131958008
2022-12-05 10:15:12.457 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.459 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.460 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.461 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:13:07,394;3;37,50136184692383
2022-12-05 10:15:12.483 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.484 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.485 +01:00 [INF] SendBackupFileSystem -> All line from d:\tuw\log\20.20.20.20\2022-12-5-10-10.bak is sended.
2022-12-05 10:15:12.487 +01:00 [INF] SendBackupFileSystem -> Precessed file:d:\tuw\log\20.20.20.20\2022-12-5-10-11.bak.
2022-12-05 10:15:12.488 +01:00 [INF] SendBackupFileSystem -> Number of line in file 6.
2022-12-05 10:15:12.489 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.489 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.491 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.492 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:11:06,094;2;62,49359893798828
2022-12-05 10:15:12.493 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.495 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:41,144;16;11,497784614562988
2022-12-05 10:15:12.511 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.513 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.514 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.515 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:13:10,416;4;37,477352142333984
2022-12-05 10:15:12.548 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.550 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.550 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.551 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.552 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.553 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.554 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:11:43,150;3;43,75170135498047
2022-12-05 10:15:12.555 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:41,221;17;18,606958389282227
2022-12-05 10:15:12.581 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.582 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.583 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.584 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:13:36,251;5;62,502159118652344
2022-12-05 10:15:12.614 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.615 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.615 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.616 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.617 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.618 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.619 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:11:47,141;4;50,00703811645508
2022-12-05 10:15:12.620 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:41,252;18;0
2022-12-05 10:15:12.636 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.642 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.643 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.645 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:13:39,256;6;18,827665328979492
2022-12-05 10:15:12.684 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.685 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.685 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.686 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.687 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.689 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.690 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:11:51,168;5;65,1191177368164
2022-12-05 10:15:12.690 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:41,331;19;18,622713088989258
2022-12-05 10:15:12.710 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.711 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.712 +01:00 [INF] SendBackupFileSystem -> All line from d:\tuw\log\30.30.30.30\2022-12-5-10-13.bak is sended.
2022-12-05 10:15:12.714 +01:00 [INF] SendBackupFileSystem -> Precessed file:d:\tuw\log\30.30.30.30\2022-12-5-10-14.bak.
2022-12-05 10:15:12.716 +01:00 [INF] SendBackupFileSystem -> Number of line in file 4.
2022-12-05 10:15:12.718 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.719 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:14:21,427;2;18,60100746154785
2022-12-05 10:15:12.742 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.743 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.744 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.744 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.746 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.746 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:11:55,166;6;50
2022-12-05 10:15:12.750 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.752 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:41,363;20;11,20728874206543
2022-12-05 10:15:12.770 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.772 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.773 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.774 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:14:24,435;3;0
2022-12-05 10:15:12.797 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.799 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.800 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.801 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:11:59,177;7;11,230694770812988
2022-12-05 10:15:12.804 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.805 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.806 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.808 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:41,442;21;18,628137588500977
2022-12-05 10:15:12.831 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.832 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.833 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.834 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:14:27,471;4;42,7214469909668
2022-12-05 10:15:12.855 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.856 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.859 +01:00 [INF] SendBackupFileSystem -> All line from d:\tuw\log\20.20.20.20\2022-12-5-10-11.bak is sended.
2022-12-05 10:15:12.860 +01:00 [INF] SendBackupFileSystem -> Precessed file:d:\tuw\log\20.20.20.20\2022-12-5-10-12.bak.
2022-12-05 10:15:12.862 +01:00 [INF] SendBackupFileSystem -> Number of line in file 14.
2022-12-05 10:15:12.863 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.864 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:12:07,209;2;37,5111198425293
2022-12-05 10:15:12.864 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.866 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.867 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.868 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:41,473;22;11,224944114685059
2022-12-05 10:15:12.893 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.894 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.895 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.896 +01:00 [INF] CPUAPIService -> Sended data -> 30.30.30.30;2022-12-05 10:14:30,463;5;37,50175857543945
2022-12-05 10:15:12.916 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.917 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.918 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.919 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:12:11,219;3;11,496179580688477
2022-12-05 10:15:12.936 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.938 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.939 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.940 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:41,552;23;21,98655891418457
2022-12-05 10:15:12.964 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.965 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.968 +01:00 [INF] SendBackupFileSystem -> All line from d:\tuw\log\30.30.30.30\2022-12-5-10-14.bak is sended.
2022-12-05 10:15:12.978 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.979 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.981 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.982 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:12:15,228;4;100
2022-12-05 10:15:12.987 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:12.988 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:12.990 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:12.991 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:41,583;24;13,455999374389648
2022-12-05 10:15:13.023 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.024 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.025 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.026 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:12:19,240;5;0
2022-12-05 10:15:13.028 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.030 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.031 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.032 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:41,663;25;35,036048889160156
2022-12-05 10:15:13.064 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.066 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.067 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.068 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:12:23,250;6;37,502960205078125
2022-12-05 10:15:13.069 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.070 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.071 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.073 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:41,711;26;59,3071174621582
2022-12-05 10:15:13.104 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.106 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.108 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.109 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:12:27,259;7;50,00096130371094
2022-12-05 10:15:13.111 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.113 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.114 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.115 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:41,775;27;51,15782928466797
2022-12-05 10:15:13.146 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.147 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.149 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.150 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:12:31,265;8;50,006717681884766
2022-12-05 10:15:13.150 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.152 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.153 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.154 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:41,823;28;69,95111083984375
2022-12-05 10:15:13.192 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.193 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.194 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.195 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.195 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:12:35,273;9;11,206480979919434
2022-12-05 10:15:13.196 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.198 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.199 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:41,903;29;72,1266860961914
2022-12-05 10:15:13.234 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.236 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.237 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.238 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:12:39,285;10;49,99711990356445
2022-12-05 10:15:13.241 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.242 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.243 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.244 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:41,935;30;77,48432159423828
2022-12-05 10:15:13.275 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.277 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.278 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.279 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:12:43,334;11;34,58254623413086
2022-12-05 10:15:13.284 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.285 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.287 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.288 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:41,998;31;11,203251838684082
2022-12-05 10:15:13.316 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.317 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.318 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.319 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:12:47,333;12;37,50895690917969
2022-12-05 10:15:13.329 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.331 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.332 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.333 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:42,045;32;18,616453170776367
2022-12-05 10:15:13.362 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.363 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.364 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.365 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:12:51,334;13;21,85468292236328
2022-12-05 10:15:13.368 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.369 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.370 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.371 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:42,120;33;50,01247787475586
2022-12-05 10:15:13.414 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.415 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.416 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.417 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:12:55,366;14;53,49312210083008
2022-12-05 10:15:13.423 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.424 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.425 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.426 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:42,183;34;71,05474090576172
2022-12-05 10:15:13.460 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.461 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.462 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.463 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:12:59,370;15;25,004959106445312
2022-12-05 10:15:13.465 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.466 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.467 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.468 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:42,235;35;49,994239807128906
2022-12-05 10:15:13.506 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.508 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.509 +01:00 [INF] SendBackupFileSystem -> All line from d:\tuw\log\20.20.20.20\2022-12-5-10-12.bak is sended.
2022-12-05 10:15:13.510 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.510 +01:00 [INF] SendBackupFileSystem -> Precessed file:d:\tuw\log\20.20.20.20\2022-12-5-10-13.bak.
2022-12-05 10:15:13.511 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.512 +01:00 [INF] SendBackupFileSystem -> Number of line in file 2.
2022-12-05 10:15:13.513 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.514 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.515 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:42,283;36;78,28803253173828
2022-12-05 10:15:13.515 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:13:07,394;2;37,50136184692383
2022-12-05 10:15:13.555 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.556 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.557 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.558 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.558 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:42,344;37;0
2022-12-05 10:15:13.559 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.561 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.562 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:13:34,635;3;81,24769592285156
2022-12-05 10:15:13.599 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.600 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.602 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.602 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.603 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:42,391;38;2,376192092895508
2022-12-05 10:15:13.604 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.606 +01:00 [INF] SendBackupFileSystem -> All line from d:\tuw\log\20.20.20.20\2022-12-5-10-13.bak is sended.
2022-12-05 10:15:13.608 +01:00 [INF] SendBackupFileSystem -> Precessed file:d:\tuw\log\20.20.20.20\2022-12-5-10-14.bak.
2022-12-05 10:15:13.609 +01:00 [INF] SendBackupFileSystem -> Number of line in file 3.
2022-12-05 10:15:13.611 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.612 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:14:22,736;2;18,862062454223633
2022-12-05 10:15:13.650 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.651 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.652 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.653 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:42,470;39;11,212132453918457
2022-12-05 10:15:13.654 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.656 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.657 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.658 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:14:26,776;3;51,17161178588867
2022-12-05 10:15:13.689 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.690 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.691 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.693 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:42,500;40;2,3293495178222656
2022-12-05 10:15:13.693 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.695 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.696 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.697 +01:00 [INF] CPUAPIService -> Sended data -> 20.20.20.20;2022-12-05 10:14:30,793;4;58,14684295654297
2022-12-05 10:15:13.729 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.731 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.732 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.733 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:42,589;41;50,00223922729492
2022-12-05 10:15:13.737 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.739 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.740 +01:00 [INF] SendBackupFileSystem -> All line from d:\tuw\log\20.20.20.20\2022-12-5-10-14.bak is sended.
2022-12-05 10:15:13.761 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.763 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.765 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.766 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:42,620;42;50,09996032714844
2022-12-05 10:15:13.792 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.793 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.796 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.797 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:42,698;43;49,920833587646484
2022-12-05 10:15:13.825 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.827 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.829 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.830 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:42,729;44;37,642234802246094
2022-12-05 10:15:13.856 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.858 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.859 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.860 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:42,807;45;37,506160736083984
2022-12-05 10:15:13.885 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.886 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.887 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.891 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:42,839;46;37,674232482910156
2022-12-05 10:15:13.927 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.928 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.930 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.931 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:42,917;47;37,50191879272461
2022-12-05 10:15:13.958 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.959 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.960 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.962 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:42,948;48;37,514957427978516
2022-12-05 10:15:13.989 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:13.990 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:13.991 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:13.992 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:43,026;49;24,997440338134766
2022-12-05 10:15:14.020 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.021 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.022 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.023 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:43,057;50;50,00511932373047
2022-12-05 10:15:14.051 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.052 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.053 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.055 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:43,135;51;50
2022-12-05 10:15:14.083 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.084 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.085 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.086 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:43,167;52;50,06327819824219
2022-12-05 10:15:14.119 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.120 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.122 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.123 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:43,245;53;37,36747741699219
2022-12-05 10:15:14.149 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.150 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.151 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.152 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:43,276;54;37,48655700683594
2022-12-05 10:15:14.193 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.195 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.196 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.197 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:43,350;55;25,060590744018555
2022-12-05 10:15:14.228 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.230 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.231 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.234 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:43,381;56;37,684810638427734
2022-12-05 10:15:14.260 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.262 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.263 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.264 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:43,459;57;37,51615524291992
2022-12-05 10:15:14.291 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.293 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.294 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.295 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:43,490;58;37,64582061767578
2022-12-05 10:15:14.327 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.329 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.330 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.331 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:43,568;59;37,49135971069336
2022-12-05 10:15:14.357 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.359 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.360 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.361 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:43,600;60;37,65632629394531
2022-12-05 10:15:14.388 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.390 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.391 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.392 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:43,678;61;49,99903869628906
2022-12-05 10:15:14.419 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.420 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.421 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.422 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:43,709;62;50
2022-12-05 10:15:14.451 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.452 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.453 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.455 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:43,786;63;39,908931732177734
2022-12-05 10:15:14.481 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.483 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.484 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.485 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:43,817;64;28,95595932006836
2022-12-05 10:15:14.518 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.520 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.521 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.523 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:43,902;65;62,57026672363281
2022-12-05 10:15:14.549 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.550 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.551 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.552 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:43,950;66;62,436004638671875
2022-12-05 10:15:14.590 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.591 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.593 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.594 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:44,014;67;18,605077743530273
2022-12-05 10:15:14.622 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.623 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.624 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.626 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:44,076;68;20,530868530273438
2022-12-05 10:15:14.653 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.655 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.656 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.657 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:44,124;69;18,60236358642578
2022-12-05 10:15:14.685 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.686 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.687 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.688 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:44,170;70;11,216873168945312
2022-12-05 10:15:14.717 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.718 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.719 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.720 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:44,234;71;34,87575149536133
2022-12-05 10:15:14.748 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.749 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.750 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.751 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:44,282;72;18,617965698242188
2022-12-05 10:15:14.781 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.783 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.784 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.785 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:44,344;73;28,950790405273438
2022-12-05 10:15:14.812 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.814 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.815 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.816 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:44,391;74;28,960481643676758
2022-12-05 10:15:14.844 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.845 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.846 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.848 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:44,452;75;50,0015983581543
2022-12-05 10:15:14.880 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.882 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.883 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.884 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:44,499;76;37,63602066040039
2022-12-05 10:15:14.909 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.910 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.912 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.914 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:44,561;77;37,483116149902344
2022-12-05 10:15:14.940 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.941 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.942 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.943 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:44,608;78;49,992000579833984
2022-12-05 10:15:14.972 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:14.973 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:14.974 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:14.976 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:44,671;79;11,480937957763672
2022-12-05 10:15:15.003 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.004 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.005 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.009 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:44,719;80;2,5398948192596436
2022-12-05 10:15:15.044 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.046 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.047 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.048 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:44,781;81;18,612539291381836
2022-12-05 10:15:15.075 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.077 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.078 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.079 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:44,827;82;35,05332946777344
2022-12-05 10:15:15.107 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.108 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.110 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.111 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:44,890;83;51,17616271972656
2022-12-05 10:15:15.137 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.139 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.140 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.141 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:44,937;84;18,61916732788086
2022-12-05 10:15:15.169 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.170 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.172 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.173 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:45,001;85;2,3469061851501465
2022-12-05 10:15:15.200 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.202 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.203 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.204 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:45,049;86;34,877925872802734
2022-12-05 10:15:15.231 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.232 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.234 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.235 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:45,111;87;28,863454818725586
2022-12-05 10:15:15.262 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.264 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.265 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.266 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:45,159;88;67,53218841552734
2022-12-05 10:15:15.302 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.304 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.305 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.306 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:45,223;89;28,9688777923584
2022-12-05 10:15:15.333 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.335 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.336 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.337 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:45,285;90;37,578460693359375
2022-12-05 10:15:15.364 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.365 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.367 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.369 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:45,332;91;37,50191879272461
2022-12-05 10:15:15.399 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.400 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.401 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.402 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:45,404;92;50,333377838134766
2022-12-05 10:15:15.434 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.435 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.436 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.438 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:45,435;93;61,57241439819336
2022-12-05 10:15:15.467 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.468 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.469 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.470 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:45,519;94;50,00191879272461
2022-12-05 10:15:15.499 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.501 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.502 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.503 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:45,550;95;37,502159118652344
2022-12-05 10:15:15.529 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.531 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.532 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.533 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:45,628;96;24,995840072631836
2022-12-05 10:15:15.569 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.571 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.572 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.573 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:45,660;97;37,51055908203125
2022-12-05 10:15:15.603 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.605 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.606 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.607 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:45,738;98;49,90156555175781
2022-12-05 10:15:15.635 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.636 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.638 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.639 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:45,769;99;50,087528228759766
2022-12-05 10:15:15.667 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.668 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.670 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.671 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:45,847;100;37,50775909423828
2022-12-05 10:15:15.700 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.701 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.702 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.703 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:45,878;101;49,917625427246094
2022-12-05 10:15:15.731 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.732 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.733 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.734 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:45,956;102;50,00223922729492
2022-12-05 10:15:15.769 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.771 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.772 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.773 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:45,988;103;62,50143814086914
2022-12-05 10:15:15.801 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.802 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.805 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.806 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:46,066;104;37,499359130859375
2022-12-05 10:15:15.836 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.837 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.839 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.840 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:46,097;105;37,33170700073242
2022-12-05 10:15:15.870 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.871 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.872 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.873 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:46,175;106;37,5007209777832
2022-12-05 10:15:15.902 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.904 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.905 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.906 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:46,206;107;37,6326789855957
2022-12-05 10:15:15.936 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.937 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.938 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.939 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:46,285;108;37,492958068847656
2022-12-05 10:15:15.967 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:15.969 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:15.970 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:15.971 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:46,316;109;37,50735855102539
2022-12-05 10:15:16.000 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.001 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.003 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.004 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:46,394;110;12,494799613952637
2022-12-05 10:15:16.017 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:15:16.018 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:15:16.042 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.043 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.044 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.045 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:46,425;111;37,63642120361328
2022-12-05 10:15:16.049 +01:00 [INF] MeasureDevice 20.20.20.20 -> StartAsync
2022-12-05 10:15:16.050 +01:00 [INF] MeasureDevice 20.20.20.20 -> StartAsync, mesuring interval is 2000
2022-12-05 10:15:16.052 +01:00 [INF] Token cancel is not requested
2022-12-05 10:15:16.055 +01:00 [INF] MeasureDeviceAPIService -> Uri is http://localhost:5001/api/md/
2022-12-05 10:15:16.057 +01:00 [INF] MeasureDeviceAPIService -> Sended data -> {"Id":2,"Name":"20.20.20.20","Interval":2000,"$type":"EFMeasureDevice"}
2022-12-05 10:15:16.087 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.088 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.089 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.090 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:46,503;112;37,502559661865234
2022-12-05 10:15:16.129 +01:00 [INF] MeasureDeviceAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.130 +01:00 [INF] MeasureDevice 20.20.20.20 -> ExecuteAsync
2022-12-05 10:15:16.132 +01:00 [INF] ExecuteAsync Token cancel is not requested
2022-12-05 10:15:16.133 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 15:16
2022-12-05 10:15:16.134 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:15:16.136 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:15:16.136 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.138 +01:00 [INF] MeasureDevice 30.30.30.30 -> StartAsync
2022-12-05 10:15:16.138 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.139 +01:00 [INF] MeasureDevice 30.30.30.30 -> StartAsync, mesuring interval is 3000
2022-12-05 10:15:16.140 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.142 +01:00 [INF] Token cancel is not requested
2022-12-05 10:15:16.143 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:46,534;113;37,499759674072266
2022-12-05 10:15:16.143 +01:00 [INF] MeasureDeviceAPIService -> Uri is http://localhost:5001/api/md/
2022-12-05 10:15:16.146 +01:00 [INF] MeasureDeviceAPIService -> Sended data -> {"Id":3,"Name":"30.30.30.30","Interval":3000,"$type":"EFMeasureDevice"}
2022-12-05 10:15:16.185 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.186 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.188 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.189 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:46,613;114;11,459268569946289
2022-12-05 10:15:16.224 +01:00 [INF] MeasureDeviceAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.226 +01:00 [INF] MeasureDevice 30.30.30.30 -> ExecuteAsync
2022-12-05 10:15:16.228 +01:00 [INF] ExecuteAsync Token cancel is not requested
2022-12-05 10:15:16.229 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 15:16
2022-12-05 10:15:16.230 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:15:16.231 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:15:16.234 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.235 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.236 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.237 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:46,645;115;11,210517883300781
2022-12-05 10:15:16.268 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.269 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.270 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.272 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:46,725;116;18,586076736450195
2022-12-05 10:15:16.299 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.300 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.302 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.304 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:46,756;117;0
2022-12-05 10:15:16.325 +01:00 [INF] Now listening on: http://localhost:5000
2022-12-05 10:15:16.326 +01:00 [INF] Application started. Press Ctrl+C to shut down.
2022-12-05 10:15:16.327 +01:00 [INF] Hosting environment: Development
2022-12-05 10:15:16.328 +01:00 [INF] Content root path: C:\csarp\tuw-app-end\measuring-device-service-api
2022-12-05 10:15:16.332 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.333 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.336 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.337 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:46,836;118;34,889320373535156
2022-12-05 10:15:16.364 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.366 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.367 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.368 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:46,867;119;64,4758529663086
2022-12-05 10:15:16.393 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.394 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.396 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.398 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:46,964;120;65,12210845947266
2022-12-05 10:15:16.424 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.425 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.426 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.427 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:46,995;121;63,82735824584961
2022-12-05 10:15:16.455 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.456 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.458 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.462 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:47,057;122;24,88462257385254
2022-12-05 10:15:16.492 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.493 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.494 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.495 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:47,106;123;76,56202697753906
2022-12-05 10:15:16.525 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.526 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.527 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.528 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:47,185;124;34,89555740356445
2022-12-05 10:15:16.566 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.567 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.568 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.570 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:47,201;125;0
2022-12-05 10:15:16.597 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.598 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.599 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.602 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:47,279;126;18,615253448486328
2022-12-05 10:15:16.627 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.629 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.630 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.633 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:47,311;127;11,220909118652344
2022-12-05 10:15:16.658 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.659 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.661 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.664 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:47,396;128;37,63426971435547
2022-12-05 10:15:16.689 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.690 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.691 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.693 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:47,427;129;37,57806396484375
2022-12-05 10:15:16.722 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.723 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.724 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.728 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:47,505;130;24,851064682006836
2022-12-05 10:15:16.754 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.755 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.758 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.759 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:47,536;131;37,69912338256836
2022-12-05 10:15:16.793 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.794 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.796 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.797 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:47,614;132;37,410831451416016
2022-12-05 10:15:16.824 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.825 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.827 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.828 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:47,646;133;50,13308334350586
2022-12-05 10:15:16.856 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.857 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.859 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.860 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:47,725;134;18,6200008392334
2022-12-05 10:15:16.887 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.888 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.889 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.891 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:47,773;135;53,19425964355469
2022-12-05 10:15:16.900 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:15:16)
2022-12-05 10:15:16.903 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:15:16.904 +01:00 [INF] MeasureDevice 10.10.10.10 -> StoringDataPeriodically->Init -> Peek first data: CPU usage-> 100%.
2022-12-05 10:15:16.906 +01:00 [INF] MeasureDevice 10.10.10.10 -> StoringDataPeriodically->Init -> First mesured data: CPU usage-> 100%.
2022-12-05 10:15:16.907 +01:00 [INF] MeasureDevice 10.10.10.10 -> StoringDataPeriodically->Init -> No sotre file id
2022-12-05 10:15:16.909 +01:00 [INF] MeasureDevice 10.10.10.10 -> StoringDataPeriodically->Init -> New sotre file id 2022-12-5-10-15.txt
2022-12-05 10:15:16.910 +01:00 [INF] MeasureDevice 10.10.10.10 -> StoringDataPeriodically->Init -> No CPU data store periodically
2022-12-05 10:15:16.912 +01:00 [INF] MeasureDevice 10.10.10.10 -> StoringDataPeriodically->Init -> New CPU data store d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:16.916 +01:00 [INF] MeasureDevice 10.10.10.10 -> StoringDataPeriodically->Init -> First Data Id is: 
2022-12-05 10:15:16.918 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:16.9005171+01:00" stamp is good.
2022-12-05 10:15:16.919 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.921 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:15:16.921 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.922 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:16.923 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.925 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:47,853;136;72,12519073486328
2022-12-05 10:15:16.926 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> File not exsist. File created.
2022-12-05 10:15:16.933 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:15:16,900;1;100 stored.
2022-12-05 10:15:16.935 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:16.962 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.963 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.965 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:16.966 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:47,883;137;66,02552032470703
2022-12-05 10:15:16.991 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:15:16)
2022-12-05 10:15:16.993 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 87,5%. is added to queue
2022-12-05 10:15:16.994 +01:00 [INF] MeasureDevice 20.20.20.20 -> StoringDataPeriodically->Init -> Peek first data: CPU usage-> 87,5%.
2022-12-05 10:15:16.994 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:16.996 +01:00 [INF] MeasureDevice 20.20.20.20 -> StoringDataPeriodically->Init -> First mesured data: CPU usage-> 87,5%.
2022-12-05 10:15:16.997 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:16.998 +01:00 [INF] MeasureDevice 20.20.20.20 -> StoringDataPeriodically->Init -> No sotre file id
2022-12-05 10:15:16.999 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.000 +01:00 [INF] MeasureDevice 20.20.20.20 -> StoringDataPeriodically->Init -> New sotre file id 2022-12-5-10-15.txt
2022-12-05 10:15:17.001 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:47,945;138;34,89583206176758
2022-12-05 10:15:17.002 +01:00 [INF] MeasureDevice 20.20.20.20 -> StoringDataPeriodically->Init -> No CPU data store periodically
2022-12-05 10:15:17.004 +01:00 [INF] MeasureDevice 20.20.20.20 -> StoringDataPeriodically->Init -> New CPU data store d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:17.005 +01:00 [INF] MeasureDevice 20.20.20.20 -> StoringDataPeriodically->Init -> First Data Id is: 
2022-12-05 10:15:17.010 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:16.9913875+01:00" stamp is good.
2022-12-05 10:15:17.012 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:15:17.013 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:17.015 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> File not exsist. File created.
2022-12-05 10:15:17.016 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:15:16,991;1;87,50071716308594 stored.
2022-12-05 10:15:17.017 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:17.041 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.042 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.043 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.044 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:47,977;139;18,613895416259766
2022-12-05 10:15:17.072 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.073 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.075 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.076 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:48,073;140;65,1668930053711
2022-12-05 10:15:17.084 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:15:17)
2022-12-05 10:15:17.087 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:15:17.089 +01:00 [INF] MeasureDevice 30.30.30.30 -> StoringDataPeriodically->Init -> Peek first data: CPU usage-> 75%.
2022-12-05 10:15:17.090 +01:00 [INF] MeasureDevice 30.30.30.30 -> StoringDataPeriodically->Init -> First mesured data: CPU usage-> 75%.
2022-12-05 10:15:17.092 +01:00 [INF] MeasureDevice 30.30.30.30 -> StoringDataPeriodically->Init -> No sotre file id
2022-12-05 10:15:17.093 +01:00 [INF] MeasureDevice 30.30.30.30 -> StoringDataPeriodically->Init -> New sotre file id 2022-12-5-10-15.txt
2022-12-05 10:15:17.095 +01:00 [INF] MeasureDevice 30.30.30.30 -> StoringDataPeriodically->Init -> No CPU data store periodically
2022-12-05 10:15:17.096 +01:00 [INF] MeasureDevice 30.30.30.30 -> StoringDataPeriodically->Init -> New CPU data store d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:17.097 +01:00 [INF] MeasureDevice 30.30.30.30 -> StoringDataPeriodically->Init -> First Data Id is: 
2022-12-05 10:15:17.099 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:17.0845294+01:00" stamp is good.
2022-12-05 10:15:17.103 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:15:17.105 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:17.105 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.106 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> File not exsist. File created.
2022-12-05 10:15:17.107 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.108 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:15:17,084;1;74,99504089355469 stored.
2022-12-05 10:15:17.109 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.111 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:17.112 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:48,105;141;67,43502807617188
2022-12-05 10:15:17.141 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.142 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.144 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.145 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:48,185;142;79,07228088378906
2022-12-05 10:15:17.172 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.173 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.174 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.175 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:48,201;143;2,33323335647583
2022-12-05 10:15:17.204 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.205 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.206 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.207 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:48,281;144;18,617965698242188
2022-12-05 10:15:17.232 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.233 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.234 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.235 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:48,312;145;21,86796760559082
2022-12-05 10:15:17.264 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.265 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.266 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.267 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:48,391;146;18,53498649597168
2022-12-05 10:15:17.295 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.296 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.298 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.299 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:48,423;147;2,3459529876708984
2022-12-05 10:15:17.329 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.330 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.331 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.332 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:48,502;148;37,506160736083984
2022-12-05 10:15:17.360 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.362 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.363 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.364 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:48,533;149;37,496559143066406
2022-12-05 10:15:17.391 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.392 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.394 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.395 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:48,611;150;61,90519714355469
2022-12-05 10:15:17.420 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.421 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.423 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.424 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:48,643;151;11,22020435333252
2022-12-05 10:15:17.452 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.453 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.454 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.455 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:48,721;152;18,633405685424805
2022-12-05 10:15:17.484 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.485 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.486 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.487 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:48,753;153;0
2022-12-05 10:15:17.514 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.515 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.516 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.517 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:48,833;154;2,3166487216949463
2022-12-05 10:15:17.547 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.548 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.550 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.551 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:48,863;155;34,88615036010742
2022-12-05 10:15:17.579 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.580 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.581 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.582 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:48,941;156;28,965648651123047
2022-12-05 10:15:17.608 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.609 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.611 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.612 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:48,973;157;80,4656753540039
2022-12-05 10:15:17.637 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.638 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.640 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.641 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:49,053;158;18,595422744750977
2022-12-05 10:15:17.669 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.671 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.672 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.673 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:49,101;159;32,483848571777344
2022-12-05 10:15:17.700 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.701 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.703 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.704 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:49,165;160;18,852466583251953
2022-12-05 10:15:17.737 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.738 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.740 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.741 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:49,213;161;54,9836540222168
2022-12-05 10:15:17.766 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.767 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.769 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.770 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:49,292;162;71,09832000732422
2022-12-05 10:15:17.808 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.809 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.810 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.811 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:49,323;163;53,52237319946289
2022-12-05 10:15:17.839 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.841 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.842 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.843 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:49,403;164;65,11463165283203
2022-12-05 10:15:17.871 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.872 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.874 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.875 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:49,435;165;59,343204498291016
2022-12-05 10:15:17.902 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.903 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.904 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.905 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:49,499;166;18,631526947021484
2022-12-05 10:15:17.934 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.935 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.937 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.938 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:49,531;167;11,221715927124023
2022-12-05 10:15:17.965 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:17.967 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:17.968 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:17.969 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:49,611;168;25,086875915527344
2022-12-05 10:15:18.003 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.004 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.006 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.007 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:49,641;169;11,225046157836914
2022-12-05 10:15:18.034 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.035 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.036 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.040 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:49,719;170;11,212132453918457
2022-12-05 10:15:18.081 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.082 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.083 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.086 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:49,750;171;0
2022-12-05 10:15:18.114 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.116 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.118 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.119 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:49,826;172;11,230694770812988
2022-12-05 10:15:18.146 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 15:18
2022-12-05 10:15:18.149 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.151 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:15:18.152 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.153 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:15:18.154 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.156 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:49,873;173;47,41495895385742
2022-12-05 10:15:18.163 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:15:18)
2022-12-05 10:15:18.166 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:15:18.167 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:18.1629929+01:00" stamp is good.
2022-12-05 10:15:18.169 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:15:18.171 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:18.173 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 20.20.20.20;2022-12-05 10:15:18,162;2;100
2022-12-05 10:15:18.175 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:15:18,162;2;100 stored.
2022-12-05 10:15:18.177 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:18.187 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.189 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.190 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.191 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:49,937;174;37,495361328125
2022-12-05 10:15:18.222 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.224 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.225 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.227 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:49,968;175;50,00352096557617
2022-12-05 10:15:18.253 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.254 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.255 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.259 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:50,046;176;34,892578125
2022-12-05 10:15:18.292 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.293 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.295 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.296 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:50,078;177;28,974044799804688
2022-12-05 10:15:18.325 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.327 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.328 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.330 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:50,158;178;35,05494689941406
2022-12-05 10:15:18.358 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.359 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.361 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.362 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:50,190;179;2,6719954013824463
2022-12-05 10:15:18.391 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.392 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.393 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.394 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:50,270;180;18,61441993713379
2022-12-05 10:15:18.421 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.422 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.423 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.425 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:50,302;181;11,210517883300781
2022-12-05 10:15:18.456 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.457 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.458 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.460 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:50,382;182;18,837785720825195
2022-12-05 10:15:18.486 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.487 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.488 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.489 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:50,414;183;11,506606101989746
2022-12-05 10:15:18.518 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.519 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.520 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.521 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:50,488;184;37,495758056640625
2022-12-05 10:15:18.560 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.561 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.562 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.563 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:50,519;185;50,00352096557617
2022-12-05 10:15:18.590 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.592 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.593 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.594 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:50,597;186;12,271324157714844
2022-12-05 10:15:18.622 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.624 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.625 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.626 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:50,628;187;61,5673713684082
2022-12-05 10:15:18.654 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.655 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.656 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.657 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:50,703;188;37,629093170166016
2022-12-05 10:15:18.686 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.687 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.688 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.690 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:50,735;189;75,32951354980469
2022-12-05 10:15:18.716 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.718 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.719 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.720 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:50,813;190;0
2022-12-05 10:15:18.754 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.755 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.756 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.758 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:50,845;191;0
2022-12-05 10:15:18.783 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.785 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.786 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.787 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:50,936;192;18,59829330444336
2022-12-05 10:15:18.815 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.817 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.818 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.821 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:50,967;193;41,41695785522461
2022-12-05 10:15:18.853 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.855 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.856 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.857 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:51,052;194;37,35799789428711
2022-12-05 10:15:18.884 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.886 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.887 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.888 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:51,084;195;37,502159118652344
2022-12-05 10:15:18.917 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.918 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.919 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.920 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:51,162;196;37,499759674072266
2022-12-05 10:15:18.949 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.950 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.951 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.952 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:51,193;197;50
2022-12-05 10:15:18.981 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:18.982 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:18.983 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:18.984 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:51,271;198;50,1063346862793
2022-12-05 10:15:19.013 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.014 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.016 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.017 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:51,302;199;50,0015983581543
2022-12-05 10:15:19.053 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.055 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.056 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.057 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:51,381;200;11,217782974243164
2022-12-05 10:15:19.082 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.083 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.086 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.087 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:51,412;201;11,444816589355469
2022-12-05 10:15:19.113 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.114 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.117 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.118 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:51,492;202;24,880964279174805
2022-12-05 10:15:19.145 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.146 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.148 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.150 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:51,524;203;11,506606101989746
2022-12-05 10:15:19.174 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.175 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.176 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.180 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:51,620;204;51,172142028808594
2022-12-05 10:15:19.206 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.207 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.209 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.212 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:51,652;205;49,039833068847656
2022-12-05 10:15:19.237 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.238 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.240 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.240 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 15:19
2022-12-05 10:15:19.243 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:51,732;206;72,09811401367188
2022-12-05 10:15:19.244 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:15:19.246 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:15:19.256 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:15:19)
2022-12-05 10:15:19.259 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:15:19.261 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:19.2566033+01:00" stamp is good.
2022-12-05 10:15:19.262 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:15:19.263 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:19.265 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 30.30.30.30;2022-12-05 10:15:19,256;2;75,00303649902344
2022-12-05 10:15:19.266 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:15:19,256;2;75,00303649902344 stored.
2022-12-05 10:15:19.268 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:19.278 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.279 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.280 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.281 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:51,748;207;0
2022-12-05 10:15:19.318 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.319 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.320 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.321 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:51,826;208;0
2022-12-05 10:15:19.349 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.351 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.352 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.353 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:51,858;209;2,3518118858337402
2022-12-05 10:15:19.380 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.382 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.383 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.384 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:51,938;210;24,952547073364258
2022-12-05 10:15:19.414 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.415 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.417 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.418 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:51,970;211;11,216975212097168
2022-12-05 10:15:19.449 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.451 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.452 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.453 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:52,049;212;18,622034072875977
2022-12-05 10:15:19.483 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.484 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.485 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.486 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:52,080;213;46,89344024658203
2022-12-05 10:15:19.515 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.517 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.518 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.519 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:52,160;214;11,488158226013184
2022-12-05 10:15:19.558 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.560 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.561 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.562 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:52,192;215;11,225046157836914
2022-12-05 10:15:19.590 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.591 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.592 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.593 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:52,272;216;18,636951446533203
2022-12-05 10:15:19.621 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.623 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.624 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.625 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:52,320;217;55,607025146484375
2022-12-05 10:15:19.654 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.655 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.657 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.658 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:52,400;218;78,29594421386719
2022-12-05 10:15:19.686 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.687 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.688 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.690 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:52,431;219;68,74825286865234
2022-12-05 10:15:19.717 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.718 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.720 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.721 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:52,494;220;34,9012565612793
2022-12-05 10:15:19.752 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.753 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.755 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.759 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:52,542;221;63,87767028808594
2022-12-05 10:15:19.787 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.789 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.790 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.791 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:52,620;222;56,596553802490234
2022-12-05 10:15:19.828 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.829 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.830 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.831 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:52,650;223;57,53883743286133
2022-12-05 10:15:19.864 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.865 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.867 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.868 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:52,712;224;18,619321823120117
2022-12-05 10:15:19.894 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.895 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.898 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.899 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:52,760;225;49,36033248901367
2022-12-05 10:15:19.924 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.925 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.927 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.930 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:52,838;226;49,36333465576172
2022-12-05 10:15:19.956 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.958 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.960 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.961 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:52,870;227;74,52146911621094
2022-12-05 10:15:19.988 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:19.990 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:19.993 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:19.994 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:52,950;228;65,16441345214844
2022-12-05 10:15:20.032 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.033 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.034 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.035 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:52,982;229;68,79692840576172
2022-12-05 10:15:20.066 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.067 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.071 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.072 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:53,060;230;51,17143630981445
2022-12-05 10:15:20.102 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.103 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.104 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.105 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:53,076;231;2,226649761199951
2022-12-05 10:15:20.133 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.134 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.135 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.136 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:53,154;232;0
2022-12-05 10:15:20.146 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 15:20
2022-12-05 10:15:20.149 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:15:20.151 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:15:20.163 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:15:20)
2022-12-05 10:15:20.166 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 87,51%. is added to queue
2022-12-05 10:15:20.167 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:20.1637042+01:00" stamp is good.
2022-12-05 10:15:20.168 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.169 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:15:20.170 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.171 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:20.172 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.173 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 20.20.20.20;2022-12-05 10:15:20,163;3;87,50775146484375
2022-12-05 10:15:20.174 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:53,186;233;46,737510681152344
2022-12-05 10:15:20.176 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:15:20,163;3;87,50775146484375 stored.
2022-12-05 10:15:20.186 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:20.265 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.267 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.268 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.269 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:53,266;234;18,617286682128906
2022-12-05 10:15:20.298 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.299 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.301 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.302 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:53,298;235;11,466492652893066
2022-12-05 10:15:20.330 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.331 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.332 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.333 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:53,378;236;55,04664611816406
2022-12-05 10:15:20.361 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.362 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.363 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.364 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:53,410;237;11,2210111618042
2022-12-05 10:15:20.392 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.394 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.395 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.398 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:53,490;238;18,6200008392334
2022-12-05 10:15:20.428 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.429 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.430 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.431 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:53,520;239;2,3429999351501465
2022-12-05 10:15:20.458 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.461 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.463 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.464 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:53,599;240;28,979209899902344
2022-12-05 10:15:20.495 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.496 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.497 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.498 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:53,630;241;60,94268798828125
2022-12-05 10:15:20.527 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.529 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.530 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.531 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:53,708;242;18,619321823120117
2022-12-05 10:15:20.568 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.570 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.571 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.572 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:53,740;243;11,22252368927002
2022-12-05 10:15:20.597 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.598 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.601 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.602 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:53,820;244;24,87364387512207
2022-12-05 10:15:20.629 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.630 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.632 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.634 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:53,842;245;0
2022-12-05 10:15:20.658 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.659 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.661 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.662 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:53,948;246;51,17143630981445
2022-12-05 10:15:20.691 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.692 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.695 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.696 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:53,978;247;57,54197692871094
2022-12-05 10:15:20.722 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.723 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.727 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.728 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:54,058;248;54,92547607421875
2022-12-05 10:15:20.763 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.764 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.765 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.766 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:54,090;249;59,305084228515625
2022-12-05 10:15:20.794 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.795 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.797 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.798 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:54,169;250;56,59751892089844
2022-12-05 10:15:20.826 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.827 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.828 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.829 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:54,200;251;60,93431854248047
2022-12-05 10:15:20.858 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.859 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.860 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.862 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:54,276;252;47,41536331176758
2022-12-05 10:15:20.892 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.893 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.894 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.895 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:54,307;253;60,936038970947266
2022-12-05 10:15:20.922 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.924 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.925 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.926 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:54,400;254;56,65568161010742
2022-12-05 10:15:20.955 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.957 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.958 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.960 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:54,432;255;57,52147674560547
2022-12-05 10:15:20.986 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:20.987 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:20.989 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:20.990 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:54,512;256;44,19622802734375
2022-12-05 10:15:21.036 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.038 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.039 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.040 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:54,544;257;62,4379768371582
2022-12-05 10:15:21.052 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 15:21
2022-12-05 10:15:21.056 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:15:21.058 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:15:21.066 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.067 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.068 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.069 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:15:21)
2022-12-05 10:15:21.072 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:54,608;258;18,615097045898438
2022-12-05 10:15:21.073 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:15:21.076 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:21.0697504+01:00" stamp is good.
2022-12-05 10:15:21.077 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:15:21.079 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:21.080 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 10.10.10.10;2022-12-05 10:15:21,069;2;74,99664306640625
2022-12-05 10:15:21.081 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:15:21,069;2;74,99664306640625 stored.
2022-12-05 10:15:21.083 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:21.099 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.102 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.103 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.104 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:54,640;259;18,622713088989258
2022-12-05 10:15:21.131 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.132 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.134 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.135 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:54,720;260;35,02848434448242
2022-12-05 10:15:21.161 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.163 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.164 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.165 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:54,752;261;21,86796760559082
2022-12-05 10:15:21.189 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.190 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.192 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.193 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:54,833;262;62,41637420654297
2022-12-05 10:15:21.222 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.224 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.227 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.228 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:54,865;263;64,59947967529297
2022-12-05 10:15:21.254 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.256 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.259 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.260 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:54,943;264;18,869476318359375
2022-12-05 10:15:21.297 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.298 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.299 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.301 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:54,974;265;11,316145896911621
2022-12-05 10:15:21.330 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.332 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.333 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.336 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:55,053;266;37,63825225830078
2022-12-05 10:15:21.364 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.366 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.367 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.368 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:55,085;267;37,495758056640625
2022-12-05 10:15:21.396 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.398 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.399 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.400 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:55,164;268;34,856204986572266
2022-12-05 10:15:21.430 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.432 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.433 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.434 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:55,203;269;37,49911880493164
2022-12-05 10:15:21.464 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.466 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.467 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.468 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:55,303;270;72,09251403808594
2022-12-05 10:15:21.503 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.505 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.506 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.507 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:55,329;271;0
2022-12-05 10:15:21.533 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.534 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.535 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.536 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:56,317;272;11,231399536132812
2022-12-05 10:15:21.565 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.566 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.568 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.578 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:56,349;273;11,193561553955078
2022-12-05 10:15:21.603 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.605 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.606 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.607 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:57,328;274;35,0765380859375
2022-12-05 10:15:21.636 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.637 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.638 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.639 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:57,360;275;46,865562438964844
2022-12-05 10:15:21.667 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.668 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.670 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.671 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:58,345;276;50,0511474609375
2022-12-05 10:15:21.700 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.701 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.702 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.703 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:58,377;277;50,000640869140625
2022-12-05 10:15:21.731 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.733 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.734 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.735 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:59,355;278;37,502159118652344
2022-12-05 10:15:21.763 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.765 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.766 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.767 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:12:59,386;279;37,49176025390625
2022-12-05 10:15:21.803 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.804 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.805 +01:00 [INF] SendBackupFileSystem -> All line from d:\tuw\log\10.10.10.10\2022-12-5-10-12.bak is sended.
2022-12-05 10:15:21.807 +01:00 [INF] SendBackupFileSystem -> Precessed file:d:\tuw\log\10.10.10.10\2022-12-5-10-13.bak.
2022-12-05 10:15:21.809 +01:00 [INF] SendBackupFileSystem -> Number of line in file 15.
2022-12-05 10:15:21.810 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.811 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:13:00,390;2;0
2022-12-05 10:15:21.839 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.841 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.842 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.843 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:13:01,375;3;37,4935188293457
2022-12-05 10:15:21.871 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.872 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.873 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.874 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:13:01,406;4;37,43008041381836
2022-12-05 10:15:21.902 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.903 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.905 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.906 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:13:02,403;5;44,197425842285156
2022-12-05 10:15:21.936 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.937 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.938 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.939 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:13:02,434;6;53,49869155883789
2022-12-05 10:15:21.967 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:21.968 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:21.969 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:21.971 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:13:03,412;7;70,67931365966797
2022-12-05 10:15:22.008 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:22.009 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:22.010 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:22.011 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:13:03,444;8;11,2210111618042
2022-12-05 10:15:22.042 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:22.043 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:22.044 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:22.046 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:13:04,415;9;63,56887435913086
2022-12-05 10:15:22.074 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:22.076 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:22.077 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:22.078 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:13:04,479;10;51,171260833740234
2022-12-05 10:15:22.107 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:22.108 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:22.110 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:22.111 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:13:05,424;11;37,63945007324219
2022-12-05 10:15:22.138 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:22.140 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:22.141 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:22.142 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:13:05,471;12;37,466941833496094
2022-12-05 10:15:22.162 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 15:22
2022-12-05 10:15:22.164 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:15:22.166 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:15:22.170 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:22.171 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:22.172 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:22.173 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:13:33,401;13;37,422462463378906
2022-12-05 10:15:22.178 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:15:22)
2022-12-05 10:15:22.181 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 74,99%. is added to queue
2022-12-05 10:15:22.183 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:22.1783060+01:00" stamp is good.
2022-12-05 10:15:22.184 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:15:22.185 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:22.187 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 20.20.20.20;2022-12-05 10:15:22,178;4;74,98606872558594
2022-12-05 10:15:22.188 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:15:22,178;4;74,98606872558594 stored.
2022-12-05 10:15:22.190 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:22.203 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:22.204 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:22.205 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:22.206 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:13:34,407;14;37,49095916748047
2022-12-05 10:15:22.234 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:22.236 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:22.237 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:22.238 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:13:35,430;15;18,613895416259766
2022-12-05 10:15:22.240 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 15:22
2022-12-05 10:15:22.243 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:15:22.244 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:15:22.258 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:15:22)
2022-12-05 10:15:22.261 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:15:22.263 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:22.2580699+01:00" stamp is good.
2022-12-05 10:15:22.264 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:15:22.265 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:22.267 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 30.30.30.30;2022-12-05 10:15:22,258;3;75,00016021728516
2022-12-05 10:15:22.268 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:15:22,258;3;75,00016021728516 stored.
2022-12-05 10:15:22.269 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:22.270 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:22.271 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:22.277 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:22.278 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:13:36,448;16;37,49856185913086
2022-12-05 10:15:22.306 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:22.316 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:22.317 +01:00 [INF] SendBackupFileSystem -> All line from d:\tuw\log\10.10.10.10\2022-12-5-10-13.bak is sended.
2022-12-05 10:15:22.319 +01:00 [INF] SendBackupFileSystem -> Precessed file:d:\tuw\log\10.10.10.10\2022-12-5-10-14.bak.
2022-12-05 10:15:22.320 +01:00 [INF] SendBackupFileSystem -> Number of line in file 11.
2022-12-05 10:15:22.322 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:22.340 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:14:17,811;2;18,841157913208008
2022-12-05 10:15:22.364 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:22.365 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:22.367 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:22.368 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:14:18,842;3;18,846553802490234
2022-12-05 10:15:22.394 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:22.396 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:22.398 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:22.399 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:14:19,850;4;37,51215744018555
2022-12-05 10:15:22.424 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:22.425 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:22.426 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:22.427 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:14:20,869;5;42,12898635864258
2022-12-05 10:15:22.456 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:22.458 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:22.459 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:22.462 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:14:21,886;6;72,09562683105469
2022-12-05 10:15:22.488 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:22.489 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:22.492 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:22.494 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:14:22,877;7;18,59829330444336
2022-12-05 10:15:22.520 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:22.521 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:22.525 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:22.526 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:14:23,886;8;37,50136184692383
2022-12-05 10:15:22.559 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:22.560 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:22.562 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:22.563 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:14:24,898;9;37,38290023803711
2022-12-05 10:15:22.591 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:22.592 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:22.594 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:22.595 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:14:25,906;10;35,036048889160156
2022-12-05 10:15:22.625 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:22.627 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:22.628 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:22.629 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:14:26,932;11;65,12335205078125
2022-12-05 10:15:22.657 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:22.658 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:22.659 +01:00 [INF] CPUAPIService -> Uri is http://localhost:5001/api/cpuusage
2022-12-05 10:15:22.661 +01:00 [INF] CPUAPIService -> Sended data -> 10.10.10.10;2022-12-05 10:14:27,950;12;62,43783187866211
2022-12-05 10:15:22.691 +01:00 [INF] CPUAPIService -> StringContent-> Status code: "OK"
2022-12-05 10:15:22.693 +01:00 [INF] SendBackupFileSystem -> Status code after sending "OK".
2022-12-05 10:15:22.695 +01:00 [INF] SendBackupFileSystem -> All line from d:\tuw\log\10.10.10.10\2022-12-5-10-14.bak is sended.
2022-12-05 10:15:24.177 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 15:24
2022-12-05 10:15:24.179 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:15:24.181 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:15:24.194 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:15:24)
2022-12-05 10:15:24.195 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:15:24.197 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:24.1940035+01:00" stamp is good.
2022-12-05 10:15:24.198 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:15:24.200 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:24.201 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 20.20.20.20;2022-12-05 10:15:24,194;5;75
2022-12-05 10:15:24.202 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:15:24,194;5;75 stored.
2022-12-05 10:15:24.204 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:25.256 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 15:25
2022-12-05 10:15:25.257 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:15:25.259 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:15:25.271 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:15:25)
2022-12-05 10:15:25.274 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:15:25.275 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:25.2719775+01:00" stamp is good.
2022-12-05 10:15:25.276 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:15:25.277 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:25.278 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 30.30.30.30;2022-12-05 10:15:25,271;4;74,99664306640625
2022-12-05 10:15:25.280 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:15:25,271;4;74,99664306640625 stored.
2022-12-05 10:15:25.281 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:26.061 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 15:26
2022-12-05 10:15:26.063 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:15:26.064 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:15:26.077 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:15:26)
2022-12-05 10:15:26.079 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:15:26.081 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:26.0777815+01:00" stamp is good.
2022-12-05 10:15:26.083 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:15:26.085 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:26.087 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 10.10.10.10;2022-12-05 10:15:26,077;3;74,99903869628906
2022-12-05 10:15:26.089 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:15:26,077;3;74,99903869628906 stored.
2022-12-05 10:15:26.090 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:26.186 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 15:26
2022-12-05 10:15:26.188 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:15:26.189 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:15:26.202 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:15:26)
2022-12-05 10:15:26.204 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:15:26.206 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:26.2028208+01:00" stamp is good.
2022-12-05 10:15:26.207 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:15:26.209 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:26.210 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 20.20.20.20;2022-12-05 10:15:26,202;6;75,00287628173828
2022-12-05 10:15:26.211 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:15:26,202;6;75,00287628173828 stored.
2022-12-05 10:15:26.213 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:28.198 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 15:28
2022-12-05 10:15:28.200 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:15:28.201 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:15:28.214 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:15:28)
2022-12-05 10:15:28.216 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:15:28.218 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:28.2142639+01:00" stamp is good.
2022-12-05 10:15:28.219 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:15:28.221 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:28.222 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 20.20.20.20;2022-12-05 10:15:28,214;7;75,00176239013672
2022-12-05 10:15:28.224 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:15:28,214;7;75,00176239013672 stored.
2022-12-05 10:15:28.225 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:28.261 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 15:28
2022-12-05 10:15:28.262 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:15:28.263 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:15:28.276 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:15:28)
2022-12-05 10:15:28.279 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:15:28.280 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:28.2767771+01:00" stamp is good.
2022-12-05 10:15:28.281 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:15:28.283 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:28.284 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 30.30.30.30;2022-12-05 10:15:28,276;5;74,99983978271484
2022-12-05 10:15:28.285 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:15:28,276;5;74,99983978271484 stored.
2022-12-05 10:15:28.286 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:30.204 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 15:30
2022-12-05 10:15:30.206 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:15:30.207 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:15:30.221 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:15:30)
2022-12-05 10:15:30.223 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:15:30.224 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:30.2210858+01:00" stamp is good.
2022-12-05 10:15:30.226 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:15:30.227 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:30.228 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 20.20.20.20;2022-12-05 10:15:30,221;8;100
2022-12-05 10:15:30.230 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:15:30,221;8;100 stored.
2022-12-05 10:15:30.231 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:31.064 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 15:31
2022-12-05 10:15:31.066 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:15:31.067 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:15:31.080 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:15:31)
2022-12-05 10:15:31.082 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:15:31.083 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:31.0800451+01:00" stamp is good.
2022-12-05 10:15:31.085 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:15:31.086 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:31.087 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 10.10.10.10;2022-12-05 10:15:31,080;4;75,00176239013672
2022-12-05 10:15:31.088 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:15:31,080;4;75,00176239013672 stored.
2022-12-05 10:15:31.090 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:31.267 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 15:31
2022-12-05 10:15:31.268 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:15:31.270 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:15:31.283 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:15:31)
2022-12-05 10:15:31.285 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:15:31.286 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:31.2831903+01:00" stamp is good.
2022-12-05 10:15:31.288 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:15:31.289 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:31.291 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 30.30.30.30;2022-12-05 10:15:31,283;6;75,00048065185547
2022-12-05 10:15:31.292 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:15:31,283;6;75,00048065185547 stored.
2022-12-05 10:15:31.294 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:32.214 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 15:32
2022-12-05 10:15:32.216 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:15:32.217 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:15:32.230 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:15:32)
2022-12-05 10:15:32.232 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 87,5%. is added to queue
2022-12-05 10:15:32.234 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:32.2305754+01:00" stamp is good.
2022-12-05 10:15:32.235 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:15:32.236 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:32.237 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 20.20.20.20;2022-12-05 10:15:32,230;9;87,50007629394531
2022-12-05 10:15:32.238 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:15:32,230;9;87,50007629394531 stored.
2022-12-05 10:15:32.240 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:34.217 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 15:34
2022-12-05 10:15:34.218 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:15:34.219 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:15:34.237 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:15:34)
2022-12-05 10:15:34.238 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:15:34.239 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:34.2373323+01:00" stamp is good.
2022-12-05 10:15:34.241 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:15:34.242 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:34.243 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 20.20.20.20;2022-12-05 10:15:34,237;10;100
2022-12-05 10:15:34.245 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:15:34,237;10;100 stored.
2022-12-05 10:15:34.246 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:34.279 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 15:34
2022-12-05 10:15:34.281 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:15:34.282 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:15:34.295 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:15:34)
2022-12-05 10:15:34.297 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 87,5%. is added to queue
2022-12-05 10:15:34.298 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:34.2955862+01:00" stamp is good.
2022-12-05 10:15:34.300 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:15:34.301 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:34.302 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 30.30.30.30;2022-12-05 10:15:34,295;7;87,49687957763672
2022-12-05 10:15:34.303 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:15:34,295;7;87,49687957763672 stored.
2022-12-05 10:15:34.305 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:36.081 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 15:36
2022-12-05 10:15:36.082 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:15:36.084 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:15:36.097 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:15:36)
2022-12-05 10:15:36.099 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:15:36.100 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:36.0970115+01:00" stamp is good.
2022-12-05 10:15:36.101 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:15:36.103 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:36.104 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 10.10.10.10;2022-12-05 10:15:36,097;5;74,99951934814453
2022-12-05 10:15:36.105 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:15:36,097;5;74,99951934814453 stored.
2022-12-05 10:15:36.107 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:36.221 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 15:36
2022-12-05 10:15:36.223 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:15:36.224 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:15:36.237 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:15:36)
2022-12-05 10:15:36.239 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:15:36.241 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:36.2377284+01:00" stamp is good.
2022-12-05 10:15:36.242 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:15:36.243 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:36.245 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 20.20.20.20;2022-12-05 10:15:36,237;11;75,0014419555664
2022-12-05 10:15:36.246 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:15:36,237;11;75,0014419555664 stored.
2022-12-05 10:15:36.247 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:37.284 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 15:37
2022-12-05 10:15:37.286 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:15:37.287 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:15:37.300 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:15:37)
2022-12-05 10:15:37.302 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:15:37.304 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:37.3005330+01:00" stamp is good.
2022-12-05 10:15:37.305 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:15:37.307 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:37.308 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 30.30.30.30;2022-12-05 10:15:37,300;8;75,00367736816406
2022-12-05 10:15:37.309 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:15:37,300;8;75,00367736816406 stored.
2022-12-05 10:15:37.311 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:38.232 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 15:38
2022-12-05 10:15:38.234 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:15:38.235 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:15:38.248 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:15:38)
2022-12-05 10:15:38.251 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:15:38.252 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:38.2484010+01:00" stamp is good.
2022-12-05 10:15:38.254 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:15:38.255 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:38.256 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 20.20.20.20;2022-12-05 10:15:38,248;12;100
2022-12-05 10:15:38.258 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:15:38,248;12;100 stored.
2022-12-05 10:15:38.259 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:40.241 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 15:40
2022-12-05 10:15:40.242 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:15:40.244 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:15:40.256 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:15:40)
2022-12-05 10:15:40.259 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:15:40.260 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:40.2569586+01:00" stamp is good.
2022-12-05 10:15:40.261 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:15:40.263 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:40.264 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 20.20.20.20;2022-12-05 10:15:40,256;13;74,9974365234375
2022-12-05 10:15:40.265 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:15:40,256;13;74,9974365234375 stored.
2022-12-05 10:15:40.267 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:40.303 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 15:40
2022-12-05 10:15:40.305 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:15:40.306 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:15:40.319 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:15:40)
2022-12-05 10:15:40.321 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:15:40.323 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:40.3193578+01:00" stamp is good.
2022-12-05 10:15:40.324 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:15:40.326 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:40.327 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 30.30.30.30;2022-12-05 10:15:40,319;9;74,9968032836914
2022-12-05 10:15:40.328 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:15:40,319;9;74,9968032836914 stored.
2022-12-05 10:15:40.330 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:41.084 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 15:41
2022-12-05 10:15:41.086 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:15:41.088 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:15:41.100 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:15:41)
2022-12-05 10:15:41.102 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 75,01%. is added to queue
2022-12-05 10:15:41.104 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:41.1005873+01:00" stamp is good.
2022-12-05 10:15:41.105 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:15:41.107 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:41.108 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 10.10.10.10;2022-12-05 10:15:41,100;6;75,0078353881836
2022-12-05 10:15:41.109 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:15:41,100;6;75,0078353881836 stored.
2022-12-05 10:15:41.111 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:42.256 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 15:42
2022-12-05 10:15:42.258 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:15:42.259 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:15:42.272 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:15:42)
2022-12-05 10:15:42.274 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:15:42.276 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:42.2724040+01:00" stamp is good.
2022-12-05 10:15:42.277 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:15:42.278 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:42.279 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 20.20.20.20;2022-12-05 10:15:42,272;14;74,99711608886719
2022-12-05 10:15:42.281 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:15:42,272;14;74,99711608886719 stored.
2022-12-05 10:15:42.282 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:43.319 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 15:43
2022-12-05 10:15:43.320 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:15:43.321 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:15:43.335 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:15:43)
2022-12-05 10:15:43.337 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 87,5%. is added to queue
2022-12-05 10:15:43.339 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:43.3352330+01:00" stamp is good.
2022-12-05 10:15:43.340 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:15:43.341 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:43.343 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 30.30.30.30;2022-12-05 10:15:43,335;10;87,49935913085938
2022-12-05 10:15:43.344 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:15:43,335;10;87,49935913085938 stored.
2022-12-05 10:15:43.346 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:44.256 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 15:44
2022-12-05 10:15:44.258 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:15:44.259 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:15:44.272 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:15:44)
2022-12-05 10:15:44.275 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:15:44.276 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:44.2727262+01:00" stamp is good.
2022-12-05 10:15:44.278 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:15:44.279 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:44.281 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 20.20.20.20;2022-12-05 10:15:44,272;15;100
2022-12-05 10:15:44.283 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:15:44,272;15;100 stored.
2022-12-05 10:15:44.285 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:46.097 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 15:46
2022-12-05 10:15:46.099 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:15:46.100 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:15:46.113 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:15:46)
2022-12-05 10:15:46.116 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:15:46.117 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:46.1136031+01:00" stamp is good.
2022-12-05 10:15:46.119 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:15:46.120 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:46.121 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 10.10.10.10;2022-12-05 10:15:46,113;7;74,99823760986328
2022-12-05 10:15:46.122 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:15:46,113;7;74,99823760986328 stored.
2022-12-05 10:15:46.124 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:46.271 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 15:46
2022-12-05 10:15:46.273 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:15:46.274 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:15:46.287 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:15:46)
2022-12-05 10:15:46.289 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 100%. is added to queue
2022-12-05 10:15:46.291 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:46.2879576+01:00" stamp is good.
2022-12-05 10:15:46.292 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:15:46.293 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:46.294 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 20.20.20.20;2022-12-05 10:15:46,287;16;100
2022-12-05 10:15:46.296 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:15:46,287;16;100 stored.
2022-12-05 10:15:46.297 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:46.319 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 15:46
2022-12-05 10:15:46.321 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:15:46.322 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:15:46.335 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:15:46)
2022-12-05 10:15:46.338 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 84,94%. is added to queue
2022-12-05 10:15:46.339 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:46.3359370+01:00" stamp is good.
2022-12-05 10:15:46.340 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:15:46.342 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:46.343 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 30.30.30.30;2022-12-05 10:15:46,335;11;84,9402847290039
2022-12-05 10:15:46.344 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:15:46,335;11;84,9402847290039 stored.
2022-12-05 10:15:46.346 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:48.290 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 15:48
2022-12-05 10:15:48.292 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:15:48.293 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:15:48.306 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:15:48)
2022-12-05 10:15:48.308 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:15:48.310 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:48.3063531+01:00" stamp is good.
2022-12-05 10:15:48.311 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:15:48.312 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:48.314 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 20.20.20.20;2022-12-05 10:15:48,306;17;75,00271606445312
2022-12-05 10:15:48.315 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:15:48,306;17;75,00271606445312 stored.
2022-12-05 10:15:48.316 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:49.338 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 15:49
2022-12-05 10:15:49.340 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data: begin working.
2022-12-05 10:15:49.341 +01:00 [INF] MeasureDevice 30.30.30.30 -> prepare to measuring.
2022-12-05 10:15:49.354 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring time: 2022.12.05 10:15:49)
2022-12-05 10:15:49.356 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring result CPU usage-> 74,99%. is added to queue
2022-12-05 10:15:49.358 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:49.3544148+01:00" stamp is good.
2022-12-05 10:15:49.359 +01:00 [INF] MeasureDevice 30.30.30.30 -> Data to store:
2022-12-05 10:15:49.360 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:49.361 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 30.30.30.30;2022-12-05 10:15:49,354;12;74,99327850341797
2022-12-05 10:15:49.362 +01:00 [INF] MeasureDevice 30.30.30.30 -> 30.30.30.30;2022-12-05 10:15:49,354;12;74,99327850341797 stored.
2022-12-05 10:15:49.364 +01:00 [INF] MeasureDevice 30.30.30.30 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:50.299 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 15:50
2022-12-05 10:15:50.301 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:15:50.302 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:15:50.315 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:15:50)
2022-12-05 10:15:50.317 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 75%. is added to queue
2022-12-05 10:15:50.319 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:50.3155146+01:00" stamp is good.
2022-12-05 10:15:50.320 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:15:50.322 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:50.323 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 20.20.20.20;2022-12-05 10:15:50,315;18;75,00064086914062
2022-12-05 10:15:50.325 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:15:50,315;18;75,00064086914062 stored.
2022-12-05 10:15:50.326 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:51.117 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 15:51
2022-12-05 10:15:51.119 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:15:51.120 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:15:51.133 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:15:51)
2022-12-05 10:15:51.135 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 87,5%. is added to queue
2022-12-05 10:15:51.137 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:51.1339009+01:00" stamp is good.
2022-12-05 10:15:51.138 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:15:51.139 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:51.141 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 10.10.10.10;2022-12-05 10:15:51,133;8;87,50224304199219
2022-12-05 10:15:51.142 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:15:51,133;8;87,50224304199219 stored.
2022-12-05 10:15:51.144 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:51.537 +01:00 [INF] Application is shutting down...
2022-12-05 10:15:51.555 +01:00 [INF] SendBackupFileSystem -> Stop
2022-12-05 10:15:52.305 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 15:52
2022-12-05 10:15:52.307 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:15:52.308 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:15:52.321 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:15:52)
2022-12-05 10:15:52.323 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 62,5%. is added to queue
2022-12-05 10:15:52.325 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:52.3212028+01:00" stamp is good.
2022-12-05 10:15:52.326 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:15:52.327 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:52.328 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 20.20.20.20;2022-12-05 10:15:52,321;19;62,49816131591797
2022-12-05 10:15:52.329 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:15:52,321;19;62,49816131591797 stored.
2022-12-05 10:15:52.331 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:52.352 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 15:52
2022-12-05 10:15:54.308 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 15:54
2022-12-05 10:15:54.309 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:15:54.310 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:15:54.324 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:15:54)
2022-12-05 10:15:54.326 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 62,49%. is added to queue
2022-12-05 10:15:54.327 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:54.3240576+01:00" stamp is good.
2022-12-05 10:15:54.328 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:15:54.330 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:54.331 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 20.20.20.20;2022-12-05 10:15:54,324;20;62,49359893798828
2022-12-05 10:15:54.332 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:15:54,324;20;62,49359893798828 stored.
2022-12-05 10:15:54.333 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:55.363 +01:00 [INF] MeasureDevice 30.30.30.30:  ExecuteAsync 2022.12.05 10: 15:55
2022-12-05 10:15:56.123 +01:00 [INF] MeasureDevice 10.10.10.10:  ExecuteAsync 2022.12.05 10: 15:56
2022-12-05 10:15:56.125 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data: begin working.
2022-12-05 10:15:56.126 +01:00 [INF] MeasureDevice 10.10.10.10 -> prepare to measuring.
2022-12-05 10:15:56.139 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring time: 2022.12.05 10:15:56)
2022-12-05 10:15:56.141 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring result CPU usage-> 62,5%. is added to queue
2022-12-05 10:15:56.143 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:56.1392087+01:00" stamp is good.
2022-12-05 10:15:56.144 +01:00 [INF] MeasureDevice 10.10.10.10 -> Data to store:
2022-12-05 10:15:56.145 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:56.147 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 10.10.10.10;2022-12-05 10:15:56,139;9;62,50151824951172
2022-12-05 10:15:56.148 +01:00 [INF] MeasureDevice 10.10.10.10 -> 10.10.10.10;2022-12-05 10:15:56,139;9;62,50151824951172 stored.
2022-12-05 10:15:56.150 +01:00 [INF] MeasureDevice 10.10.10.10 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:56.310 +01:00 [INF] MeasureDevice 20.20.20.20:  ExecuteAsync 2022.12.05 10: 15:56
2022-12-05 10:15:56.312 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data: begin working.
2022-12-05 10:15:56.313 +01:00 [INF] MeasureDevice 20.20.20.20 -> prepare to measuring.
2022-12-05 10:15:56.326 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring time: 2022.12.05 10:15:56)
2022-12-05 10:15:56.328 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring result CPU usage-> 62,5%. is added to queue
2022-12-05 10:15:56.330 +01:00 [INF] PeriodicallyStoreSystem  -> The "2022-12-05T10:15:56.3267248+01:00" stamp is good.
2022-12-05 10:15:56.331 +01:00 [INF] MeasureDevice 20.20.20.20 -> Data to store:
2022-12-05 10:15:56.332 +01:00 [INF] PeriodicallyStoreSystem  -> Write to data: d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:56.333 +01:00 [INF] MeasuringDataStore 2022-12-5-10-15.txt -> Data is stored: 20.20.20.20;2022-12-05 10:15:56,326;21;62,50407791137695
2022-12-05 10:15:56.334 +01:00 [INF] MeasureDevice 20.20.20.20 -> 20.20.20.20;2022-12-05 10:15:56,326;21;62,50407791137695 stored.
2022-12-05 10:15:56.336 +01:00 [INF] MeasureDevice 20.20.20.20 -> Measuring data stored to log file d:\tuw\log\2022-12-5-10-15.txt
2022-12-05 10:15:56.547 +01:00 [FTL] measuring-system stopped unexpectedly
2022-12-05 10:15:56.549 +01:00 [FTL] The operation was canceled.
