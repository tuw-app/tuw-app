@page "/md/cpu/{ipaddress}"

@using DataModel.EFDataModel;
@using DataModel.MDDataModel;
@using MeasureFrontend.Services;
@using MeasuringServer.Model.Paging;


@inject IAPIMeasureDeviceService APIMeasureDeviceService;
@inject IAPICPUUsageService APICPUUsageService;
   
<div class="container bg-light text-bg-dark">

    <h3><strong>@IPAddress</strong> mérőelem</h3>
    <p><a href="status"><span class="oi oi-aperture"></span>Vissza a mérőelemekhez</a></p>
    @if (CPUUsages == null)
    {
        <p>Az adatok betöltés alatt...</p>
    }
    else
    {
 


        <div class="container" style="margin-top:20px">
            <div class="row">
                <div class="col-sm">
                    <p>Az intervallum kezdete: @StartDateTimeStr</p>
                    <label for="startDateTime">
                        Intervallum kezdete:
                    </label>
                    <input type="datetime-local" @bind="@startDateTime" step="1" />                    
                </div>          

                <div class="col-sm">
                    <p>Az intervallum vége: @EndDateTimeStr</p>
                
                        <label for="startDateTime">
                            Intervallum vége:
                        </label>
                    <input type="datetime-local" @bind="@endDateTime" step="1" />
                </div>
            </div>
        </div>
        

        @if (@CPUUsages.Count == 0)
        {
        <p>Az elemhez nem tartozik mérés.</p>
        }
        else
        {

            <div class="container">
                <div class="table-wrapper">

                    <div class="table-title">
                        <div class="row">
                            <div class="col-sm-6">
                                <h2><b>Mérőeszközök</b> kezelése</h2>
                            </div>
                        </div>
                    </div>
                    
                    <div class="container">
                        <div class="row">
                            <div class="col-sm">
                                @if (CPUUsages.HavePrevius)
                                {
                                    <button class="btn btn-info" @onclick=' () =>PreviousPage()'>Előző</button>
                                }
                            </div>
                            <div class="col-sm">
                                @if (CPUUsages.HaveNext)
                                {
                                    <button class="btn btn-info" @onclick=' () =>NextPage()'>Következő</button>
                                }
                            </div>

                            <div class="col-sm">
                                <button class="btn btn-info" @onclick=' () => this.RefreshData()'>Adatok lekérése</button>
                            </div>
                        </div>
                    </div>

                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>IP cím</th>
                                <th>Mérés ideje</th>
                                <th>Mérés szám</th>
                                <th>CPU használat (%)</th>
                            </tr>
                        </thead>
                        @foreach (EFCPUUsage usage in CPUUsages.List)
                        {
                            <tr>
                                <td>@usage.IPAddress</td>
                                <td>@usage.MeasureTime.ToString("yyyy.MM.dd. HH:mm:ss");</td>
                                <td>@usage.DataID</td>
                                <td>@Math.Round(@usage.CPUUsage,3)</td>
                            </tr>
                        }
                    </table>
                </div>                
            </div>
        }
    }

</div>




@code {
    public PagedList<EFCPUUsage> CPUUsages { get; set; } = null;

    [Parameter]
    public string? IPAddress { get; set; }
    private int currentPage = 1;

    private DateTime startDateTime = DateTime.Now;
    private string StartDateTimeStr { get { return startDateTime.ToString("yyyy.MM.dd. HH:mm:ss"); } }
    private DateTime endDateTime = DateTime.Now;
    private string EndDateTimeStr { get { return endDateTime.ToString("yyyy.MM.dd. HH:mm:ss"); } }


    protected async override Task OnInitializedAsync()
    {
        //https://www.w3schools.com/tags/tryit.asp?filename=tryhtml5_input_type_datetime-local
        //https://stackoverflow.com/questions/58023438/cant-set-seconds-value-of-input-type-datetime-local-to-be-0

        startDateTime = DateTime.Now.AddDays(-1);


        await RefreshData();
    }

    protected async Task RefreshData()
    {
        Console.WriteLine($"Start: {StartDateTimeStr}");
        Console.WriteLine($"End: {EndDateTimeStr}");
        Console.WriteLine($"Current page: {EndDateTimeStr}");
        CPUUsages = new PagedList<EFCPUUsage>();
        CPUUsages = await CPUUsageService.GetAllCPUUsages(new MDIPAddress(IPAddress), startDateTime, endDateTime, currentPage, 30);

        Console.WriteLine($"Number of page: {CPUUsages.NumberOfPage}");
        Console.WriteLine($"Number page: {CPUUsages.Page}");
        Console.WriteLine($"Total page: {CPUUsages.NumberOfPage }");
        Console.WriteLine($"Total item: {CPUUsages.NumberOfItem}");
    }

    private async void NextPage()
    {
        currentPage += 1;
        await RefreshData();
    }

    private async void PreviousPage()
    {
        currentPage -= 1;
        await RefreshData();
    }

}
